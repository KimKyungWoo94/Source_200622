cscope 15 /media/sf_Source/200104_Application_source/PAR/src               0000355938
	@/media/sf_Source/200104_Application_source/PAR/src/PAR.c

1 
	~<°dio.h
>

2 
	~<m©h.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/sockë.h
>

7 
	~<√töë/ö.h
>

8 
	~<¨∑/öë.h
>

9 
	~<uni°d.h
>

10 
	~"msgQ.h
"

11 
	~<sys/msg.h
>

12 
	~<sys/ùc.h
>

13 
	~<sig«l.h
>

14 
	~<PAR.h
>

19 
	#BUFFSIZE
 1024

	)

20 
rsuInfo_t
 
	gg_rsu
;

21 
obuInfo_t
 
	gg_obu
;

22 
∑rMib
 
	gg_mib
;

23 
gps_d©a_t
 
	ggpsD©a
;

24 
∑rPackë_t
 
	gg_Packë
;

26 
∑rInfo_t
 *
	g°PARInfo
;

27 
lökedLi°
 *
	gLi°På
;

28 
	gídög
 = 0;

29 
boﬁ
 
	gshmCheck
 = 
Ál£
;

30 
±hªad_t
 
	grx_thªad
;

31 
±hªad_t
 
	gu£rSñe˘_thªad
;

32 
±hªad_t
 
	ggpsd_thªad
;

37 
	$sigöt_h™dÀr
(
signo
){

38 
ídög
 =1;

40 
	}
}

49 
	$maö
(
¨gc
, *
¨gv
[]){

50 
öt32_t
 
ªt
;

51 
°©us
;

52 
	`¥ötf
("Running PARápplication..\n");

55 
	`mem£t
(&
g_mib
, 0, (
∑rMib
));

56 
	`mem£t
(&
g_rsu
, 0, (
rsuInfo_t
));

57 
	`mem£t
(&
g_obu
, 0, (
obuInfo_t
));

58 
	`mem£t
(&
g_Packë
, 0, (
∑rPackë_t
));

62 
ªt
 = 
	`P¨sögO±i⁄s
(
¨gc
, 
¨gv
);

64 if(
ªt
<0){

69 
	`PrötO±i⁄s
();

72 
	`sig«l
(
SIGINT
, 
sigöt_h™dÀr
);

75 if(
	`öôMQ
() == -1)

79 if(
g_mib
.
›
 ==
›TX
){

81 
	`¥ötf
("Running PAR TX Operation..\n");

82 
	`∑r_InôTX›î©i⁄
();

83 
	`∑r_TX›î©i⁄
();

87 if(
g_mib
.
›
 =
›RX
){

88 
	`¥ötf
("Running PAR RX Operation..\n");

89 
	`∑r_InôRX›î©i⁄
();

90 
	`∑r_RX›î©i⁄
();

99 
	`ªÀa£MQ
();

101 
	}
}

	@/media/sf_Source/200104_Application_source/PAR/src/PAR.h

5 #i‚de‡
PAR_PAR_H


6 
	#PAR_PAR_H


	)

8 
	~<¨∑/öë.h
>

9 
	~<°dboﬁ.h
>

10 
	~<°dio.h
>

11 
	~<°rög.h
>

12 
	~<uni°d.h
>

13 
	~<°dlib.h
>

14 
	~<±hªad.h
>

15 
	~<°döt.h
>

16 
	~<msgQ.h
>

17 
	~<sy¶og.h
>

18 
	~<mÆloc.h
>

19 
	~<î∫o.h
>

20 
	~<gps.h
>

21 
	~<°döt.h
>

22 
	~"dŸ3/dŸ3.h
"

24 
	#RSU_SLOT
 101

	)

25 
	#BUFSIZE
 1024

	)

26 
	#MAX_ZERO_COUNT
 5

	)

35 
	m›RX
,

36 
	m›TX
,

37 } 
	t›_e
;

44 
	sli°_t
 {

45 
∑rInfo_t
 *
	mcur
;

46 
∑rInfo_t
 *
	mhód
;

47 
∑rInfo_t
 *
	mèû
;

48 
	mnumOfLi°
;

49 }
	tlökedLi°
;

53 
	srsuInfo_t
{

54 
öt32_t
 
	mrsuID
;

55 
öt32_t
 
	mrsuL©ôude
;

56 
öt32_t
 
	mrsuL⁄gôude
;

60 
	sobuInfo_t
{

62 
öt32_t
 
	mobuL©ôude
;

63 
öt32_t
 
	mobuL⁄gôude
;

64 
	mobuS≥ed
;

65 
	mobuHódög
;

69 
	s∑rPackë_t
{

71 
	mrsuID
;

72 
öt32_t
 
	mrsuL©ôude
;

73 
öt32_t
 
	mrsuL⁄gôude
;

74 
öt16_t
 
	mrxPowî
;

75 
uöt8_t
 
	mr˝i
;

80 
	s∑rInfo_t
{

81  
boﬁ
 
	mcheck
;

82 
	mrsuID
;

83 
öt32_t
 
	mrsuL©ôude
;

84 
öt32_t
 
	mrsuL⁄gôude
;

85 
öt16_t
 
	mrxpowî
[10];

88 
uöt8_t
 
	mr˝i
[10];

89 
	m¨øyIdx
;

90 
öt32_t
 
	mobuL©ôude
;

91 
öt32_t
 
	mobuL⁄gôude
;

92 
	mobuHódög
;

93 
	mobuS≥ed
;

94 
uöt32_t
 
	möãrvÆ
;

95 
	mdi°™˚
;

96 
uöt32_t
 
	m˙t
;

97 
uöt32_t
 
	mmaxPAR
;

98 
uöt32_t
 
	mcurPAR
;

99 
∑rInfo_t
 *
	m√xt
;

100 
	m∑°Aºayidx
;

101 
	mˇlcuœãD©a
[8];

105 
	s∑rMib


109 
›_e
 
	m›
;

112 
	mrsuID
;

115 
uöt32_t
 
	mcy˛e
;

116 
uöt32_t
 
	mInf‹m©i⁄
;

120 
öt32_t
 
	mL©ôude
;

121 
öt32_t
 
	mL⁄gôude
;

125 
uöt32_t
 
	möãrvÆ
;

126 
timî_t
 
	mtimî
;

127 
±hªad_muãx_t
 
	mtxMtx
;

128 
±hªad_c⁄d_t
 
	mtxC⁄d
;

131 
uöt32_t
 
	mdbg
;

139 
rsuInfo_t
 
g_rsu
;

140 
obuInfo_t
 
g_obu
;

141 
∑rMib
 
g_mib
;

142 
∑rPackë_t
 
g_Packë
;

144 
∑rInfo_t
 *
°PARInfo
;

145 
lökedLi°
 *
Li°På
;

146 
ídög
;

147 
boﬁ
 
shmCheck
;

148 
±hªad_t
 
rx_thªad
;

149 
±hªad_t
 
u£rSñe˘_thªad
;

150 
±hªad_t
 
gpsd_thªad
;

151 
gps_d©a_t
 
gpsD©a
;

152 
boﬁ
 
debugModeFú°Check
;

159 
öt32_t
 
P¨sögO±i⁄s
(öt32_à
¨gc
, *
¨gv
[]);

160 
PrötO±i⁄s
();

163 
sigöt_h™dÀr
(
signo
);

166 
∑r_InôTX›î©i⁄
();

167 
∑r_TX›î©i⁄
();

168 * 
gpsdThªad
(*
nŸu£d
);

171 
∑r_InôRX›î©i⁄
();

172 
∑r_RX›î©i⁄
();

173 
¸óãNode
( );

174 
‰ìAŒNode
();

175 
∑r_Rï‹t
();

176 
ldCÆdi°™˚
(
uöt32_t
 
æo
, uöt32_à
æa
, uöt32_à
ﬁo
, uöt32_à
ﬁa
);

177 * 
rxThªad
(*
nŸu£d
);

178 * 
u£rSñe˘Thªad
(*
nŸu£d
);

179 
∑rInfo_t
* 
gëNode
(
ödex
);

180 
gëCÆD©aR˝i
(
uöt8_t
* 
¨øy
, 
¨øyIdx
, * 
ßveAºay
);

181 
gëCÆD©aRxpowî
(
öt16_t
* 
¨øy
, 
¨øyIdx
, * 
ßveAºay
);

182 
boﬁ
 
isThîeRSUID
(
rsuID
);

183 
£tZîoP¨Info
(
∑rInfo_t
* 
±r
);

186 
öôMQ
();

187 
ªÀa£MQ
();

188 
ªcvMQ
(*
pkt
);

189 
£ndMQ
(
uöt8_t
 *
pPkt
, 
uöt32_t
 
Àn
);

192 
öt32_t
 
InôShm
(* 
shmid
, **
shmPå
);

193 
öt32_t
 
Rñó£Shm
(*
shmPå
);

196 
TxTimîExpúed
(
sigvÆ
 
¨g
);

197 
InôTxTimî
(c⁄° 
uöt32_t
 
öãrvÆ
);

	@/media/sf_Source/200104_Application_source/PAR/src/PAR_RX.c

1 
	~<°dio.h
>

2 
	~<m©h.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<uni°d.h
>

7 
	~"msgQ.h
"

8 
	~<sys/msg.h
>

9 
	~<sys/ùc.h
>

10 
	~<sig«l.h
>

11 
	~<mÆloc.h
>

12 
	~<PAR.h
>

19 
∑r_InôRX›î©i⁄
();

20 
∑r_RX›î©i⁄
();

21 
∑r_Rï‹t
();

22 
ldCÆdi°™˚
(
uöt32_t
 
æo
, uöt32_à
æa
, uöt32_à
ﬁo
, uöt32_à
ﬁa
);

23 * 
rxThªad
(*
nŸu£d
);

24 * 
u£rSñe˘Thªad
(*
nŸu£d
);

25 
¸óãNode
();

26 
‰ìAŒNode
();

27 
∑rInfo_t
* 
gëNode
(
ödex
);

28 
gëCÆD©aR˝i
(
uöt8_t
* 
¨øy
, 
¨øyIdx
, * 
ßveAºay
);

29 
gëCÆD©aRxpowî
(
öt16_t
* 
¨øy
, 
¨øyIdx
, * 
ßveAºay
);

30 
boﬁ
 
isThîeRSUID
(
rsuID
);

31 
boﬁ
 
	gdebugModeFú°Check
;

40 
	$∑r_InôRX›î©i⁄
(){

42 
öt32_t
 
ªt
;

43 
°©us
;

45 i‡(
Li°På
 =
NULL
) {

46 
Li°På
 = (
lökedLi°
*)
	`mÆloc
((linkedList));

47 
Li°På
->
cur
 = 
NULL
;

48 
Li°På
->
hód
 = 
NULL
;

49 
Li°På
->
èû
 = 
NULL
;

50 
Li°På
->
numOfLi°
 = 0;

52 
debugModeFú°Check
 = 
Ál£
;

67 if(
g_mib
.
öãrvÆ
 == 0)

69 
g_mib
.
öãrvÆ
 = 1000000;

72 if(
g_mib
.
cy˛e
 == 0)

74 
g_mib
.
cy˛e
 = 10;

78 
	`±hªad_muãx_öô
(&
g_mib
.
txMtx
, 
NULL
);

79 
	`±hªad_c⁄d_öô
(&
g_mib
.
txC⁄d
, 
NULL
);

83 
	`InôTxTimî
(
g_mib
.
öãrvÆ
);

86 
ªt
 = 
	`±hªad_¸óã
(&
rx_thªad
, 
NULL
, 
rxThªad
, NULL);

87 if(
ªt
 <0){

89 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] FailÅo create RXÅhread()\n");

94 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Success create RXÅhread()\n");

98 if(
g_mib
.
Inf‹m©i⁄
 != 0){

99 
ªt
 = 
	`±hªad_¸óã
(&
u£rSñe˘_thªad
, 
NULL
, 
u£rSñe˘Thªad
, NULL);

100 if(
ªt
 < 0){

101 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] FailÅo create userSelectÅhread()\n");

104 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Success create userSelectÅhread()\n");

111 
ªt
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

112 if(
ªt
 <0){

113 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªt
));

114 
shmCheck
 = 
åue
;

117 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Success gps_open()\n");

122 
	}
}

132 
	$∑r_RX›î©i⁄
(){

134 
öt32_t
 
ªt
;

135 
uöt32_t
 
Àn
;

136 
uöt8_t
 
outBuf
[
BUFSIZE
];

138 * 
°©us
;

139 
	`mem£t
(
outBuf
, 0, 
BUFSIZE
);

147 !
ídög
){

150 if(
shmCheck
 =
åue
)

152 
	`gps_˛o£
(&
gpsD©a
);

153 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Re connectionÅo GPSD\n");

154 
ªt
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

156 if(
ªt
 < 0)

158 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªt
));

160 
shmCheck
 = 
Ál£
;

165 
ªt
 = 
	`gps_ªad
(&
gpsD©a
);

166 if(
ªt
 < 0){

168 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] gps_ªad(ËÁû–%s)\n", 
	`gps_îr°r
(
ªt
));

169 
shmCheck
 = 
åue
;

175 if–
g_mib
.
L©ôude
 !0 && g_mib.
L⁄gôude
 != 0)

177 
g_obu
.
obuL©ôude
 = 
g_mib
.
L©ôude
;

178 
g_obu
.
obuL⁄gôude
 = 
g_mib
.
L⁄gôude
;

180 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
,"Success INPUT LATIánd LONGI\n");

182 if(
g_mib
.
dbg
)

184 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ò: %d OBUL⁄gò: %d \n",
g_obu
.
obuL©ôude
, g_obu.
obuL⁄gôude
);

192 if(
gpsD©a
.
£t
)

196 
g_obu
.
obuL©ôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
œtôude
;

197 
g_obu
.
obuL⁄gôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
l⁄gôude
;

198 
g_obu
.
obuS≥ed
 = 
gpsD©a
.
fix
.
•ìd
*3.6;

199 
g_obu
.
obuHódög
 = 
gpsD©a
.
fix
.
åack
;

202 if(
g_mib
.
dbg
)

204 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ôudê: %d OBUL⁄gôudê: %d OBUS≥ed : %‡OBUHódög : %‡\n", 
g_obu
.
obuL©ôude
, g_obu.
obuL⁄gôude
, g_obu.
obuS≥ed
, g_obu.
obuHódög
);

212 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] GPS Invalid\n");

213 
g_obu
.
obuL©ôude
 = 900000001;

214 
g_obu
.
obuL⁄gôude
 = 1800000001;

215 
g_obu
.
obuS≥ed
 = 8191;

216 
g_obu
.
obuHódög
 = 28800;

219 if(
g_mib
.
dbg
)

221 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
,"OBUL©ôudê: %d OBUL⁄gôudê: %d OBUS≥ed : %‡OBUHódög : %‡\n", 
g_obu
.
obuL©ôude
, g_obu.
obuL⁄gôude
, g_obu.
obuS≥ed
, g_obu.
obuHódög
);

229 
Àn
 = 
	`ªcvMQ
(
outBuf
);

230 if(
Àn
<0)

234 if(
Àn
 >0 && !
ídög
)

236 
	`mem˝y
(&
g_Packë
,
outBuf
,
Àn
);

241 if(!
	`isThîeRSUID
(
g_Packë
.
rsuID
))

242 
	`¸óãNode
();

245 
Li°På
->
cur
 = 
	`gëNode
(
g_Packë
.
rsuID
);

248 if(
Li°På
->
cur
->
¨øyIdx
 == 10)

249 
Li°På
->
cur
->
¨øyIdx
 = 0;

251 
Li°På
->
cur
->
check
 =1;

252 
Li°På
->
cur
->
rsuID
 = 
g_Packë
.rsuID;

253 
Li°På
->
cur
->
rsuL⁄gôude
 = 
g_Packë
.rsuLongitude;

254 
Li°På
->
cur
->
rsuL©ôude
 = 
g_Packë
.rsuLatitude;

255 
Li°På
->
cur
->
obuS≥ed
 = 
g_obu
.obuSpeed;

256 
Li°På
->
cur
->
obuHódög
 = 
g_obu
.obuHeading;

257 
Li°På
->
cur
->
öãrvÆ
 = 
g_mib
.
cy˛e
;

258 
Li°På
->
cur
->
rxpowî
[Li°På->cur->
¨øyIdx
] = 
g_Packë
.
rxPowî
;

259 
Li°På
->
cur
->
r˝i
[Li°På->cur->
¨øyIdx
] = 
g_Packë
.rcpi;

262 
Li°På
->
cur
->
obuL⁄gôude
 = 
g_obu
.obuLongitude;

263 
Li°På
->
cur
->
obuL©ôude
 = 
g_obu
.obuLatitude;

264 
Li°På
->
cur
->
˙t
++;

265 
Li°På
->
cur
->
∑°Aºayidx
 = Li°På->cur->
¨øyIdx
;

266 
Li°På
->
cur
->
¨øyIdx
++;

268 
°PARInfo
[
g_Packë
.
rsuID
].
check
 =1;

269 
°PARInfo
[
g_Packë
.
rsuID
].rsuID = g_Packet.rsuID;

270 
°PARInfo
[
g_Packë
.
rsuID
].
rsuL⁄gôude
 = g_Packet.rsuLongitude;

271 
°PARInfo
[
g_Packë
.
rsuID
].
rsuL©ôude
 = g_Packet.rsuLatitude;

272 
°PARInfo
[
g_Packë
.
rsuID
].
obuS≥ed
 = 
g_obu
.obuSpeed;

273 
°PARInfo
[
g_Packë
.
rsuID
].
obuHódög
 = 
g_obu
.obuHeading;

274 
°PARInfo
[
g_Packë
.
rsuID
].
öãrvÆ
 = 
g_mib
.
cy˛e
;

275 
°PARInfo
[
g_Packë
.
rsuID
].
rxpowî
 = g_Packë.
rxPowî
;

276 
°PARInfo
[
g_Packë
.
rsuID
].
r˝i
 = g_Packet.rcpi;

277 
°PARInfo
[
g_Packë
.
rsuID
].
obuL⁄gôude
 = 
g_obu
.obuLongitude;

278 
°PARInfo
[
g_Packë
.
rsuID
].
obuL©ôude
 = 
g_obu
.obuLatitude;

279 
°PARInfo
[
g_Packë
.
rsuID
].
˙t
++;

283 if(
g_mib
.
dbg
)

285 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
,"°PARInfo[CNT] : %d \n\n\n",
°PARInfo
[
g_Packë
.
rsuID
].
˙t
);

300 
ªt
 = 
	`±hªad_joö
(
rx_thªad
, &
°©us
);

301 if–
ªt
 == 0 )

304 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Com∂ëed joö wôhÑxThªad sètu†%s\n", (*)
°©us
);

309 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

313 if(
g_mib
.
Inf‹m©i⁄
 != 0){

315 
ªt
 = 
	`±hªad_joö
(
u£rSñe˘_thªad
, &
°©us
);

316 if–
ªt
 == 0 )

319 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Com∂ëed joö wôh u£rSñe˘Thªad sètu†%s\n", (*)
°©us
);

324 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

329 
	`gps_˛o£
(&
gpsD©a
);

333 
	`±hªad_muãx_de°roy
(&
g_mib
.
txMtx
);

334 
	`±hªad_c⁄d_de°roy
(&
g_mib
.
txC⁄d
);

337 
	`‰ìAŒNode
();

338 
	}
}

347 
	$∑r_Rï‹t
(){

349 
idx
 = 0;

351 
uöt32_t
 
˙t
[
Li°På
->
numOfLi°
];

358 
∑rInfo_t
 *
±rTemp
 = 
Li°På
->
hód
;

361 
idx
=1;idx<=
Li°På
->
numOfLi°
;idx++)

364 if(
±rTemp
 =
NULL
)

368 
˙t
[
idx
]=0;

373 
±rTemp
->
curPAR
 = 0;

374 
±rTemp
->
maxPAR
 = 0;

384 if–
±rTemp
->
˙t
==0)

386 
±rTemp
->
check
 = 
Ál£
;

390 
±rTemp
->
check
 = 
åue
;

402 if(!
±rTemp
->
check
)

407 
	`£tZîoP¨Info
(
±rTemp
);

412 
±rTemp
->
di°™˚
 = 
	`ldCÆdi°™˚
’åTemp->
rsuL⁄gôude
,ÖåTemp->
rsuL©ôude
,ÖåTemp->
obuL⁄gôude
,ÖåTemp->
obuL©ôude
);

415 
˙t
[
idx
] = 
±rTemp
->cnt;

418 
±rTemp
->
˙t
 = 0;

428 
±rTemp
->
curPAR
 = (
˙t
[
idx
]*100)/(1000/±rTemp->
öãrvÆ
);

431 if(
±rTemp
->
curPAR
 >ÖåTemp->
maxPAR
)

432 
±rTemp
->
maxPAR
 =ÖåTemp->
curPAR
;

437 if(
g_mib
.
dbg
){

442 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "RSUID : %d, RSULatitude : %d, RSULongitude : %d, OBULatitude : %d, OBULongitude : %d\n",

444 
±rTemp
->
rsuID
,

445 
±rTemp
->
rsuL©ôude
,

446 
±rTemp
->
rsuL⁄gôude
,

447 
±rTemp
->
obuL©ôude
,

448 
±rTemp
->
obuL⁄gôude
);

450 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "Distance : %.0f, OBUSpeed : %3.2f, OBUHeading : %3.2f, CNT : %u, PAR : %d\n",

453 
±rTemp
->
di°™˚
,

454 ()
±rTemp
->
obuS≥ed
,

455 ()
±rTemp
->
obuHódög
,

456 
˙t
[
idx
],

457 
±rTemp
->
maxPAR
);

461 if(
±rTemp
->
check
 &&ÖåTemp->
¨øyIdx
 == 0)

463 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
∑°Aºayidx
,±rTemp->
ˇlcuœãD©a
);

464 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
∑°Aºayidx
,±rTemp->
ˇlcuœãD©a
);

467 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
¨øyIdx
,±rTemp->
ˇlcuœãD©a
);

468 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
¨øyIdx
,±rTemp->
ˇlcuœãD©a
);

475 if(!
debugModeFú°Check
){

476 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "RSUID, RSULatitude, RSULongitude, OBULatitude, OBULongitude, Distance, OBUSpeed, OBUHeading, CNT, PAR, Min_rxpower, Max_rxpower, Avr_rxpower, Last_rxpower, Min_rcpi, Max_rcpi, Avr_rcpi, Last_rcpi\n");

477 
debugModeFú°Check
 = 
åue
;

480 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "%d, %d, %d, %d, %d, %.0f, %3.2f, %3.2f, %u, %d, %d, %d, %.1f, %d, %d, %d, %.1f, %d\n",

481 
±rTemp
->
rsuID
,

482 
±rTemp
->
rsuL©ôude
,

483 
±rTemp
->
rsuL⁄gôude
,

484 
±rTemp
->
obuL©ôude
,

485 
±rTemp
->
obuL⁄gôude
,

486 
±rTemp
->
di°™˚
,

487 ()
±rTemp
->
obuS≥ed
,

488 ()
±rTemp
->
obuHódög
,

489 
˙t
[
idx
],

490 
±rTemp
->
maxPAR
,

491 ()
±rTemp
->
ˇlcuœãD©a
[0],

492 ()
±rTemp
->
ˇlcuœãD©a
[1],

493 
±rTemp
->
ˇlcuœãD©a
[2],

494 ()
±rTemp
->
ˇlcuœãD©a
[3],

495 ()
±rTemp
->
ˇlcuœãD©a
[4],

496 ()
±rTemp
->
ˇlcuœãD©a
[5],

497 
±rTemp
->
ˇlcuœãD©a
[6],

498 ()
±rTemp
->
ˇlcuœãD©a
[7]);

500 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "------------------------------------------------------------------------------------------------\n");

503 
	`¥ötf
("CHECK : %u, RSUID : %d, RSU Latitude : %d, RSU Longitude : %d, OBU Latitude : %d, OBU Longitude : %d, RXPOWER : %d,Ñcpi : %d, distance : %.0f, OBUSpeed : %3.2f, OBUHeading : %3.2f, CNT : %u, PAR : %d\n",

504 
°PARInfo
[
idx
].
check
,

505 
°PARInfo
[
idx
].
rsuID
,

506 
°PARInfo
[
idx
].
rsuL©ôude
,

507 
°PARInfo
[
idx
].
rsuL⁄gôude
,

508 
°PARInfo
[
idx
].
obuL©ôude
,

509 
°PARInfo
[
idx
].
obuL⁄gôude
,

510 
°PARInfo
[
idx
].
rxpowî
,

511 
°PARInfo
[
idx
].
r˝i
,

512 
°PARInfo
[
idx
].
di°™˚
,

513 ()
°PARInfo
[
idx
].
obuS≥ed
,

514 ()
°PARInfo
[
idx
].
obuHódög
,

515 
˙t
[
idx
],

516 
°PARInfo
[
idx
].
maxPAR
);

520 
±rTemp
->
¨øyIdx
 =0;

522 
±rTemp
 =ÖåTemp->
√xt
;

528 
	`£tZîoP¨Info
(
∑rInfo_t
* 
±r
){

529 
±r
->
¨øyIdx
 = 0;

530 
±r
->
rsuL©ôude
 = 0;

531 
±r
->
rsuL⁄gôude
 = 0;

532 
±r
->
obuL©ôude
 = 0 ;

533 
±r
->
obuL⁄gôude
 = 0;

534 
±r
->
di°™˚
 = 0;

535 
±r
->
obuS≥ed
 = 0.0;

536 
±r
->
obuHódög
 = 0.0;

537 
±r
->
maxPAR
 = 0;

544 
	`¸óãNode
() {

546 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] CreateNode\n");

548 
∑rInfo_t
* 
°PARInfoPå
 =(∑rInfo_à*Ë
	`mÆloc
((parInfo_t));

549 
°PARInfoPå
->
√xt
 = 
NULL
;

552 if(
Li°På
->
hód
 =
NULL
 && Li°På->
èû
 == NULL)

555 
Li°På
->
hód
 = Li°På->
èû
 = 
°PARInfoPå
;

561 
Li°På
->
èû
->
√xt
 = 
°PARInfoPå
;

562 
Li°På
->
èû
 = 
°PARInfoPå
;

564 
Li°På
->
cur
 = Li°På->
èû
;

565 
Li°På
->
èû
->
˙t
 = 0;

566 
Li°På
->
èû
->
¨øyIdx
 = 0;

567 
Li°På
->
numOfLi°
++;

574 
	`‰ìAŒNode
(){

576 
∑rInfo_t
* 
ãmpPå
 = 
Li°På
->
hód
;

578 
Li°På
->
hód
 !
NULL
){

580 
Li°På
->
hód
 = Li°På->hód->
√xt
;

581 
	`‰ì
(
ãmpPå
);

582 
ãmpPå
 = 
Li°På
->
hód
;

583 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Free Node\n");

585 
Li°På
->
cur
 = 
NULL
;

586 
Li°På
->
èû
 = 
NULL
;

587 
Li°På
->
numOfLi°
 = 0;

589 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] There isÇothingÅo free Node \n");

596 
∑rInfo_t
* 
	`gëNode
(
rsuID
){

597 
∑rInfo_t
* 
ªtu∫På
 = 
Li°På
->
hód
;

599 
ªtu∫På
 !
NULL
){

600 if(
rsuID
 =
ªtu∫På
->rsuID)

602 
ªtu∫På
 =Ñëu∫På->
√xt
;

604  
ªtu∫På
;

612 
	`gëCÆD©aR˝i
(
uöt8_t
* 
¨øy
, 
¨øyIdx
, * 
ßveAºay
){

613 if(
¨øyIdx
 > 0){

614 
uöt16_t
 
sum
 = 
¨øy
[0];

615 
uöt8_t
 
mö
 = 
¨øy
[0];

616 
uöt8_t
 
max
 = 
¨øy
[0];

620 
i
=1; i<
¨øyIdx
; i++){

622 
sum
 +
¨øy
[
i
];

624 if(
¨øy
[
i
] < 
mö
)

625 
mö
 = 
¨øy
[
i
];

627 if(
¨øy
[
i
] > 
max
)

628 
max
 = 
¨øy
[
i
];

633 
ßveAºay
[4] = 
mö
;

634 
ßveAºay
[5] = 
max
;

635 
ßveAºay
[6] = ()(
sum
/
¨øyIdx
);

636 
ßveAºay
[7] = 
¨øy
[
¨øyIdx
-1];

648 
ßveAºay
[4] = 0.0;

649 
ßveAºay
[5] = 0.0;

650 
ßveAºay
[6] = 0.0;

651 
ßveAºay
[7] = 0.0;

666 
	`gëCÆD©aRxpowî
(
öt16_t
* 
¨øy
, 
¨øyIdx
, * 
ßveAºay
){

667 if(
¨øyIdx
 > 0){

668 
öt16_t
 
sum
 = 
¨øy
[0];

669 
öt16_t
 
mö
 = 
¨øy
[0];

670 
öt16_t
 
max
 = 
¨øy
[0];

674 
i
=1; i<
¨øyIdx
; i++){

675 
sum
 +
¨øy
[
i
];

677 if(
¨øy
[
i
] < 
mö
)

678 
mö
 = 
¨øy
[
i
];

680 if(
¨øy
[
i
] > 
max
)

681 
max
 = 
¨øy
[
i
];

686 
ßveAºay
[0] = 
mö
;

687 
ßveAºay
[1] = 
max
;

688 
ßveAºay
[2] = ()(
sum
/
¨øyIdx
);

689 
ßveAºay
[3] = 
¨øy
[
¨øyIdx
-1];

701 
ßveAºay
[0] = 0.0;

702 
ßveAºay
[1] = 0.0;

703 
ßveAºay
[2] = 0.0;

704 
ßveAºay
[3] = 0.0;

723 
	`ldCÆdi°™˚
(
uöt32_t
 
æo
, uöt32_à
æa
, uöt32_à
ﬁo
, uöt32_à
ﬁa
)

725 
a
, 
b
, 
c
, 
d
, 
x
, 
y
, 
z
;

726 
a
 = ()((
æo
 * 1e-7Ë* 
M_PI
 / 180);

727 
b
 = ()((
æa
 * 1e-7Ë* 
M_PI
 / 180);

728 
c
 = ()((
ﬁo
 * 1e-7Ë* 
M_PI
 / 180);

729 
d
 = ()((
ﬁa
 * 1e-7Ë* 
M_PI
 / 180);

730 
x
 = 
	`sö
(
b
Ë* sö(
d
);

731 
y
 = 
	`cos
(
b
Ë* cos(
d
);

732 
z
 = 
	`Ábs
(
c
 - 
a
);

733 
y
 = y*
	`cos
(
z
);

734 
x
 = 
	`acos
(x + 
y
);

735 
y
 = 
x
 * 6371009;

737  
y
;

745 * 
	`rxThªad
(*
nŸu£d
){

748 !
ídög
){

750 
	`±hªad_muãx_lock
(&
g_mib
.
txMtx
);

751 
	`±hªad_c⁄d_waô
(&
g_mib
.
txC⁄d
, &g_mib.
txMtx
);

752 
	`±hªad_muãx_u∆ock
(&
g_mib
.
txMtx
);

753 
	`∑r_Rï‹t
();

757 
	`±hªad_exô
((*)0);

764 * 
	`u£rSñe˘Thªad
(*
nŸu£d
){

765 
num
;

766 
ªt
;

767 
°©us
;

768 
∑rInfo_t
 *
±rTemp
 = 
NULL
;

769 
num
 = 0;

770 
£À˘RsuID
;

772 !
ídög
){

774 
num
){

792 
	`¥ötf
(" MENU\n");

793 
	`¥ötf
("====Please selectáÇumber====\n");

794 
	`¥ötf
("1. Printing Connected RSUID(s) Information\n");

795 
	`¥ötf
("2. PrintingÅhe RSU information you want\n");

796 
	`¥ötf
("3. QUit\n>> ");

797 
	`sˇnf
("%d",&
num
);

800 
±rTemp
 = 
Li°På
->
hód
;

801 
cou¡
 = 1;

802 
±rTemp
 !
NULL
){

803 
	`¥ötf
("RSUID o‡[%d]: %d\n", 
cou¡
++, 
±rTemp
->
rsuID
);

804 
±rTemp
 =ÖåTemp->
√xt
;

806 
num
 = 0;

809 
	`¥ötf
("Input wanted RSU ID >> ");

810 
	`sˇnf
("%d",&
£À˘RsuID
);

811 
±rTemp
 = 
	`gëNode
(
£À˘RsuID
);

812 if(
±rTemp
 =
NULL
){

813 
	`¥ötf
("# Error(Please input correct RsuID\n");

816 
	`¥ötf
("**Inf‹m©i⁄ o‡RSU ID[%d]**\n",
£À˘RsuID
);

818 
	`¥ötf
( "RSUID : %d\nRSU Latitude : %d\nRSU Longitude : %d\nOBU Latitude : %d\nOBU Longitude : %d\n",

820 
±rTemp
->
rsuID
,

821 
±rTemp
->
rsuL©ôude
,

822 
±rTemp
->
rsuL⁄gôude
,

823 
±rTemp
->
obuL©ôude
,

824 
±rTemp
->
obuL⁄gôude
);

825 
	`¥ötf
( "Distance : %.0f\nOBUSpeed : %3.2f\nOBUHeading : %3.2f\nPAR : %d\n",

828 
±rTemp
->
di°™˚
,

829 ()
±rTemp
->
obuS≥ed
,

830 ()
±rTemp
->
obuHódög
,

831 
±rTemp
->
maxPAR
);

833 if(
±rTemp
->
check
 &&ÖåTemp->
¨øyIdx
 == 0)

835 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
∑°Aºayidx
,ÖåTemp->
ˇlcuœãD©a
);

836 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
∑°Aºayidx
,ÖåTemp->
ˇlcuœãD©a
);

840 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
¨øyIdx
,ÖåTemp->
ˇlcuœãD©a
);

841 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
¨øyIdx
,ÖåTemp->
ˇlcuœãD©a
);

844 
	`¥ötf
("RSUID : %d\nRSULatitude : %d\nRSULongitude : %d\nOBULatitude : %d\nOBULongitude : %d\nDistance : %.0f\nOBUSpeed : %3.2f\nOBUHeading : %3.2f\nPAR : %d\nMin_rxpower : %d\nMax_rxpower : %d\nAvr_rxpower : %.1f\nLast_rxpower : %d\nMin_rcpi : %d\nMax_rcpi : %d\nAvr_rcpi : %.1f\nLast_rcpi : %d\n",

845 
±rTemp
->
rsuID
,

846 
±rTemp
->
rsuL©ôude
,

847 
±rTemp
->
rsuL⁄gôude
,

848 
±rTemp
->
obuL©ôude
,

849 
±rTemp
->
obuL⁄gôude
,

850 
±rTemp
->
di°™˚
,

851 ()
±rTemp
->
obuS≥ed
,

852 ()
±rTemp
->
obuHódög
,

853 
±rTemp
->
maxPAR
,

854 ()
±rTemp
->
ˇlcuœãD©a
[0],

855 ()
±rTemp
->
ˇlcuœãD©a
[1],

856 
±rTemp
->
ˇlcuœãD©a
[2],

857 ()
±rTemp
->
ˇlcuœãD©a
[3],

858 ()
±rTemp
->
ˇlcuœãD©a
[4],

859 ()
±rTemp
->
ˇlcuœãD©a
[5],

860 
±rTemp
->
ˇlcuœãD©a
[6],

861 ()
±rTemp
->
ˇlcuœãD©a
[7]);

863 
num
=0;

867 
	`¥ötf
("Success Quit!\n");

868 
	`±hªad_exô
((*)0);

874 
	`¥ötf
("#error:not usableÖarameter\n");

875 
num
 = 0;

883 
ªt
 = 
	`±hªad_joö
(
u£rSñe˘_thªad
, (**)
°©us
);

884 if–
ªt
 == 0 )

886 
	`¥ötf
("[PAR_RX] Com∂ëed joö wôh u£rSñe˘Thªad sètu†%d\n", 
°©us
);

891 
	`¥ötf
("[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

903 
boﬁ
 
	`isThîeRSUID
(
rsuID
){

904 
∑rInfo_t
 *
±rTemp
 = 
Li°På
->
hód
;

905 
±rTemp
 !
NULL
){

906 if(
±rTemp
->
rsuID
 ==ÑsuID)

907  
åue
;

909 
±rTemp
 =ÖåTemp->
√xt
;

911  
Ál£
;

	@/media/sf_Source/200104_Application_source/PAR/src/PAR_RX_bk_200611.c

1 
	~<°dio.h
>

2 
	~<m©h.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<uni°d.h
>

7 
	~"msgQ.h
"

8 
	~<sys/msg.h
>

9 
	~<sys/ùc.h
>

10 
	~<sig«l.h
>

11 
	~<mÆloc.h
>

12 
	~<PAR.h
>

19 
∑r_InôRX›î©i⁄
();

20 
∑r_RX›î©i⁄
();

21 
∑r_Rï‹t
();

22 
ldCÆdi°™˚
(
uöt32_t
 
æo
, uöt32_à
æa
, uöt32_à
ﬁo
, uöt32_à
ﬁa
);

23 * 
rxThªad
(*
nŸu£d
);

24 
¸óãNode
( );

25 
‰ìAŒNode
();

26 
∑rInfo_t
* 
gëNode
(
ödex
);

27 
gëCÆD©aR˝i
(
uöt8_t
* 
¨øy
, 
¨øyIdx
);

28 
gëCÆD©aRxpowî
(
öt16_t
* 
¨øy
, 
¨øyIdx
);

38 
	$∑r_InôRX›î©i⁄
(){

40 
öt32_t
 
ªt
;

43 
Li°På
 = (
lökedLi°
*)
	`mÆloc
((linkedList));

44 
Li°På
->
cur
 = 
NULL
;

45 
Li°På
->
hód
 = 
NULL
;

46 
Li°På
->
èû
 = 
NULL
;

47 
Li°På
->
numOfLi°
 = 0;

63 if(
g_mib
.
öãrvÆ
 == 0)

65 
g_mib
.
öãrvÆ
 = 1000000;

68 if(
g_mib
.
cy˛e
 == 0)

70 
g_mib
.
cy˛e
 = 10;

74 
	`±hªad_muãx_öô
(&
g_mib
.
txMtx
, 
NULL
);

75 
	`±hªad_c⁄d_öô
(&
g_mib
.
txC⁄d
, 
NULL
);

79 
	`InôTxTimî
(
g_mib
.
öãrvÆ
);

82 
ªt
 = 
	`±hªad_¸óã
(&
rx_thªad
, 
NULL
, 
rxThªad
, NULL);

83 if(
ªt
 <0){

85 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] FailÅo create RXÅhread()\n");

90 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Success create RXÅhread() \n");

94 
ªt
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

95 if(
ªt
 <0){

96 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªt
));

97 
shmCheck
 = 
åue
;

100 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Success gps_open()\n");

103 
	}
}

113 
	$∑r_RX›î©i⁄
(){

115 
öt32_t
 
ªt
;

116 
uöt32_t
 
Àn
;

117 
uöt8_t
 
outBuf
[
BUFSIZE
];

118 
°©us
;

120 
	`mem£t
(
outBuf
, 0, 
BUFSIZE
);

128 !
ídög
){

131 if(
shmCheck
 =
åue
)

133 
	`gps_˛o£
(&
gpsD©a
);

134 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Re connectionÅo GPSD\n");

135 
ªt
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

137 if(
ªt
 < 0)

139 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªt
));

141 
shmCheck
 = 
Ál£
;

146 
ªt
 = 
	`gps_ªad
(&
gpsD©a
);

147 if(
ªt
 < 0){

149 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] gps_ªad(ËÁû–%s)\n", 
	`gps_îr°r
(
ªt
));

150 
shmCheck
 = 
åue
;

156 if–
g_mib
.
L©ôude
 !0 && g_mib.
L⁄gôude
 != 0)

158 
g_obu
.
obuL©ôude
 = 
g_mib
.
L©ôude
;

159 
g_obu
.
obuL⁄gôude
 = 
g_mib
.
L⁄gôude
;

161 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"Success INPUT LATIánd LONGI\n");

163 if(
g_mib
.
dbg
)

165 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ò: %d OBUL⁄gò: %d \n",
g_obu
.
OBUL©ôude
, g_obu.
OBUL⁄gôude
);

173 if(
gpsD©a
.
£t
)

176 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"[PAR_RX] GPSData.set Success\n");

177 
g_obu
.
obuL©ôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
œtôude
;

178 
g_obu
.
obuL⁄gôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
l⁄gôude
;

179 
g_obu
.
obuS≥ed
 = 
gpsD©a
.
fix
.
•ìd
;

180 
g_obu
.
obuHódög
 = 
gpsD©a
.
fix
.
åack
;

183 if(
g_mib
.
dbg
)

185 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ôudê: %d OBUL⁄gôudê: %d OBUS≥ed : %‡OBUHódög : %‡\n", 
g_obu
.
OBUL©ôude
, g_obu.
OBUL⁄gôude
, g_obu.
OBUS≥ed
, g_obu.
OBUHódög
);

193 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] GPS Invalid\n");

194 
g_obu
.
obuL©ôude
 = 900000001;

195 
g_obu
.
obuL⁄gôude
 = 1800000001;

196 
g_obu
.
obuS≥ed
 = 8191;

197 
g_obu
.
obuHódög
 = 28800;

200 if(
g_mib
.
dbg
)

202 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ôudê: %d OBUL⁄gôudê: %d OBUS≥ed : %‡OBUHódög : %‡\n", 
g_obu
.
OBUL©ôude
, g_obu.
OBUL⁄gôude
, g_obu.
OBUS≥ed
, g_obu.
OBUHódög
);

210 
Àn
 = 
	`ªcvMQ
(
outBuf
);

211 if(
Àn
<0)

215 if(
Àn
 >0)

217 
	`mem˝y
(&
g_Packë
,
outBuf
,
Àn
);

218 if(
g_Packë
.
rsuID
 >0 && g_Packë.rsuID <
g_mib
.
rsuNum
)

221 if(
g_Packë
.
rsuID
 > 
Li°På
->
numOfLi°
){

222 
	`¸óãNode
( );

223 
Li°På
->
cur
 = Li°På->
èû
;

226 
Li°På
->
cur
 = 
	`gëNode
(
g_Packë
.
rsuID
);

228 if(
Li°På
->
cur
->
¨øyIdx
 == 10)

229 
Li°På
->
cur
->
¨øyIdx
 = 0;

230 
Li°På
->
cur
->
check
 =1;

231 
Li°På
->
cur
->
rsuID
 = 
g_Packë
.rsuID;

232 
Li°På
->
cur
->
rsuL⁄gôude
 = 
g_Packë
.rsuLongitude;

233 
Li°På
->
cur
->
rsuL©ôude
 = 
g_Packë
.rsuLatitude;

234 
Li°På
->
cur
->
obuS≥ed
 = 
g_obu
.obuSpeed;

235 
Li°På
->
cur
->
obuHódög
 = 
g_obu
.obuHeading;

236 
Li°På
->
cur
->
öãrvÆ
 = 
g_mib
.
cy˛e
;

237 
Li°På
->
cur
->
rxpowî
[Li°På->
èû
->
¨øyIdx
] = 
g_Packë
.
rxPowî
;

238 
Li°På
->
cur
->
r˝i
[Li°På->
èû
->
¨øyIdx
] = 
g_Packë
.rcpi;

239 
Li°På
->
cur
->
obuL⁄gôude
 = 
g_obu
.obuLongitude;

240 
Li°På
->
cur
->
obuL©ôude
 = 
g_obu
.obuLatitude;

241 
Li°På
->
cur
->
˙t
++;

242 
Li°På
->
cur
->
¨øyIdx
++;

244 
°PARInfo
[
g_Packë
.
rsuID
].
check
 =1;

245 
°PARInfo
[
g_Packë
.
rsuID
].rsuID = g_Packet.rsuID;

246 
°PARInfo
[
g_Packë
.
rsuID
].
rsuL⁄gôude
 = g_Packet.rsuLongitude;

247 
°PARInfo
[
g_Packë
.
rsuID
].
rsuL©ôude
 = g_Packet.rsuLatitude;

248 
°PARInfo
[
g_Packë
.
rsuID
].
obuS≥ed
 = 
g_obu
.obuSpeed;

249 
°PARInfo
[
g_Packë
.
rsuID
].
obuHódög
 = 
g_obu
.obuHeading;

250 
°PARInfo
[
g_Packë
.
rsuID
].
öãrvÆ
 = 
g_mib
.
cy˛e
;

251 
°PARInfo
[
g_Packë
.
rsuID
].
rxpowî
 = g_Packë.
rxPowî
;

252 
°PARInfo
[
g_Packë
.
rsuID
].
r˝i
 = g_Packet.rcpi;

253 
°PARInfo
[
g_Packë
.
rsuID
].
obuL⁄gôude
 = 
g_obu
.obuLongitude;

254 
°PARInfo
[
g_Packë
.
rsuID
].
obuL©ôude
 = 
g_obu
.obuLatitude;

255 
°PARInfo
[
g_Packë
.
rsuID
].
˙t
++;

259 if(
g_mib
.
dbg
)

261 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"°PARInfo[CNT] : %d \n\n\n",
°PARInfo
[
g_Packë
.
rsuID
].
˙t
);

271 
	`‰ìAŒNode
();

275 
ªt
 = 
	`±hªad_joö
(
rx_thªad
, (**)
°©us
);

276 if–
ªt
 == 0 )

279 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Com∂ëed joö wôhÑxThªad sètu†%d\n", 
°©us
);

284 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

288 
	`gps_˛o£
(&
gpsD©a
);

291 
	`±hªad_muãx_de°roy
(&
g_mib
.
txMtx
);

292 
	`±hªad_c⁄d_de°roy
(&
g_mib
.
txC⁄d
);

293 
	}
}

299 
	$¸óãNode
( ) {

300 
	`¥ötf
("[PAR_RX] createNode\n");

301 
∑rInfo_t
* 
°PARInfoPå
 =(∑rInfo_à*Ë
	`mÆloc
((parInfo_t));

302 
°PARInfoPå
->
√xt
 = 
NULL
;

303 if(
Li°På
->
hód
 =
NULL
 && Li°På->
èû
 == NULL)

304 
Li°På
->
hód
 = Li°På->
èû
 = 
°PARInfoPå
;

306 
Li°På
->
èû
->
√xt
 = 
°PARInfoPå
;

307 
Li°På
->
èû
 = 
°PARInfoPå
;

309 
Li°På
->
èû
->
˙t
 = 0;

310 
Li°På
->
èû
->
¨øyIdx
 = 0;

311 
Li°På
->
numOfLi°
++;

313 
	}
}

319 
	$‰ìAŒNode
(){

320 
∑rInfo_t
* 
ãmpPå
 = 
Li°På
->
hód
;

321 
ãmpPå
 !
NULL
){

322 
Li°På
->
hód
 = Li°På->hód->
√xt
;

323 
	`‰ì
(
ãmpPå
);

324 
ãmpPå
 = 
Li°På
->
hód
;

327 
Li°På
->
numOfLi°
 = 0;

328 
	}
}

334 
∑rInfo_t
* 
	$gëNode
(
ödex
){

335 
∑rInfo_t
* 
ªtu∫På
 = 
Li°På
->
hód
;

336 
i
=0; i<
ödex
-1;i++)

337 
ªtu∫På
 =Ñëu∫På->
√xt
;

338  
ªtu∫På
;

339 
	}
}

346 
	$gëCÆD©aR˝i
(
uöt8_t
* 
¨øy
, 
¨øyIdx
){

347 
uöt8_t
 
sum
 = 
¨øy
[0];

348 
uöt8_t
 
mö
 = 
¨øy
[0];

349 
uöt8_t
 
max
 = 
¨øy
[0];

350 
i
=1; i<
¨øyIdx
; i++){

351 
sum
 +
¨øy
[
i
];

352 if(
¨øy
[
i
] < 
mö
)

353 
mö
 = 
¨øy
[
i
];

354 if(
¨øy
[
i
] > 
max
)

355 
max
 = 
¨øy
[
i
];

358 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "Max_rcpi: %d, Min_rcpi: %d, Avr_rcpi: %.0f, Last_rcpi: %d\n",

359 
max
, 
mö
, ()
sum
/
¨øyIdx
, 
¨øy
[arrayIdx-1]);

360 
	}
}

366 
	$gëCÆD©aRxpowî
(
öt16_t
* 
¨øy
, 
¨øyIdx
){

367 
öt16_t
 
sum
 = 
¨øy
[0];

368 
öt16_t
 
mö
 = 
¨øy
[0];

369 
öt16_t
 
max
 = 
¨øy
[0];

370 
i
=1; i<
¨øyIdx
; i++){

371 
sum
 +
¨øy
[
i
];

372 if(
¨øy
[
i
] < 
mö
)

373 
mö
 = 
¨øy
[
i
];

374 if(
¨øy
[
i
] > 
max
)

375 
max
 = 
¨øy
[
i
];

378 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "Max_rxpower: %d, Min_rxpower: %d, Avr_rxpower: %.0f, Last_rxpower: %d\n",

379 
max
, 
mö
, ()
sum
/
¨øyIdx
, 
¨øy
[arrayIdx-1]);

380 
	}
}

390 
	$∑r_Rï‹t
(){

392 
idx
 = 0;

393 
uöt32_t
 
˙t
[
g_mib
.
rsuNum
];

400 
∑rInfo_t
 *
±rTemp
 = 
Li°På
->
hód
;

402 
idx
=0;idx<=
g_mib
.
rsuNum
;idx++)

404 if(
±rTemp
 =
NULL
)

408 
˙t
[
idx
]=0;

413 
±rTemp
->
curPAR
 = 0;

414 
±rTemp
->
maxPAR
 = 0;

418 if(
±rTemp
->
rsuID
 >0 &&ÖåTemp->rsuID <
g_mib
.
rsuNum
)

421 if(
±rTemp
->
check
 >0 &&ÖåTemp->
˙t
==0)

423 
±rTemp
->
check
++;

426 if(
±rTemp
->
check
 > 
MAX_ZERO_COUNT
 &&ÖåTemp->
˙t
==0)

429 
±rTemp
->
check
=0;

432 if(
±rTemp
->
check
==0)

438 
±rTemp
->
di°™˚
 = 
	`ldCÆdi°™˚
’åTemp->
rsuL⁄gôude
,ÖåTemp->
rsuL©ôude
,ÖåTemp->
obuL⁄gôude
,ÖåTemp->
obuL©ôude
);

441 
˙t
[
idx
] = 
±rTemp
->cnt;

444 
±rTemp
->
˙t
 = 0;

454 
±rTemp
->
curPAR
 = (
˙t
[
idx
]*100)/(1000/±rTemp->
öãrvÆ
);

457 if(
±rTemp
->
curPAR
 >ÖåTemp->
maxPAR
)

458 
±rTemp
->
maxPAR
 =ÖåTemp->
curPAR
;

461 if(
g_mib
.
dbg
){

462 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "CHECK : %u, RSUID : %d, RSU Latitude : %d, RSU Longitude : %d, OBU Latitude : %d, OBU Longitude : %d\n",

463 
±rTemp
->
check
,

464 
±rTemp
->
rsuID
,

465 
±rTemp
->
rsuL©ôude
,

466 
±rTemp
->
rsuL⁄gôude
,

467 
±rTemp
->
obuL©ôude
,

468 
±rTemp
->
obuL⁄gôude
);

470 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "Distance : %.0f, OBUSpeed : %3.2f, OBUHeading : %3.2f, CNT : %u, PAR : %d\n",

473 
±rTemp
->
di°™˚
,

474 ()
±rTemp
->
obuS≥ed
,

475 ()
±rTemp
->
obuHódög
,

476 
˙t
[
idx
],

477 
±rTemp
->
maxPAR
);

478 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
¨øyIdx
);

479 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
¨øyIdx
);

481 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "--------------------------------------------------------------------------------------------------\n");

484 
	`¥ötf
("CHECK : %u, RSUID : %d, RSU Latitude : %d, RSU Longitude : %d, OBU Latitude : %d, OBU Longitude : %d, RXPOWER : %d,Ñcpi : %d, distance : %.0f, OBUSpeed : %3.2f, OBUHeading : %3.2f, CNT : %u, PAR : %d\n",

485 
°PARInfo
[
idx
].
check
,

486 
°PARInfo
[
idx
].
rsuID
,

487 
°PARInfo
[
idx
].
rsuL©ôude
,

488 
°PARInfo
[
idx
].
rsuL⁄gôude
,

489 
°PARInfo
[
idx
].
obuL©ôude
,

490 
°PARInfo
[
idx
].
obuL⁄gôude
,

491 
°PARInfo
[
idx
].
rxpowî
,

492 
°PARInfo
[
idx
].
r˝i
,

493 
°PARInfo
[
idx
].
di°™˚
,

494 ()
°PARInfo
[
idx
].
obuS≥ed
,

495 ()
°PARInfo
[
idx
].
obuHódög
,

496 
˙t
[
idx
],

497 
°PARInfo
[
idx
].
maxPAR
);

499 
±rTemp
 =ÖåTemp->
√xt
;

503 
	}
}

511 
	$ldCÆdi°™˚
(
uöt32_t
 
æo
, uöt32_à
æa
, uöt32_à
ﬁo
, uöt32_à
ﬁa
)

513 
a
, 
b
, 
c
, 
d
, 
x
, 
y
, 
z
;

514 
a
 = ()((
æo
 * 1e-7Ë* 
M_PI
 / 180);

515 
b
 = ()((
æa
 * 1e-7Ë* 
M_PI
 / 180);

516 
c
 = ()((
ﬁo
 * 1e-7Ë* 
M_PI
 / 180);

517 
d
 = ()((
ﬁa
 * 1e-7Ë* 
M_PI
 / 180);

518 
x
 = 
	`sö
(
b
Ë* sö(
d
);

519 
y
 = 
	`cos
(
b
Ë* cos(
d
);

520 
z
 = 
	`Ábs
(
c
 - 
a
);

521 
y
 = y*
	`cos
(
z
);

522 
x
 = 
	`acos
(x + 
y
);

523 
y
 = 
x
 * 6371009;

525  
y
;

526 
	}
}

533 * 
	$rxThªad
(*
nŸu£d
){

536 !
ídög
){

538 
	`±hªad_muãx_lock
(&
g_mib
.
txMtx
);

539 
	`±hªad_c⁄d_waô
(&
g_mib
.
txC⁄d
, &g_mib.
txMtx
);

540 
	`±hªad_muãx_u∆ock
(&
g_mib
.
txMtx
);

541 
	`∑r_Rï‹t
();

545 
	`±hªad_exô
((*)0);

546 
	}
}

	@/media/sf_Source/200104_Application_source/PAR/src/PAR_RX_bk_200619.c

1 
	~<°dio.h
>

2 
	~<m©h.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<uni°d.h
>

7 
	~"msgQ.h
"

8 
	~<sys/msg.h
>

9 
	~<sys/ùc.h
>

10 
	~<sig«l.h
>

11 
	~<mÆloc.h
>

12 
	~<PAR.h
>

19 
∑r_InôRX›î©i⁄
();

20 
∑r_RX›î©i⁄
();

21 
∑r_Rï‹t
();

22 
ldCÆdi°™˚
(
uöt32_t
 
æo
, uöt32_à
æa
, uöt32_à
ﬁo
, uöt32_à
ﬁa
);

23 * 
rxThªad
(*
nŸu£d
);

24 * 
u£rSñe˘Thªad
(*
nŸu£d
);

25 
¸óãNode
();

26 
‰ìAŒNode
();

27 
∑rInfo_t
* 
gëNode
(
ödex
);

28 
gëCÆD©aR˝i
(
uöt8_t
* 
¨øy
, 
¨øyIdx
, 
mode
);

29 
gëCÆD©aRxpowî
(
öt16_t
* 
¨øy
, 
¨øyIdx
, 
mode
);

39 
	$∑r_InôRX›î©i⁄
(){

41 
öt32_t
 
ªt
;

42 
°©us
;

44 i‡(
Li°På
 =
NULL
) {

45 
Li°På
 = (
lökedLi°
*)
	`mÆloc
((linkedList));

46 
Li°På
->
cur
 = 
NULL
;

47 
Li°På
->
hód
 = 
NULL
;

48 
Li°På
->
èû
 = 
NULL
;

49 
Li°På
->
numOfLi°
 = 0;

65 if(
g_mib
.
öãrvÆ
 == 0)

67 
g_mib
.
öãrvÆ
 = 1000000;

70 if(
g_mib
.
cy˛e
 == 0)

72 
g_mib
.
cy˛e
 = 10;

76 
	`±hªad_muãx_öô
(&
g_mib
.
txMtx
, 
NULL
);

77 
	`±hªad_c⁄d_öô
(&
g_mib
.
txC⁄d
, 
NULL
);

81 
	`InôTxTimî
(
g_mib
.
öãrvÆ
);

84 
ªt
 = 
	`±hªad_¸óã
(&
rx_thªad
, 
NULL
, 
rxThªad
, NULL);

85 if(
ªt
 <0){

87 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] FailÅo create RXÅhread()\n");

92 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Success create RXÅhread()\n");

96 if(
g_mib
.
Inf‹m©i⁄
 != 0){

97 
ªt
 = 
	`±hªad_¸óã
(&
u£rSñe˘_thªad
, 
NULL
, 
u£rSñe˘Thªad
, NULL);

98 if(
ªt
 < 0){

99 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] FailÅo create userSelectÅhread()\n");

102 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Success create userSelectÅhread()\n");

109 
ªt
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

110 if(
ªt
 <0){

111 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªt
));

112 
shmCheck
 = 
åue
;

115 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Success gps_open()\n");

120 
	}
}

130 
	$∑r_RX›î©i⁄
(){

132 
öt32_t
 
ªt
;

133 
uöt32_t
 
Àn
;

134 
uöt8_t
 
outBuf
[
BUFSIZE
];

135 
°©us
;

137 
	`mem£t
(
outBuf
, 0, 
BUFSIZE
);

145 !
ídög
){

148 if(
shmCheck
 =
åue
)

150 
	`gps_˛o£
(&
gpsD©a
);

151 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Re connectionÅo GPSD\n");

152 
ªt
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

154 if(
ªt
 < 0)

156 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªt
));

158 
shmCheck
 = 
Ál£
;

163 
ªt
 = 
	`gps_ªad
(&
gpsD©a
);

164 if(
ªt
 < 0){

166 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] gps_ªad(ËÁû–%s)\n", 
	`gps_îr°r
(
ªt
));

167 
shmCheck
 = 
åue
;

173 if–
g_mib
.
L©ôude
 !0 && g_mib.
L⁄gôude
 != 0)

175 
g_obu
.
obuL©ôude
 = 
g_mib
.
L©ôude
;

176 
g_obu
.
obuL⁄gôude
 = 
g_mib
.
L⁄gôude
;

178 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"Success INPUT LATIánd LONGI\n");

180 if(
g_mib
.
dbg
)

182 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ò: %d OBUL⁄gò: %d \n",
g_obu
.
OBUL©ôude
, g_obu.
OBUL⁄gôude
);

190 if(
gpsD©a
.
£t
)

194 
g_obu
.
obuL©ôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
œtôude
;

195 
g_obu
.
obuL⁄gôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
l⁄gôude
;

196 
g_obu
.
obuS≥ed
 = 
gpsD©a
.
fix
.
•ìd
;

197 
g_obu
.
obuHódög
 = 
gpsD©a
.
fix
.
åack
;

200 if(
g_mib
.
dbg
)

202 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ôudê: %d OBUL⁄gôudê: %d OBUS≥ed : %‡OBUHódög : %‡\n", 
g_obu
.
OBUL©ôude
, g_obu.
OBUL⁄gôude
, g_obu.
OBUS≥ed
, g_obu.
OBUHódög
);

210 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] GPS Invalid\n");

211 
g_obu
.
obuL©ôude
 = 900000001;

212 
g_obu
.
obuL⁄gôude
 = 1800000001;

213 
g_obu
.
obuS≥ed
 = 8191;

214 
g_obu
.
obuHódög
 = 28800;

217 if(
g_mib
.
dbg
)

219 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ôudê: %d OBUL⁄gôudê: %d OBUS≥ed : %‡OBUHódög : %‡\n", 
g_obu
.
OBUL©ôude
, g_obu.
OBUL⁄gôude
, g_obu.
OBUS≥ed
, g_obu.
OBUHódög
);

227 
Àn
 = 
	`ªcvMQ
(
outBuf
);

228 if(
Àn
<0)

232 if(
Àn
 >0)

234 
	`mem˝y
(&
g_Packë
,
outBuf
,
Àn
);

238 if(
g_Packë
.
rsuID
 > 
Li°På
->
numOfLi°
){

239 
	`¸óãNode
();

242 
Li°På
->
cur
 = 
	`gëNode
(
g_Packë
.
rsuID
);

244 if(
Li°På
->
cur
->
¨øyIdx
 == 10)

245 
Li°På
->
cur
->
¨øyIdx
 = 0;

246 
Li°På
->
cur
->
check
 =1;

247 
Li°På
->
cur
->
rsuID
 = 
g_Packë
.rsuID;

248 
Li°På
->
cur
->
rsuL⁄gôude
 = 
g_Packë
.rsuLongitude;

249 
Li°På
->
cur
->
rsuL©ôude
 = 
g_Packë
.rsuLatitude;

250 
Li°På
->
cur
->
obuS≥ed
 = 
g_obu
.obuSpeed;

251 
Li°På
->
cur
->
obuHódög
 = 
g_obu
.obuHeading;

252 
Li°På
->
cur
->
öãrvÆ
 = 
g_mib
.
cy˛e
;

253 
Li°På
->
cur
->
rxpowî
[Li°På->cur->
¨øyIdx
] = 
g_Packë
.
rxPowî
;

254 
Li°På
->
cur
->
r˝i
[Li°På->cur->
¨øyIdx
] = 
g_Packë
.rcpi;

255 
Li°På
->
cur
->
obuL⁄gôude
 = 
g_obu
.obuLongitude;

256 
Li°På
->
cur
->
obuL©ôude
 = 
g_obu
.obuLatitude;

257 
Li°På
->
cur
->
˙t
++;

258 
Li°På
->
cur
->
¨øyIdx
++;

260 
°PARInfo
[
g_Packë
.
rsuID
].
check
 =1;

261 
°PARInfo
[
g_Packë
.
rsuID
].rsuID = g_Packet.rsuID;

262 
°PARInfo
[
g_Packë
.
rsuID
].
rsuL⁄gôude
 = g_Packet.rsuLongitude;

263 
°PARInfo
[
g_Packë
.
rsuID
].
rsuL©ôude
 = g_Packet.rsuLatitude;

264 
°PARInfo
[
g_Packë
.
rsuID
].
obuS≥ed
 = 
g_obu
.obuSpeed;

265 
°PARInfo
[
g_Packë
.
rsuID
].
obuHódög
 = 
g_obu
.obuHeading;

266 
°PARInfo
[
g_Packë
.
rsuID
].
öãrvÆ
 = 
g_mib
.
cy˛e
;

267 
°PARInfo
[
g_Packë
.
rsuID
].
rxpowî
 = g_Packë.
rxPowî
;

268 
°PARInfo
[
g_Packë
.
rsuID
].
r˝i
 = g_Packet.rcpi;

269 
°PARInfo
[
g_Packë
.
rsuID
].
obuL⁄gôude
 = 
g_obu
.obuLongitude;

270 
°PARInfo
[
g_Packë
.
rsuID
].
obuL©ôude
 = 
g_obu
.obuLatitude;

271 
°PARInfo
[
g_Packë
.
rsuID
].
˙t
++;

275 if(
g_mib
.
dbg
)

277 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"°PARInfo[CNT] : %d \n\n\n",
°PARInfo
[
g_Packë
.
rsuID
].
˙t
);

287 
	`‰ìAŒNode
();

291 
ªt
 = 
	`±hªad_joö
(
u£rSñe˘_thªad
, (**)
°©us
);

292 if–
ªt
 == 0 )

294 
	`¥ötf
("[PAR_RX] Com∂ëed joö wôh u£rSñe˘Thªad sètu†%d\n", 
°©us
);

299 
	`¥ötf
("[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

304 
ªt
 = 
	`±hªad_joö
(
rx_thªad
, (**)
°©us
);

305 if–
ªt
 == 0 )

308 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Com∂ëed joö wôhÑxThªad sètu†%d\n", 
°©us
);

313 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

317 
	`gps_˛o£
(&
gpsD©a
);

320 
	`±hªad_muãx_de°roy
(&
g_mib
.
txMtx
);

321 
	`±hªad_c⁄d_de°roy
(&
g_mib
.
txC⁄d
);

322 
	}
}

328 
	$¸óãNode
() {

330 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] CreateNode\n");

332 
∑rInfo_t
* 
°PARInfoPå
 =(∑rInfo_à*Ë
	`mÆloc
((parInfo_t));

333 
°PARInfoPå
->
√xt
 = 
NULL
;

336 if(
Li°På
->
hód
 =
NULL
 && Li°På->
èû
 == NULL)

339 
Li°På
->
hód
 = Li°På->
èû
 = 
°PARInfoPå
;

345 
Li°På
->
èû
->
√xt
 = 
°PARInfoPå
;

346 
Li°På
->
èû
 = 
°PARInfoPå
;

348 
Li°På
->
cur
 = Li°På->
èû
;

349 
Li°På
->
èû
->
˙t
 = 0;

350 
Li°På
->
èû
->
¨øyIdx
 = 0;

351 
Li°På
->
numOfLi°
++;

352 
	}
}

358 
	$‰ìAŒNode
(){

359 
∑rInfo_t
* 
ãmpPå
 = 
Li°På
->
hód
;

360 
ãmpPå
 !
NULL
){

361 
Li°På
->
hód
 = Li°På->hód->
√xt
;

362 
	`‰ì
(
ãmpPå
);

363 
ãmpPå
 = 
Li°På
->
hód
;

365 
Li°På
->
èû
 = 
NULL
;

366 
Li°På
->
numOfLi°
 = 0;

367 
	}
}

373 
∑rInfo_t
* 
	$gëNode
(
ödex
){

374 
∑rInfo_t
* 
ªtu∫På
 = 
Li°På
->
hód
;

376 
i
=1; i<
ödex
;i++)

377 
ªtu∫På
 =Ñëu∫På->
√xt
;

379  
ªtu∫På
;

380 
	}
}

387 
	$gëCÆD©aR˝i
(
uöt8_t
* 
¨øy
, 
¨øyIdx
, 
mode
){

388 if(
¨øyIdx
 > 0){

389 
uöt16_t
 
sum
 = 
¨øy
[0];

390 
uöt8_t
 
mö
 = 
¨øy
[0];

391 
uöt8_t
 
max
 = 
¨øy
[0];

395 
i
=1; i<
¨øyIdx
; i++){

397 
sum
 +
¨øy
[
i
];

399 if(
¨øy
[
i
] < 
mö
)

400 
mö
 = 
¨øy
[
i
];

402 if(
¨øy
[
i
] > 
max
)

403 
max
 = 
¨øy
[
i
];

408 if(
mode
 == 0)

409 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "Max_rcpi: %d, Min_rcpi: %d, Avr_rcpi: %.1f, Last_rcpi: %d\n",

410 
max
, 
mö
, ()(
sum
/
¨øyIdx
), 
¨øy
[arrayIdx-1]);

412 
	`¥ötf
("Max_rcpi: %d, Min_rcpi: %d, Avr_rcpi: %.1f, Last_rcpi: %d\n",

413 
max
, 
mö
, ()(
sum
/
¨øyIdx
), 
¨øy
[arrayIdx-1]);

415 
	}
}

421 
	$gëCÆD©aRxpowî
(
öt16_t
* 
¨øy
, 
¨øyIdx
, 
mode
){

422 if(
¨øyIdx
 > 0){

423 
öt16_t
 
sum
 = 
¨øy
[0];

424 
öt16_t
 
mö
 = 
¨øy
[0];

425 
öt16_t
 
max
 = 
¨øy
[0];

429 
i
=1; i<
¨øyIdx
; i++){

430 
sum
 +
¨øy
[
i
];

432 if(
¨øy
[
i
] < 
mö
)

433 
mö
 = 
¨øy
[
i
];

435 if(
¨øy
[
i
] > 
max
)

436 
max
 = 
¨øy
[
i
];

441 if(
mode
==0)

442 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "Max_rxpower: %d, Min_rxpower: %d, Avr_rxpower: %.1f, Last_rxpower: %d\n",

443 
max
, 
mö
, ()(
sum
/
¨øyIdx
), 
¨øy
[arrayIdx-1]);

445 
	`¥ötf
("Max_rxpower: %d, Min_rxpower: %d, Avr_rxpower: %.1f, Last_rxpower: %d\n",

446 
max
, 
mö
, ()(
sum
/
¨øyIdx
), 
¨øy
[arrayIdx-1]);

448 
	}
}

458 
	$∑r_Rï‹t
(){

460 
idx
 = 0;

462 
uöt32_t
 
˙t
[
Li°På
->
numOfLi°
];

469 
∑rInfo_t
 *
±rTemp
 = 
Li°På
->
hód
;

472 
idx
=0;idx<=
Li°På
->
numOfLi°
;idx++)

475 if(
±rTemp
 =
NULL
)

479 
˙t
[
idx
]=0;

484 
±rTemp
->
curPAR
 = 0;

485 
±rTemp
->
maxPAR
 = 0;

495 if(
±rTemp
->
check
 >0 &&ÖåTemp->
˙t
==0)

497 
±rTemp
->
check
++;

500 if(
±rTemp
->
check
 > 
MAX_ZERO_COUNT
 &&ÖåTemp->
˙t
==0)

503 
±rTemp
->
check
=0;

506 if(
±rTemp
->
check
==0)

508 
±rTemp
->
¨øyIdx
 =0;

509 
±rTemp
 =ÖåTemp->
√xt
;

514 
±rTemp
->
di°™˚
 = 
	`ldCÆdi°™˚
’åTemp->
rsuL⁄gôude
,ÖåTemp->
rsuL©ôude
,ÖåTemp->
obuL⁄gôude
,ÖåTemp->
obuL©ôude
);

517 
˙t
[
idx
] = 
±rTemp
->cnt;

520 
±rTemp
->
˙t
 = 0;

530 
±rTemp
->
curPAR
 = (
˙t
[
idx
]*100)/(1000/±rTemp->
öãrvÆ
);

533 if(
±rTemp
->
curPAR
 >ÖåTemp->
maxPAR
)

534 
±rTemp
->
maxPAR
 =ÖåTemp->
curPAR
;

537 if(
g_mib
.
dbg
){

540 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "CHECK : %u, RSUID : %d, RSU Latitude : %d, RSU Longitude : %d, OBU Latitude : %d, OBU Longitude : %d\n",

541 
±rTemp
->
check
,

542 
±rTemp
->
rsuID
,

543 
±rTemp
->
rsuL©ôude
,

544 
±rTemp
->
rsuL⁄gôude
,

545 
±rTemp
->
obuL©ôude
,

546 
±rTemp
->
obuL⁄gôude
);

548 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "Distance : %.0f, OBUSpeed : %3.2f, OBUHeading : %3.2f, CNT : %u, PAR : %d\n",

551 
±rTemp
->
di°™˚
,

552 ()
±rTemp
->
obuS≥ed
,

553 ()
±rTemp
->
obuHódög
,

554 
˙t
[
idx
],

555 
±rTemp
->
maxPAR
);

556 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
¨øyIdx
,0);

557 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
¨øyIdx
,0);

560 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "--------------------------------------------------------------------------------------------------\n");

563 
	`¥ötf
("CHECK : %u, RSUID : %d, RSU Latitude : %d, RSU Longitude : %d, OBU Latitude : %d, OBU Longitude : %d, RXPOWER : %d,Ñcpi : %d, distance : %.0f, OBUSpeed : %3.2f, OBUHeading : %3.2f, CNT : %u, PAR : %d\n",

564 
°PARInfo
[
idx
].
check
,

565 
°PARInfo
[
idx
].
rsuID
,

566 
°PARInfo
[
idx
].
rsuL©ôude
,

567 
°PARInfo
[
idx
].
rsuL⁄gôude
,

568 
°PARInfo
[
idx
].
obuL©ôude
,

569 
°PARInfo
[
idx
].
obuL⁄gôude
,

570 
°PARInfo
[
idx
].
rxpowî
,

571 
°PARInfo
[
idx
].
r˝i
,

572 
°PARInfo
[
idx
].
di°™˚
,

573 ()
°PARInfo
[
idx
].
obuS≥ed
,

574 ()
°PARInfo
[
idx
].
obuHódög
,

575 
˙t
[
idx
],

576 
°PARInfo
[
idx
].
maxPAR
);

579 
±rTemp
->
¨øyIdx
 =0;

580 
±rTemp
 =ÖåTemp->
√xt
;

584 
	}
}

592 
	$ldCÆdi°™˚
(
uöt32_t
 
æo
, uöt32_à
æa
, uöt32_à
ﬁo
, uöt32_à
ﬁa
)

594 
a
, 
b
, 
c
, 
d
, 
x
, 
y
, 
z
;

595 
a
 = ()((
æo
 * 1e-7Ë* 
M_PI
 / 180);

596 
b
 = ()((
æa
 * 1e-7Ë* 
M_PI
 / 180);

597 
c
 = ()((
ﬁo
 * 1e-7Ë* 
M_PI
 / 180);

598 
d
 = ()((
ﬁa
 * 1e-7Ë* 
M_PI
 / 180);

599 
x
 = 
	`sö
(
b
Ë* sö(
d
);

600 
y
 = 
	`cos
(
b
Ë* cos(
d
);

601 
z
 = 
	`Ábs
(
c
 - 
a
);

602 
y
 = y*
	`cos
(
z
);

603 
x
 = 
	`acos
(x + 
y
);

604 
y
 = 
x
 * 6371009;

606  
y
;

607 
	}
}

614 * 
	$rxThªad
(*
nŸu£d
){

617 !
ídög
){

619 
	`±hªad_muãx_lock
(&
g_mib
.
txMtx
);

620 
	`±hªad_c⁄d_waô
(&
g_mib
.
txC⁄d
, &g_mib.
txMtx
);

621 
	`±hªad_muãx_u∆ock
(&
g_mib
.
txMtx
);

622 
	`∑r_Rï‹t
();

626 
	`±hªad_exô
((*)0);

627 
	}
}

629 * 
	$u£rSñe˘Thªad
(*
nŸu£d
){

630 
num
;

631 
ªt
;

632 
°©us
;

633 
∑rInfo_t
 *
±rTemp
 = 
NULL
;

634 
num
 = 0;

635 
£À˘RsuID
;

639 
num
){

641 
	`¥ötf
(" MENU\n");

642 
	`¥ötf
("====Please selectáÇumber====\n");

643 
	`¥ötf
("1. Printing Connected RSUID(s) Information\n");

644 
	`¥ötf
("2. PrintingÅhe RSU information you want\n");

645 
	`¥ötf
("3. QUit\n>> ");

646 
	`sˇnf
("%d",&
num
);

649 
±rTemp
 = 
Li°På
->
hód
;

650 
i
=0; i<
Li°På
->
numOfLi°
; i++){

651 
	`¥ötf
("RSUID o‡[%d]: %d\n",
i
+1,
±rTemp
->
rsuID
);

652 
±rTemp
 =ÖåTemp->
√xt
;

654 
num
 = 0;

657 
	`¥ötf
("InputÇumber of RSU >> ");

658 
	`sˇnf
("%d",&
£À˘RsuID
);

659 
±rTemp
 = 
	`gëNode
(
£À˘RsuID
);

660 
	`¥ötf
("[%d] inf‹m©i⁄ :\n",
£À˘RsuID
);

661 
	`¥ötf
( "CHECK : %u\nRSUID : %d\nRSU Latitude : %d\nRSU Longitude : %d\nOBU Latitude : %d\nOBU Longitude : %d\n",

662 
±rTemp
->
check
,

663 
±rTemp
->
rsuID
,

664 
±rTemp
->
rsuL©ôude
,

665 
±rTemp
->
rsuL⁄gôude
,

666 
±rTemp
->
obuL©ôude
,

667 
±rTemp
->
obuL⁄gôude
);

668 
	`¥ötf
("Distance : %.0f\nOBUSpeed : %3.2f\nOBUHeading : %3.2f\nPAR : %d\n",

669 
±rTemp
->
di°™˚
,

670 ()
±rTemp
->
obuS≥ed
,

671 ()
±rTemp
->
obuHódög
,

672 
±rTemp
->
maxPAR
);

673 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
¨øyIdx
,1);

674 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
¨øyIdx
,1);

675 
num
=0;

679 
	`¥ötf
("Success Quit!\n");

680 
	`±hªad_exô
((*)0);

685 
	`¥ötf
("#error:not usableÖarameter\n");

686 
num
 = 0;

692 
ªt
 = 
	`±hªad_joö
(
u£rSñe˘_thªad
, (**)
°©us
);

693 if–
ªt
 == 0 )

695 
	`¥ötf
("[PAR_RX] Com∂ëed joö wôh u£rSñe˘Thªad sètu†%d\n", 
°©us
);

700 
	`¥ötf
("[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

705 
	}
}

	@/media/sf_Source/200104_Application_source/PAR/src/PAR_RX_bk_200619_2.c

1 
	~<°dio.h
>

2 
	~<m©h.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<uni°d.h
>

7 
	~"msgQ.h
"

8 
	~<sys/msg.h
>

9 
	~<sys/ùc.h
>

10 
	~<sig«l.h
>

11 
	~<mÆloc.h
>

12 
	~<PAR.h
>

19 
∑r_InôRX›î©i⁄
();

20 
∑r_RX›î©i⁄
();

21 
∑r_Rï‹t
();

22 
ldCÆdi°™˚
(
uöt32_t
 
æo
, uöt32_à
æa
, uöt32_à
ﬁo
, uöt32_à
ﬁa
);

23 * 
rxThªad
(*
nŸu£d
);

24 * 
u£rSñe˘Thªad
(*
nŸu£d
);

25 
¸óãNode
();

26 
‰ìAŒNode
();

27 
∑rInfo_t
* 
gëNode
(
ödex
);

28 
gëCÆD©aR˝i
(
uöt8_t
* 
¨øy
, 
¨øyIdx
, 
mode
);

29 
gëCÆD©aRxpowî
(
öt16_t
* 
¨øy
, 
¨øyIdx
, 
mode
);

39 
	$∑r_InôRX›î©i⁄
(){

41 
öt32_t
 
ªt
;

42 
°©us
;

44 i‡(
Li°På
 =
NULL
) {

45 
Li°På
 = (
lökedLi°
*)
	`mÆloc
((linkedList));

46 
Li°På
->
cur
 = 
NULL
;

47 
Li°På
->
hód
 = 
NULL
;

48 
Li°På
->
èû
 = 
NULL
;

49 
Li°På
->
numOfLi°
 = 0;

65 if(
g_mib
.
öãrvÆ
 == 0)

67 
g_mib
.
öãrvÆ
 = 1000000;

70 if(
g_mib
.
cy˛e
 == 0)

72 
g_mib
.
cy˛e
 = 10;

76 
	`±hªad_muãx_öô
(&
g_mib
.
txMtx
, 
NULL
);

77 
	`±hªad_c⁄d_öô
(&
g_mib
.
txC⁄d
, 
NULL
);

81 
	`InôTxTimî
(
g_mib
.
öãrvÆ
);

84 
ªt
 = 
	`±hªad_¸óã
(&
rx_thªad
, 
NULL
, 
rxThªad
, NULL);

85 if(
ªt
 <0){

87 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] FailÅo create RXÅhread()\n");

92 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Success create RXÅhread()\n");

96 if(
g_mib
.
Inf‹m©i⁄
 != 0){

97 
ªt
 = 
	`±hªad_¸óã
(&
u£rSñe˘_thªad
, 
NULL
, 
u£rSñe˘Thªad
, NULL);

98 if(
ªt
 < 0){

99 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] FailÅo create userSelectÅhread()\n");

102 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Success create userSelectÅhread()\n");

109 
ªt
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

110 if(
ªt
 <0){

111 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªt
));

112 
shmCheck
 = 
åue
;

115 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Success gps_open()\n");

120 
	}
}

130 
	$∑r_RX›î©i⁄
(){

132 
öt32_t
 
ªt
;

133 
uöt32_t
 
Àn
;

134 
uöt8_t
 
outBuf
[
BUFSIZE
];

135 
°©us
;

137 
	`mem£t
(
outBuf
, 0, 
BUFSIZE
);

145 !
ídög
){

148 if(
shmCheck
 =
åue
)

150 
	`gps_˛o£
(&
gpsD©a
);

151 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Re connectionÅo GPSD\n");

152 
ªt
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

154 if(
ªt
 < 0)

156 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªt
));

158 
shmCheck
 = 
Ál£
;

163 
ªt
 = 
	`gps_ªad
(&
gpsD©a
);

164 if(
ªt
 < 0){

166 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] gps_ªad(ËÁû–%s)\n", 
	`gps_îr°r
(
ªt
));

167 
shmCheck
 = 
åue
;

173 if–
g_mib
.
L©ôude
 !0 && g_mib.
L⁄gôude
 != 0)

175 
g_obu
.
obuL©ôude
 = 
g_mib
.
L©ôude
;

176 
g_obu
.
obuL⁄gôude
 = 
g_mib
.
L⁄gôude
;

178 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"Success INPUT LATIánd LONGI\n");

180 if(
g_mib
.
dbg
)

182 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ò: %d OBUL⁄gò: %d \n",
g_obu
.
OBUL©ôude
, g_obu.
OBUL⁄gôude
);

190 if(
gpsD©a
.
£t
)

194 
g_obu
.
obuL©ôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
œtôude
;

195 
g_obu
.
obuL⁄gôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
l⁄gôude
;

196 
g_obu
.
obuS≥ed
 = 
gpsD©a
.
fix
.
•ìd
;

197 
g_obu
.
obuHódög
 = 
gpsD©a
.
fix
.
åack
;

200 if(
g_mib
.
dbg
)

202 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ôudê: %d OBUL⁄gôudê: %d OBUS≥ed : %‡OBUHódög : %‡\n", 
g_obu
.
OBUL©ôude
, g_obu.
OBUL⁄gôude
, g_obu.
OBUS≥ed
, g_obu.
OBUHódög
);

210 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] GPS Invalid\n");

211 
g_obu
.
obuL©ôude
 = 900000001;

212 
g_obu
.
obuL⁄gôude
 = 1800000001;

213 
g_obu
.
obuS≥ed
 = 8191;

214 
g_obu
.
obuHódög
 = 28800;

217 if(
g_mib
.
dbg
)

219 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ôudê: %d OBUL⁄gôudê: %d OBUS≥ed : %‡OBUHódög : %‡\n", 
g_obu
.
OBUL©ôude
, g_obu.
OBUL⁄gôude
, g_obu.
OBUS≥ed
, g_obu.
OBUHódög
);

227 
Àn
 = 
	`ªcvMQ
(
outBuf
);

228 if(
Àn
<0)

232 if(
Àn
 >0)

234 
	`mem˝y
(&
g_Packë
,
outBuf
,
Àn
);

238 if(
g_Packë
.
rsuID
 > 
Li°På
->
numOfLi°
){

239 
	`¸óãNode
();

242 
Li°På
->
cur
 = 
	`gëNode
(
g_Packë
.
rsuID
);

244 if(
Li°På
->
cur
->
¨øyIdx
 == 10)

245 
Li°På
->
cur
->
¨øyIdx
 = 0;

246 
Li°På
->
cur
->
check
 =1;

247 
Li°På
->
cur
->
rsuID
 = 
g_Packë
.rsuID;

248 
Li°På
->
cur
->
rsuL⁄gôude
 = 
g_Packë
.rsuLongitude;

249 
Li°På
->
cur
->
rsuL©ôude
 = 
g_Packë
.rsuLatitude;

250 
Li°På
->
cur
->
obuS≥ed
 = 
g_obu
.obuSpeed;

251 
Li°På
->
cur
->
obuHódög
 = 
g_obu
.obuHeading;

252 
Li°På
->
cur
->
öãrvÆ
 = 
g_mib
.
cy˛e
;

253 
Li°På
->
cur
->
rxpowî
[Li°På->cur->
¨øyIdx
] = 
g_Packë
.
rxPowî
;

254 
Li°På
->
cur
->
r˝i
[Li°På->cur->
¨øyIdx
] = 
g_Packë
.rcpi;

255 
Li°På
->
cur
->
obuL⁄gôude
 = 
g_obu
.obuLongitude;

256 
Li°På
->
cur
->
obuL©ôude
 = 
g_obu
.obuLatitude;

257 
Li°På
->
cur
->
˙t
++;

258 
Li°På
->
cur
->
¨øyIdx
++;

260 
°PARInfo
[
g_Packë
.
rsuID
].
check
 =1;

261 
°PARInfo
[
g_Packë
.
rsuID
].rsuID = g_Packet.rsuID;

262 
°PARInfo
[
g_Packë
.
rsuID
].
rsuL⁄gôude
 = g_Packet.rsuLongitude;

263 
°PARInfo
[
g_Packë
.
rsuID
].
rsuL©ôude
 = g_Packet.rsuLatitude;

264 
°PARInfo
[
g_Packë
.
rsuID
].
obuS≥ed
 = 
g_obu
.obuSpeed;

265 
°PARInfo
[
g_Packë
.
rsuID
].
obuHódög
 = 
g_obu
.obuHeading;

266 
°PARInfo
[
g_Packë
.
rsuID
].
öãrvÆ
 = 
g_mib
.
cy˛e
;

267 
°PARInfo
[
g_Packë
.
rsuID
].
rxpowî
 = g_Packë.
rxPowî
;

268 
°PARInfo
[
g_Packë
.
rsuID
].
r˝i
 = g_Packet.rcpi;

269 
°PARInfo
[
g_Packë
.
rsuID
].
obuL⁄gôude
 = 
g_obu
.obuLongitude;

270 
°PARInfo
[
g_Packë
.
rsuID
].
obuL©ôude
 = 
g_obu
.obuLatitude;

271 
°PARInfo
[
g_Packë
.
rsuID
].
˙t
++;

275 if(
g_mib
.
dbg
)

277 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"°PARInfo[CNT] : %d \n\n\n",
°PARInfo
[
g_Packë
.
rsuID
].
˙t
);

287 
ªt
 = 
	`±hªad_joö
(
u£rSñe˘_thªad
, (**)
°©us
);

288 if–
ªt
 == 0 )

290 
	`¥ötf
("[PAR_RX] Com∂ëed joö wôh u£rSñe˘Thªad sètu†%d\n", 
°©us
);

295 
	`¥ötf
("[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

299 
	`‰ìAŒNode
();

304 
ªt
 = 
	`±hªad_joö
(
rx_thªad
, (**)
°©us
);

305 if–
ªt
 == 0 )

308 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] Com∂ëed joö wôhÑxThªad sètu†%d\n", 
°©us
);

313 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL3
, "[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

317 
	`gps_˛o£
(&
gpsD©a
);

320 
	`±hªad_muãx_de°roy
(&
g_mib
.
txMtx
);

321 
	`±hªad_c⁄d_de°roy
(&
g_mib
.
txC⁄d
);

322 
	}
}

331 
	$∑r_Rï‹t
(){

333 
idx
 = 0;

335 
uöt32_t
 
˙t
[
Li°På
->
numOfLi°
];

342 
∑rInfo_t
 *
±rTemp
 = 
Li°På
->
hód
;

345 
idx
=0;idx<=
Li°På
->
numOfLi°
;idx++)

348 if(
±rTemp
 =
NULL
)

352 
˙t
[
idx
]=0;

357 
±rTemp
->
curPAR
 = 0;

358 
±rTemp
->
maxPAR
 = 0;

368 if(
±rTemp
->
check
 >0 &&ÖåTemp->
˙t
==0)

370 
±rTemp
->
check
++;

373 if(
±rTemp
->
check
 > 
MAX_ZERO_COUNT
 &&ÖåTemp->
˙t
==0)

376 
±rTemp
->
check
=0;

379 if(
±rTemp
->
check
==0)

381 
±rTemp
->
¨øyIdx
 =0;

382 
±rTemp
 =ÖåTemp->
√xt
;

387 
±rTemp
->
di°™˚
 = 
	`ldCÆdi°™˚
’åTemp->
rsuL⁄gôude
,ÖåTemp->
rsuL©ôude
,ÖåTemp->
obuL⁄gôude
,ÖåTemp->
obuL©ôude
);

390 
˙t
[
idx
] = 
±rTemp
->cnt;

393 
±rTemp
->
˙t
 = 0;

403 
±rTemp
->
curPAR
 = (
˙t
[
idx
]*100)/(1000/±rTemp->
öãrvÆ
);

406 if(
±rTemp
->
curPAR
 >ÖåTemp->
maxPAR
)

407 
±rTemp
->
maxPAR
 =ÖåTemp->
curPAR
;

410 if(
g_mib
.
dbg
){

413 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "CHECK : %u, RSUID : %d, RSU Latitude : %d, RSU Longitude : %d, OBU Latitude : %d, OBU Longitude : %d\n",

414 
±rTemp
->
check
,

415 
±rTemp
->
rsuID
,

416 
±rTemp
->
rsuL©ôude
,

417 
±rTemp
->
rsuL⁄gôude
,

418 
±rTemp
->
obuL©ôude
,

419 
±rTemp
->
obuL⁄gôude
);

421 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "Distance : %.0f, OBUSpeed : %3.2f, OBUHeading : %3.2f, CNT : %u, PAR : %d\n",

424 
±rTemp
->
di°™˚
,

425 ()
±rTemp
->
obuS≥ed
,

426 ()
±rTemp
->
obuHódög
,

427 
˙t
[
idx
],

428 
±rTemp
->
maxPAR
);

429 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
¨øyIdx
,0);

430 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
¨øyIdx
,0);

433 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "--------------------------------------------------------------------------------------------------\n");

436 
	`¥ötf
("CHECK : %u, RSUID : %d, RSU Latitude : %d, RSU Longitude : %d, OBU Latitude : %d, OBU Longitude : %d, RXPOWER : %d,Ñcpi : %d, distance : %.0f, OBUSpeed : %3.2f, OBUHeading : %3.2f, CNT : %u, PAR : %d\n",

437 
°PARInfo
[
idx
].
check
,

438 
°PARInfo
[
idx
].
rsuID
,

439 
°PARInfo
[
idx
].
rsuL©ôude
,

440 
°PARInfo
[
idx
].
rsuL⁄gôude
,

441 
°PARInfo
[
idx
].
obuL©ôude
,

442 
°PARInfo
[
idx
].
obuL⁄gôude
,

443 
°PARInfo
[
idx
].
rxpowî
,

444 
°PARInfo
[
idx
].
r˝i
,

445 
°PARInfo
[
idx
].
di°™˚
,

446 ()
°PARInfo
[
idx
].
obuS≥ed
,

447 ()
°PARInfo
[
idx
].
obuHódög
,

448 
˙t
[
idx
],

449 
°PARInfo
[
idx
].
maxPAR
);

452 
±rTemp
->
¨øyIdx
 =0;

453 
±rTemp
 =ÖåTemp->
√xt
;

457 
	}
}

462 
	$¸óãNode
() {

464 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "[PAR_RX] CreateNode\n");

466 
∑rInfo_t
* 
°PARInfoPå
 =(∑rInfo_à*Ë
	`mÆloc
((parInfo_t));

467 
°PARInfoPå
->
√xt
 = 
NULL
;

470 if(
Li°På
->
hód
 =
NULL
 && Li°På->
èû
 == NULL)

473 
Li°På
->
hód
 = Li°På->
èû
 = 
°PARInfoPå
;

479 
Li°På
->
èû
->
√xt
 = 
°PARInfoPå
;

480 
Li°På
->
èû
 = 
°PARInfoPå
;

482 
Li°På
->
cur
 = Li°På->
èû
;

483 
Li°På
->
èû
->
˙t
 = 0;

484 
Li°På
->
èû
->
¨øyIdx
 = 0;

485 
Li°På
->
numOfLi°
++;

486 
	}
}

492 
	$‰ìAŒNode
(){

493 
∑rInfo_t
* 
ãmpPå
 = 
Li°På
->
hód
;

494 
ãmpPå
 !
NULL
){

495 
Li°På
->
hód
 = Li°På->hód->
√xt
;

496 
	`‰ì
(
ãmpPå
);

497 
ãmpPå
 = 
Li°På
->
hód
;

499 
Li°På
->
èû
 = 
NULL
;

500 
Li°På
->
numOfLi°
 = 0;

501 
	}
}

507 
∑rInfo_t
* 
	$gëNode
(
ödex
){

508 
∑rInfo_t
* 
ªtu∫På
 = 
Li°På
->
hód
;

510 
i
=1; i<
ödex
;i++)

511 
ªtu∫På
 =Ñëu∫På->
√xt
;

513  
ªtu∫På
;

514 
	}
}

521 
	$gëCÆD©aR˝i
(
uöt8_t
* 
¨øy
, 
¨øyIdx
, 
mode
){

522 if(
¨øyIdx
 > 0){

523 
uöt16_t
 
sum
 = 
¨øy
[0];

524 
uöt8_t
 
mö
 = 
¨øy
[0];

525 
uöt8_t
 
max
 = 
¨øy
[0];

529 
i
=1; i<
¨øyIdx
; i++){

531 
sum
 +
¨øy
[
i
];

533 if(
¨øy
[
i
] < 
mö
)

534 
mö
 = 
¨øy
[
i
];

536 if(
¨øy
[
i
] > 
max
)

537 
max
 = 
¨øy
[
i
];

542 if(
mode
 == 0)

543 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "Max_rcpi: %d, Min_rcpi: %d, Avr_rcpi: %.1f, Last_rcpi: %d\n",

544 
max
, 
mö
, ()(
sum
/
¨øyIdx
), 
¨øy
[arrayIdx-1]);

546 
	`¥ötf
("Max_rcpi: %d, Min_rcpi: %d, Avr_rcpi: %.1f, Last_rcpi: %d\n",

547 
max
, 
mö
, ()(
sum
/
¨øyIdx
), 
¨øy
[arrayIdx-1]);

549 
	}
}

555 
	$gëCÆD©aRxpowî
(
öt16_t
* 
¨øy
, 
¨øyIdx
, 
mode
){

556 if(
¨øyIdx
 > 0){

557 
öt16_t
 
sum
 = 
¨øy
[0];

558 
öt16_t
 
mö
 = 
¨øy
[0];

559 
öt16_t
 
max
 = 
¨øy
[0];

563 
i
=1; i<
¨øyIdx
; i++){

564 
sum
 +
¨øy
[
i
];

566 if(
¨øy
[
i
] < 
mö
)

567 
mö
 = 
¨øy
[
i
];

569 if(
¨øy
[
i
] > 
max
)

570 
max
 = 
¨øy
[
i
];

575 if(
mode
==0)

576 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
, "Max_rxpower: %d, Min_rxpower: %d, Avr_rxpower: %.1f, Last_rxpower: %d\n",

577 
max
, 
mö
, ()(
sum
/
¨øyIdx
), 
¨øy
[arrayIdx-1]);

579 
	`¥ötf
("Max_rxpower: %d, Min_rxpower: %d, Avr_rxpower: %.1f, Last_rxpower: %d\n",

580 
max
, 
mö
, ()(
sum
/
¨øyIdx
), 
¨øy
[arrayIdx-1]);

582 
	}
}

592 
	$ldCÆdi°™˚
(
uöt32_t
 
æo
, uöt32_à
æa
, uöt32_à
ﬁo
, uöt32_à
ﬁa
)

594 
a
, 
b
, 
c
, 
d
, 
x
, 
y
, 
z
;

595 
a
 = ()((
æo
 * 1e-7Ë* 
M_PI
 / 180);

596 
b
 = ()((
æa
 * 1e-7Ë* 
M_PI
 / 180);

597 
c
 = ()((
ﬁo
 * 1e-7Ë* 
M_PI
 / 180);

598 
d
 = ()((
ﬁa
 * 1e-7Ë* 
M_PI
 / 180);

599 
x
 = 
	`sö
(
b
Ë* sö(
d
);

600 
y
 = 
	`cos
(
b
Ë* cos(
d
);

601 
z
 = 
	`Ábs
(
c
 - 
a
);

602 
y
 = y*
	`cos
(
z
);

603 
x
 = 
	`acos
(x + 
y
);

604 
y
 = 
x
 * 6371009;

606  
y
;

607 
	}
}

614 * 
	$rxThªad
(*
nŸu£d
){

617 !
ídög
){

619 
	`±hªad_muãx_lock
(&
g_mib
.
txMtx
);

620 
	`±hªad_c⁄d_waô
(&
g_mib
.
txC⁄d
, &g_mib.
txMtx
);

621 
	`±hªad_muãx_u∆ock
(&
g_mib
.
txMtx
);

622 
	`∑r_Rï‹t
();

626 
	`±hªad_exô
((*)0);

627 
	}
}

629 * 
	$u£rSñe˘Thªad
(*
nŸu£d
){

630 
num
;

631 
ªt
;

632 
°©us
;

633 
∑rInfo_t
 *
±rTemp
 = 
NULL
;

634 
num
 = 0;

635 
£À˘RsuID
;

639 
num
){

641 
	`¥ötf
(" MENU\n");

642 
	`¥ötf
("====Please selectáÇumber====\n");

643 
	`¥ötf
("1. Printing Connected RSUID(s) Information\n");

644 
	`¥ötf
("2. PrintingÅhe RSU information you want\n");

645 
	`¥ötf
("3. QUit\n>> ");

646 
	`sˇnf
("%d",&
num
);

649 
±rTemp
 = 
Li°På
->
hód
;

650 
i
=0; i<
Li°På
->
numOfLi°
; i++){

651 
	`¥ötf
("RSUID o‡[%d]: %d\n",
i
+1,
±rTemp
->
rsuID
);

652 
±rTemp
 =ÖåTemp->
√xt
;

654 
num
 = 0;

657 
	`¥ötf
("InputÇumber of RSU >> ");

658 
	`sˇnf
("%d",&
£À˘RsuID
);

659 
±rTemp
 = 
	`gëNode
(
£À˘RsuID
);

660 
	`¥ötf
("[%d] inf‹m©i⁄ :\n",
£À˘RsuID
);

661 
	`¥ötf
( "CHECK : %u\nRSUID : %d\nRSU Latitude : %d\nRSU Longitude : %d\nOBU Latitude : %d\nOBU Longitude : %d\n",

662 
±rTemp
->
check
,

663 
±rTemp
->
rsuID
,

664 
±rTemp
->
rsuL©ôude
,

665 
±rTemp
->
rsuL⁄gôude
,

666 
±rTemp
->
obuL©ôude
,

667 
±rTemp
->
obuL⁄gôude
);

668 
	`¥ötf
("Distance : %.0f\nOBUSpeed : %3.2f\nOBUHeading : %3.2f\nPAR : %d\n",

669 
±rTemp
->
di°™˚
,

670 ()
±rTemp
->
obuS≥ed
,

671 ()
±rTemp
->
obuHódög
,

672 
±rTemp
->
maxPAR
);

673 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
¨øyIdx
,1);

674 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
¨øyIdx
,1);

675 
num
=0;

679 
	`¥ötf
("Success Quit!\n");

680 
	`±hªad_exô
((*)0);

685 
	`¥ötf
("#error:not usableÖarameter\n");

686 
num
 = 0;

692 
ªt
 = 
	`±hªad_joö
(
u£rSñe˘_thªad
, (**)
°©us
);

693 if–
ªt
 == 0 )

695 
	`¥ötf
("[PAR_RX] Com∂ëed joö wôh u£rSñe˘Thªad sètu†%d\n", 
°©us
);

700 
	`¥ötf
("[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

705 
	}
}

	@/media/sf_Source/200104_Application_source/PAR/src/PAR_RX_bk_200721.c

1 
	~<°dio.h
>

2 
	~<m©h.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<uni°d.h
>

7 
	~"msgQ.h
"

8 
	~<sys/msg.h
>

9 
	~<sys/ùc.h
>

10 
	~<sig«l.h
>

11 
	~<mÆloc.h
>

12 
	~<PAR.h
>

19 
∑r_InôRX›î©i⁄
();

20 
∑r_RX›î©i⁄
();

21 
∑r_Rï‹t
();

22 
ldCÆdi°™˚
(
uöt32_t
 
æo
, uöt32_à
æa
, uöt32_à
ﬁo
, uöt32_à
ﬁa
);

23 * 
rxThªad
(*
nŸu£d
);

24 * 
u£rSñe˘Thªad
(*
nŸu£d
);

25 
¸óãNode
();

26 
‰ìAŒNode
();

27 
∑rInfo_t
* 
gëNode
(
ödex
);

28 
gëCÆD©aR˝i
(
uöt8_t
* 
¨øy
, 
¨øyIdx
, 
mode
);

29 
gëCÆD©aRxpowî
(
öt16_t
* 
¨øy
, 
¨øyIdx
, 
mode
);

30 
boﬁ
 
isThîeRSUID
(
rsuID
);

39 
	$∑r_InôRX›î©i⁄
(){

41 
öt32_t
 
ªt
;

42 
°©us
;

44 i‡(
Li°På
 =
NULL
) {

45 
Li°På
 = (
lökedLi°
*)
	`mÆloc
((linkedList));

46 
Li°På
->
cur
 = 
NULL
;

47 
Li°På
->
hód
 = 
NULL
;

48 
Li°På
->
èû
 = 
NULL
;

49 
Li°På
->
numOfLi°
 = 0;

65 if(
g_mib
.
öãrvÆ
 == 0)

67 
g_mib
.
öãrvÆ
 = 1000000;

70 if(
g_mib
.
cy˛e
 == 0)

72 
g_mib
.
cy˛e
 = 10;

76 
	`±hªad_muãx_öô
(&
g_mib
.
txMtx
, 
NULL
);

77 
	`±hªad_c⁄d_öô
(&
g_mib
.
txC⁄d
, 
NULL
);

81 
	`InôTxTimî
(
g_mib
.
öãrvÆ
);

84 
ªt
 = 
	`±hªad_¸óã
(&
rx_thªad
, 
NULL
, 
rxThªad
, NULL);

85 if(
ªt
 <0){

87 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] FailÅo create RXÅhread()\n");

92 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Success create RXÅhread()\n");

96 if(
g_mib
.
Inf‹m©i⁄
 != 0){

97 
ªt
 = 
	`±hªad_¸óã
(&
u£rSñe˘_thªad
, 
NULL
, 
u£rSñe˘Thªad
, NULL);

98 if(
ªt
 < 0){

99 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] FailÅo create userSelectÅhread()\n");

102 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Success create userSelectÅhread()\n");

109 
ªt
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

110 if(
ªt
 <0){

111 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªt
));

112 
shmCheck
 = 
åue
;

115 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Success gps_open()\n");

120 
	}
}

130 
	$∑r_RX›î©i⁄
(){

132 
öt32_t
 
ªt
;

133 
uöt32_t
 
Àn
;

134 
uöt8_t
 
outBuf
[
BUFSIZE
];

136 * 
°©us
;

137 
	`mem£t
(
outBuf
, 0, 
BUFSIZE
);

145 !
ídög
){

148 if(
shmCheck
 =
åue
)

150 
	`gps_˛o£
(&
gpsD©a
);

151 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Re connectionÅo GPSD\n");

152 
ªt
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

154 if(
ªt
 < 0)

156 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªt
));

158 
shmCheck
 = 
Ál£
;

163 
ªt
 = 
	`gps_ªad
(&
gpsD©a
);

164 if(
ªt
 < 0){

166 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] gps_ªad(ËÁû–%s)\n", 
	`gps_îr°r
(
ªt
));

167 
shmCheck
 = 
åue
;

173 if–
g_mib
.
L©ôude
 !0 && g_mib.
L⁄gôude
 != 0)

175 
g_obu
.
obuL©ôude
 = 
g_mib
.
L©ôude
;

176 
g_obu
.
obuL⁄gôude
 = 
g_mib
.
L⁄gôude
;

178 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
,"Success INPUT LATIánd LONGI\n");

180 if(
g_mib
.
dbg
)

182 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ò: %d OBUL⁄gò: %d \n",
g_obu
.
obuL©ôude
, g_obu.
obuL⁄gôude
);

190 if(
gpsD©a
.
£t
)

194 
g_obu
.
obuL©ôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
œtôude
;

195 
g_obu
.
obuL⁄gôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
l⁄gôude
;

196 
g_obu
.
obuS≥ed
 = 
gpsD©a
.
fix
.
•ìd
*3.6;

197 
g_obu
.
obuHódög
 = 
gpsD©a
.
fix
.
åack
;

200 if(
g_mib
.
dbg
)

202 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ôudê: %d OBUL⁄gôudê: %d OBUS≥ed : %‡OBUHódög : %‡\n", 
g_obu
.
obuL©ôude
, g_obu.
obuL⁄gôude
, g_obu.
obuS≥ed
, g_obu.
obuHódög
);

210 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] GPS Invalid\n");

211 
g_obu
.
obuL©ôude
 = 900000001;

212 
g_obu
.
obuL⁄gôude
 = 1800000001;

213 
g_obu
.
obuS≥ed
 = 8191;

214 
g_obu
.
obuHódög
 = 28800;

217 if(
g_mib
.
dbg
)

219 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
,"OBUL©ôudê: %d OBUL⁄gôudê: %d OBUS≥ed : %‡OBUHódög : %‡\n", 
g_obu
.
obuL©ôude
, g_obu.
obuL⁄gôude
, g_obu.
obuS≥ed
, g_obu.
obuHódög
);

227 
Àn
 = 
	`ªcvMQ
(
outBuf
);

228 if(
Àn
<0)

232 if(
Àn
 >0 && !
ídög
)

234 
	`mem˝y
(&
g_Packë
,
outBuf
,
Àn
);

239 if(!
	`isThîeRSUID
(
g_Packë
.
rsuID
))

240 
	`¸óãNode
();

243 
Li°På
->
cur
 = 
	`gëNode
(
g_Packë
.
rsuID
);

246 if(
Li°På
->
cur
->
¨øyIdx
 == 10)

247 
Li°På
->
cur
->
¨øyIdx
 = 0;

249 
Li°På
->
cur
->
check
 =1;

250 
Li°På
->
cur
->
rsuID
 = 
g_Packë
.rsuID;

251 
Li°På
->
cur
->
rsuL⁄gôude
 = 
g_Packë
.rsuLongitude;

252 
Li°På
->
cur
->
rsuL©ôude
 = 
g_Packë
.rsuLatitude;

253 
Li°På
->
cur
->
obuS≥ed
 = 
g_obu
.obuSpeed;

254 
Li°På
->
cur
->
obuHódög
 = 
g_obu
.obuHeading;

255 
Li°På
->
cur
->
öãrvÆ
 = 
g_mib
.
cy˛e
;

256 
Li°På
->
cur
->
rxpowî
[Li°På->cur->
¨øyIdx
] = 
g_Packë
.
rxPowî
;

257 
Li°På
->
cur
->
r˝i
[Li°På->cur->
¨øyIdx
] = 
g_Packë
.rcpi;

260 
Li°På
->
cur
->
obuL⁄gôude
 = 
g_obu
.obuLongitude;

261 
Li°På
->
cur
->
obuL©ôude
 = 
g_obu
.obuLatitude;

262 
Li°På
->
cur
->
˙t
++;

263 
Li°På
->
cur
->
∑°Aºayidx
 = Li°På->cur->
¨øyIdx
;

264 
Li°På
->
cur
->
¨øyIdx
++;

266 
°PARInfo
[
g_Packë
.
rsuID
].
check
 =1;

267 
°PARInfo
[
g_Packë
.
rsuID
].rsuID = g_Packet.rsuID;

268 
°PARInfo
[
g_Packë
.
rsuID
].
rsuL⁄gôude
 = g_Packet.rsuLongitude;

269 
°PARInfo
[
g_Packë
.
rsuID
].
rsuL©ôude
 = g_Packet.rsuLatitude;

270 
°PARInfo
[
g_Packë
.
rsuID
].
obuS≥ed
 = 
g_obu
.obuSpeed;

271 
°PARInfo
[
g_Packë
.
rsuID
].
obuHódög
 = 
g_obu
.obuHeading;

272 
°PARInfo
[
g_Packë
.
rsuID
].
öãrvÆ
 = 
g_mib
.
cy˛e
;

273 
°PARInfo
[
g_Packë
.
rsuID
].
rxpowî
 = g_Packë.
rxPowî
;

274 
°PARInfo
[
g_Packë
.
rsuID
].
r˝i
 = g_Packet.rcpi;

275 
°PARInfo
[
g_Packë
.
rsuID
].
obuL⁄gôude
 = 
g_obu
.obuLongitude;

276 
°PARInfo
[
g_Packë
.
rsuID
].
obuL©ôude
 = 
g_obu
.obuLatitude;

277 
°PARInfo
[
g_Packë
.
rsuID
].
˙t
++;

281 if(
g_mib
.
dbg
)

283 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
,"°PARInfo[CNT] : %d \n\n\n",
°PARInfo
[
g_Packë
.
rsuID
].
˙t
);

298 
ªt
 = 
	`±hªad_joö
(
rx_thªad
, &
°©us
);

299 if–
ªt
 == 0 )

302 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Com∂ëed joö wôhÑxThªad sètu†%s\n", (*)
°©us
);

307 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

311 if(
g_mib
.
Inf‹m©i⁄
 != 0){

313 
ªt
 = 
	`±hªad_joö
(
u£rSñe˘_thªad
, &
°©us
);

314 if–
ªt
 == 0 )

317 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Com∂ëed joö wôh u£rSñe˘Thªad sètu†%s\n", (*)
°©us
);

322 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

327 
	`gps_˛o£
(&
gpsD©a
);

331 
	`±hªad_muãx_de°roy
(&
g_mib
.
txMtx
);

332 
	`±hªad_c⁄d_de°roy
(&
g_mib
.
txC⁄d
);

335 
	`‰ìAŒNode
();

336 
	}
}

345 
	$∑r_Rï‹t
(){

347 
idx
 = 0;

349 
uöt32_t
 
˙t
[
Li°På
->
numOfLi°
];

356 
∑rInfo_t
 *
±rTemp
 = 
Li°På
->
hód
;

359 
idx
=1;idx<=
Li°På
->
numOfLi°
;idx++)

362 if(
±rTemp
 =
NULL
)

366 
˙t
[
idx
]=0;

371 
±rTemp
->
curPAR
 = 0;

372 
±rTemp
->
maxPAR
 = 0;

382 if–
±rTemp
->
˙t
==0)

384 
±rTemp
->
check
 = 
Ál£
;

388 
±rTemp
->
check
 = 
åue
;

400 if(!
±rTemp
->
check
)

405 
	`£tZîoP¨Info
(
±rTemp
);

410 
±rTemp
->
di°™˚
 = 
	`ldCÆdi°™˚
’åTemp->
rsuL⁄gôude
,ÖåTemp->
rsuL©ôude
,ÖåTemp->
obuL⁄gôude
,ÖåTemp->
obuL©ôude
);

413 
˙t
[
idx
] = 
±rTemp
->cnt;

416 
±rTemp
->
˙t
 = 0;

426 
±rTemp
->
curPAR
 = (
˙t
[
idx
]*100)/(1000/±rTemp->
öãrvÆ
);

429 if(
±rTemp
->
curPAR
 >ÖåTemp->
maxPAR
)

430 
±rTemp
->
maxPAR
 =ÖåTemp->
curPAR
;

435 if(
g_mib
.
dbg
){

438 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "RSUID : %d, RSULatitude : %d, RSULongitude : %d, OBULatitude : %d, OBULongitude : %d\n",

440 
±rTemp
->
rsuID
,

441 
±rTemp
->
rsuL©ôude
,

442 
±rTemp
->
rsuL⁄gôude
,

443 
±rTemp
->
obuL©ôude
,

444 
±rTemp
->
obuL⁄gôude
);

446 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "Distance : %.0f, OBUSpeed : %3.2f, OBUHeading : %3.2f, CNT : %u, PAR : %d\n",

449 
±rTemp
->
di°™˚
,

450 ()
±rTemp
->
obuS≥ed
,

451 ()
±rTemp
->
obuHódög
,

452 
˙t
[
idx
],

453 
±rTemp
->
maxPAR
);

456 if(
±rTemp
->
check
 &&ÖåTemp->
¨øyIdx
 == 0)

458 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
∑°Aºayidx
,0);

459 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
∑°Aºayidx
,0);

462 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
¨øyIdx
,0);

463 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
¨øyIdx
,0);

469 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "--------------------------------------------------------------------------------------------------\n");

472 
	`¥ötf
("CHECK : %u, RSUID : %d, RSU Latitude : %d, RSU Longitude : %d, OBU Latitude : %d, OBU Longitude : %d, RXPOWER : %d,Ñcpi : %d, distance : %.0f, OBUSpeed : %3.2f, OBUHeading : %3.2f, CNT : %u, PAR : %d\n",

473 
°PARInfo
[
idx
].
check
,

474 
°PARInfo
[
idx
].
rsuID
,

475 
°PARInfo
[
idx
].
rsuL©ôude
,

476 
°PARInfo
[
idx
].
rsuL⁄gôude
,

477 
°PARInfo
[
idx
].
obuL©ôude
,

478 
°PARInfo
[
idx
].
obuL⁄gôude
,

479 
°PARInfo
[
idx
].
rxpowî
,

480 
°PARInfo
[
idx
].
r˝i
,

481 
°PARInfo
[
idx
].
di°™˚
,

482 ()
°PARInfo
[
idx
].
obuS≥ed
,

483 ()
°PARInfo
[
idx
].
obuHódög
,

484 
˙t
[
idx
],

485 
°PARInfo
[
idx
].
maxPAR
);

489 
±rTemp
->
¨øyIdx
 =0;

491 
±rTemp
 =ÖåTemp->
√xt
;

497 
	`£tZîoP¨Info
(
∑rInfo_t
* 
±r
){

498 
±r
->
¨øyIdx
 = 0;

499 
±r
->
rsuL©ôude
 = 0;

500 
±r
->
rsuL⁄gôude
 = 0;

501 
±r
->
obuL©ôude
 = 0 ;

502 
±r
->
obuL⁄gôude
 = 0;

503 
±r
->
di°™˚
 = 0;

504 
±r
->
obuS≥ed
 = 0.0;

505 
±r
->
obuHódög
 = 0.0;

506 
±r
->
maxPAR
 = 0;

513 
	`¸óãNode
() {

515 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] CreateNode\n");

517 
∑rInfo_t
* 
°PARInfoPå
 =(∑rInfo_à*Ë
	`mÆloc
((parInfo_t));

518 
°PARInfoPå
->
√xt
 = 
NULL
;

521 if(
Li°På
->
hód
 =
NULL
 && Li°På->
èû
 == NULL)

524 
Li°På
->
hód
 = Li°På->
èû
 = 
°PARInfoPå
;

530 
Li°På
->
èû
->
√xt
 = 
°PARInfoPå
;

531 
Li°På
->
èû
 = 
°PARInfoPå
;

533 
Li°På
->
cur
 = Li°På->
èû
;

534 
Li°På
->
èû
->
˙t
 = 0;

535 
Li°På
->
èû
->
¨øyIdx
 = 0;

536 
Li°På
->
numOfLi°
++;

543 
	`‰ìAŒNode
(){

545 
∑rInfo_t
* 
ãmpPå
 = 
Li°På
->
hód
;

547 
Li°På
->
hód
 !
NULL
){

549 
Li°På
->
hód
 = Li°På->hód->
√xt
;

550 
	`‰ì
(
ãmpPå
);

551 
ãmpPå
 = 
Li°På
->
hód
;

552 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Free Node\n");

554 
Li°På
->
cur
 = 
NULL
;

555 
Li°På
->
èû
 = 
NULL
;

556 
Li°På
->
numOfLi°
 = 0;

558 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] There isÇothingÅo free Node \n");

565 
∑rInfo_t
* 
	`gëNode
(
rsuID
){

566 
∑rInfo_t
* 
ªtu∫På
 = 
Li°På
->
hód
;

568 
ªtu∫På
 !
NULL
){

569 if(
rsuID
 =
ªtu∫På
->rsuID)

571 
ªtu∫På
 =Ñëu∫På->
√xt
;

573  
ªtu∫På
;

581 
	`gëCÆD©aR˝i
(
uöt8_t
* 
¨øy
, 
¨øyIdx
, 
mode
){

582 if(
¨øyIdx
 > 0){

583 
uöt16_t
 
sum
 = 
¨øy
[0];

584 
uöt8_t
 
mö
 = 
¨øy
[0];

585 
uöt8_t
 
max
 = 
¨øy
[0];

589 
i
=1; i<
¨øyIdx
; i++){

591 
sum
 +
¨øy
[
i
];

593 if(
¨øy
[
i
] < 
mö
)

594 
mö
 = 
¨øy
[
i
];

596 if(
¨øy
[
i
] > 
max
)

597 
max
 = 
¨øy
[
i
];

602 if(
mode
 == 0)

603 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "Max_rcpi : %d, Min_rcpi : %d, Avr_rcpi : %.1f, Last_rcpi : %d\n",

604 
max
, 
mö
, ()(
sum
/
¨øyIdx
), 
¨øy
[arrayIdx-1]);

606 
	`¥ötf
("Max_rcpi : %d, Min_rcpi : %d, Avr_rcpi : %.1f, Last_rcpi : %d\n",

607 
max
, 
mö
, ()(
sum
/
¨øyIdx
), 
¨øy
[arrayIdx-1]);

610 if(
mode
 == 0)

611 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "Max_rcpi : 0, Min_rcpi : 0, Avr_rcpi : 0.0, Last_rcpi : 0\n");

613 
	`¥ötf
("Max_rcpi : 0, Min_rcpi : 0, Avr_rcpi : 0.0, Last_rcpi : 0\n");

621 
	`gëCÆD©aRxpowî
(
öt16_t
* 
¨øy
, 
¨øyIdx
, 
mode
){

622 if(
¨øyIdx
 > 0){

623 
öt16_t
 
sum
 = 
¨øy
[0];

624 
öt16_t
 
mö
 = 
¨øy
[0];

625 
öt16_t
 
max
 = 
¨øy
[0];

629 
i
=1; i<
¨øyIdx
; i++){

630 
sum
 +
¨øy
[
i
];

632 if(
¨øy
[
i
] < 
mö
)

633 
mö
 = 
¨øy
[
i
];

635 if(
¨øy
[
i
] > 
max
)

636 
max
 = 
¨øy
[
i
];

641 if(
mode
==0)

642 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "Max_rxpower : %d, Min_rxpower : %d, Avr_rxpower : %.1f, Last_rxpower : %d\n",

643 
max
, 
mö
, ()(
sum
/
¨øyIdx
), 
¨øy
[arrayIdx-1]);

645 
	`¥ötf
("Max_rxpower : %d, Min_rxpower : %d, Avr_rxpower : %.1f, Last_rxpower : %d\n",

646 
max
, 
mö
, ()(
sum
/
¨øyIdx
), 
¨øy
[arrayIdx-1]);

649 if(
mode
 == 0)

650 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "Max_rxpower : 0, Min_rxpower : 0, Avr_rxpower : 0.0, Last_rxpower : 0\n");

652 
	`¥ötf
("Max_rxpower : 0, Min_rxpower : 0, Avr_rxpower : 0.0, Last_rxpower : 0\n");

664 
	`ldCÆdi°™˚
(
uöt32_t
 
æo
, uöt32_à
æa
, uöt32_à
ﬁo
, uöt32_à
ﬁa
)

666 
a
, 
b
, 
c
, 
d
, 
x
, 
y
, 
z
;

667 
a
 = ()((
æo
 * 1e-7Ë* 
M_PI
 / 180);

668 
b
 = ()((
æa
 * 1e-7Ë* 
M_PI
 / 180);

669 
c
 = ()((
ﬁo
 * 1e-7Ë* 
M_PI
 / 180);

670 
d
 = ()((
ﬁa
 * 1e-7Ë* 
M_PI
 / 180);

671 
x
 = 
	`sö
(
b
Ë* sö(
d
);

672 
y
 = 
	`cos
(
b
Ë* cos(
d
);

673 
z
 = 
	`Ábs
(
c
 - 
a
);

674 
y
 = y*
	`cos
(
z
);

675 
x
 = 
	`acos
(x + 
y
);

676 
y
 = 
x
 * 6371009;

678  
y
;

686 * 
	`rxThªad
(*
nŸu£d
){

689 !
ídög
){

691 
	`±hªad_muãx_lock
(&
g_mib
.
txMtx
);

692 
	`±hªad_c⁄d_waô
(&
g_mib
.
txC⁄d
, &g_mib.
txMtx
);

693 
	`±hªad_muãx_u∆ock
(&
g_mib
.
txMtx
);

694 
	`∑r_Rï‹t
();

698 
	`±hªad_exô
((*)0);

705 * 
	`u£rSñe˘Thªad
(*
nŸu£d
){

706 
num
;

707 
ªt
;

708 
°©us
;

709 
∑rInfo_t
 *
±rTemp
 = 
NULL
;

710 
num
 = 0;

711 
£À˘RsuID
;

713 !
ídög
){

715 
num
){

733 
	`¥ötf
(" MENU\n");

734 
	`¥ötf
("====Please selectáÇumber====\n");

735 
	`¥ötf
("1. Printing Connected RSUID(s) Information\n");

736 
	`¥ötf
("2. PrintingÅhe RSU information you want\n");

737 
	`¥ötf
("3. QUit\n>> ");

738 
	`sˇnf
("%d",&
num
);

741 
±rTemp
 = 
Li°På
->
hód
;

742 
cou¡
 = 1;

743 
±rTemp
 !
NULL
){

744 
	`¥ötf
("RSUID o‡[%d]: %d\n", 
cou¡
++, 
±rTemp
->
rsuID
);

745 
±rTemp
 =ÖåTemp->
√xt
;

747 
num
 = 0;

750 
	`¥ötf
("Input wanted RSU ID >> ");

751 
	`sˇnf
("%d",&
£À˘RsuID
);

752 
±rTemp
 = 
	`gëNode
(
£À˘RsuID
);

753 if(
±rTemp
 =
NULL
){

754 
	`¥ötf
("# Error(Please input correct RsuID\n");

757 
	`¥ötf
("**Inf‹m©i⁄ o‡RSU ID[%d]**\n",
£À˘RsuID
);

758 
	`¥ötf
( "RSUID : %d\nRSU Latitude : %d\nRSU Longitude : %d\nOBU Latitude : %d\nOBU Longitude : %d\n",

760 
±rTemp
->
rsuID
,

761 
±rTemp
->
rsuL©ôude
,

762 
±rTemp
->
rsuL⁄gôude
,

763 
±rTemp
->
obuL©ôude
,

764 
±rTemp
->
obuL⁄gôude
);

765 
	`¥ötf
( "Distance : %.0f\nOBUSpeed : %3.2f\nOBUHeading : %3.2f\nPAR : %d\n",

768 
±rTemp
->
di°™˚
,

769 ()
±rTemp
->
obuS≥ed
,

770 ()
±rTemp
->
obuHódög
,

771 
±rTemp
->
maxPAR
);

773 if(
±rTemp
->
check
 &&ÖåTemp->
¨øyIdx
 == 0)

775 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
∑°Aºayidx
,1);

776 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
∑°Aºayidx
,1);

780 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
¨øyIdx
,1);

781 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
¨øyIdx
,1);

784 
num
=0;

788 
	`¥ötf
("Success Quit!\n");

789 
	`±hªad_exô
((*)0);

795 
	`¥ötf
("#error:not usableÖarameter\n");

796 
num
 = 0;

804 
ªt
 = 
	`±hªad_joö
(
u£rSñe˘_thªad
, (**)
°©us
);

805 if–
ªt
 == 0 )

807 
	`¥ötf
("[PAR_RX] Com∂ëed joö wôh u£rSñe˘Thªad sètu†%d\n", 
°©us
);

812 
	`¥ötf
("[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

824 
boﬁ
 
	`isThîeRSUID
(
rsuID
){

825 
∑rInfo_t
 *
±rTemp
 = 
Li°På
->
hód
;

826 
±rTemp
 !
NULL
){

827 if(
±rTemp
->
rsuID
 ==ÑsuID)

828  
åue
;

830 
±rTemp
 =ÖåTemp->
√xt
;

832  
Ál£
;

	@/media/sf_Source/200104_Application_source/PAR/src/PAR_RX_bk_200727.c

1 
	~<°dio.h
>

2 
	~<m©h.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<uni°d.h
>

7 
	~"msgQ.h
"

8 
	~<sys/msg.h
>

9 
	~<sys/ùc.h
>

10 
	~<sig«l.h
>

11 
	~<mÆloc.h
>

12 
	~<PAR.h
>

19 
∑r_InôRX›î©i⁄
();

20 
∑r_RX›î©i⁄
();

21 
∑r_Rï‹t
();

22 
ldCÆdi°™˚
(
uöt32_t
 
æo
, uöt32_à
æa
, uöt32_à
ﬁo
, uöt32_à
ﬁa
);

23 * 
rxThªad
(*
nŸu£d
);

24 * 
u£rSñe˘Thªad
(*
nŸu£d
);

25 
¸óãNode
();

26 
‰ìAŒNode
();

27 
∑rInfo_t
* 
gëNode
(
ödex
);

28 
gëCÆD©aR˝i
(
uöt8_t
* 
¨øy
, 
¨øyIdx
, * 
ßveAºay
);

29 
gëCÆD©aRxpowî
(
öt16_t
* 
¨øy
, 
¨øyIdx
, * 
ßveAºay
);

30 
boﬁ
 
isThîeRSUID
(
rsuID
);

31 
boﬁ
 
	gdebugModeFú°Check
;

40 
	$∑r_InôRX›î©i⁄
(){

42 
öt32_t
 
ªt
;

43 
°©us
;

45 i‡(
Li°På
 =
NULL
) {

46 
Li°På
 = (
lökedLi°
*)
	`mÆloc
((linkedList));

47 
Li°På
->
cur
 = 
NULL
;

48 
Li°På
->
hód
 = 
NULL
;

49 
Li°På
->
èû
 = 
NULL
;

50 
Li°På
->
numOfLi°
 = 0;

52 
debugModeFú°Check
 = 
Ál£
;

67 if(
g_mib
.
öãrvÆ
 == 0)

69 
g_mib
.
öãrvÆ
 = 1000000;

72 if(
g_mib
.
cy˛e
 == 0)

74 
g_mib
.
cy˛e
 = 10;

78 
	`±hªad_muãx_öô
(&
g_mib
.
txMtx
, 
NULL
);

79 
	`±hªad_c⁄d_öô
(&
g_mib
.
txC⁄d
, 
NULL
);

83 
	`InôTxTimî
(
g_mib
.
öãrvÆ
);

86 
ªt
 = 
	`±hªad_¸óã
(&
rx_thªad
, 
NULL
, 
rxThªad
, NULL);

87 if(
ªt
 <0){

89 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] FailÅo create RXÅhread()\n");

94 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Success create RXÅhread()\n");

98 if(
g_mib
.
Inf‹m©i⁄
 != 0){

99 
ªt
 = 
	`±hªad_¸óã
(&
u£rSñe˘_thªad
, 
NULL
, 
u£rSñe˘Thªad
, NULL);

100 if(
ªt
 < 0){

101 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] FailÅo create userSelectÅhread()\n");

104 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Success create userSelectÅhread()\n");

111 
ªt
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

112 if(
ªt
 <0){

113 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªt
));

114 
shmCheck
 = 
åue
;

117 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Success gps_open()\n");

122 
	}
}

132 
	$∑r_RX›î©i⁄
(){

134 
öt32_t
 
ªt
;

135 
uöt32_t
 
Àn
;

136 
uöt8_t
 
outBuf
[
BUFSIZE
];

138 * 
°©us
;

139 
	`mem£t
(
outBuf
, 0, 
BUFSIZE
);

147 !
ídög
){

150 if(
shmCheck
 =
åue
)

152 
	`gps_˛o£
(&
gpsD©a
);

153 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Re connectionÅo GPSD\n");

154 
ªt
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

156 if(
ªt
 < 0)

158 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªt
));

160 
shmCheck
 = 
Ál£
;

165 
ªt
 = 
	`gps_ªad
(&
gpsD©a
);

166 if(
ªt
 < 0){

168 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] gps_ªad(ËÁû–%s)\n", 
	`gps_îr°r
(
ªt
));

169 
shmCheck
 = 
åue
;

175 if–
g_mib
.
L©ôude
 !0 && g_mib.
L⁄gôude
 != 0)

177 
g_obu
.
obuL©ôude
 = 
g_mib
.
L©ôude
;

178 
g_obu
.
obuL⁄gôude
 = 
g_mib
.
L⁄gôude
;

180 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
,"Success INPUT LATIánd LONGI\n");

182 if(
g_mib
.
dbg
)

184 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ò: %d OBUL⁄gò: %d \n",
g_obu
.
obuL©ôude
, g_obu.
obuL⁄gôude
);

192 if(
gpsD©a
.
£t
)

196 
g_obu
.
obuL©ôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
œtôude
;

197 
g_obu
.
obuL⁄gôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
l⁄gôude
;

198 
g_obu
.
obuS≥ed
 = 
gpsD©a
.
fix
.
•ìd
*3.6;

199 
g_obu
.
obuHódög
 = 
gpsD©a
.
fix
.
åack
;

202 if(
g_mib
.
dbg
)

204 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL2
,"OBUL©ôudê: %d OBUL⁄gôudê: %d OBUS≥ed : %‡OBUHódög : %‡\n", 
g_obu
.
obuL©ôude
, g_obu.
obuL⁄gôude
, g_obu.
obuS≥ed
, g_obu.
obuHódög
);

212 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] GPS Invalid\n");

213 
g_obu
.
obuL©ôude
 = 900000001;

214 
g_obu
.
obuL⁄gôude
 = 1800000001;

215 
g_obu
.
obuS≥ed
 = 8191;

216 
g_obu
.
obuHódög
 = 28800;

219 if(
g_mib
.
dbg
)

221 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
,"OBUL©ôudê: %d OBUL⁄gôudê: %d OBUS≥ed : %‡OBUHódög : %‡\n", 
g_obu
.
obuL©ôude
, g_obu.
obuL⁄gôude
, g_obu.
obuS≥ed
, g_obu.
obuHódög
);

229 
Àn
 = 
	`ªcvMQ
(
outBuf
);

230 if(
Àn
<0)

234 if(
Àn
 >0 && !
ídög
)

236 
	`mem˝y
(&
g_Packë
,
outBuf
,
Àn
);

241 if(!
	`isThîeRSUID
(
g_Packë
.
rsuID
))

242 
	`¸óãNode
();

245 
Li°På
->
cur
 = 
	`gëNode
(
g_Packë
.
rsuID
);

248 if(
Li°På
->
cur
->
¨øyIdx
 == 10)

249 
Li°På
->
cur
->
¨øyIdx
 = 0;

251 
Li°På
->
cur
->
check
 =1;

252 
Li°På
->
cur
->
rsuID
 = 
g_Packë
.rsuID;

253 
Li°På
->
cur
->
rsuL⁄gôude
 = 
g_Packë
.rsuLongitude;

254 
Li°På
->
cur
->
rsuL©ôude
 = 
g_Packë
.rsuLatitude;

255 
Li°På
->
cur
->
obuS≥ed
 = 
g_obu
.obuSpeed;

256 
Li°På
->
cur
->
obuHódög
 = 
g_obu
.obuHeading;

257 
Li°På
->
cur
->
öãrvÆ
 = 
g_mib
.
cy˛e
;

258 
Li°På
->
cur
->
rxpowî
[Li°På->cur->
¨øyIdx
] = 
g_Packë
.
rxPowî
;

259 
Li°På
->
cur
->
r˝i
[Li°På->cur->
¨øyIdx
] = 
g_Packë
.rcpi;

262 
Li°På
->
cur
->
obuL⁄gôude
 = 
g_obu
.obuLongitude;

263 
Li°På
->
cur
->
obuL©ôude
 = 
g_obu
.obuLatitude;

264 
Li°På
->
cur
->
˙t
++;

265 
Li°På
->
cur
->
∑°Aºayidx
 = Li°På->cur->
¨øyIdx
;

266 
Li°På
->
cur
->
¨øyIdx
++;

268 
°PARInfo
[
g_Packë
.
rsuID
].
check
 =1;

269 
°PARInfo
[
g_Packë
.
rsuID
].rsuID = g_Packet.rsuID;

270 
°PARInfo
[
g_Packë
.
rsuID
].
rsuL⁄gôude
 = g_Packet.rsuLongitude;

271 
°PARInfo
[
g_Packë
.
rsuID
].
rsuL©ôude
 = g_Packet.rsuLatitude;

272 
°PARInfo
[
g_Packë
.
rsuID
].
obuS≥ed
 = 
g_obu
.obuSpeed;

273 
°PARInfo
[
g_Packë
.
rsuID
].
obuHódög
 = 
g_obu
.obuHeading;

274 
°PARInfo
[
g_Packë
.
rsuID
].
öãrvÆ
 = 
g_mib
.
cy˛e
;

275 
°PARInfo
[
g_Packë
.
rsuID
].
rxpowî
 = g_Packë.
rxPowî
;

276 
°PARInfo
[
g_Packë
.
rsuID
].
r˝i
 = g_Packet.rcpi;

277 
°PARInfo
[
g_Packë
.
rsuID
].
obuL⁄gôude
 = 
g_obu
.obuLongitude;

278 
°PARInfo
[
g_Packë
.
rsuID
].
obuL©ôude
 = 
g_obu
.obuLatitude;

279 
°PARInfo
[
g_Packë
.
rsuID
].
˙t
++;

283 if(
g_mib
.
dbg
)

285 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
,"°PARInfo[CNT] : %d \n\n\n",
°PARInfo
[
g_Packë
.
rsuID
].
˙t
);

300 
ªt
 = 
	`±hªad_joö
(
rx_thªad
, &
°©us
);

301 if–
ªt
 == 0 )

304 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Com∂ëed joö wôhÑxThªad sètu†%s\n", (*)
°©us
);

309 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

313 if(
g_mib
.
Inf‹m©i⁄
 != 0){

315 
ªt
 = 
	`±hªad_joö
(
u£rSñe˘_thªad
, &
°©us
);

316 if–
ªt
 == 0 )

319 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Com∂ëed joö wôh u£rSñe˘Thªad sètu†%s\n", (*)
°©us
);

324 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

329 
	`gps_˛o£
(&
gpsD©a
);

333 
	`±hªad_muãx_de°roy
(&
g_mib
.
txMtx
);

334 
	`±hªad_c⁄d_de°roy
(&
g_mib
.
txC⁄d
);

337 
	`‰ìAŒNode
();

338 
	}
}

347 
	$∑r_Rï‹t
(){

349 
idx
 = 0;

351 
uöt32_t
 
˙t
[
Li°På
->
numOfLi°
];

358 
∑rInfo_t
 *
±rTemp
 = 
Li°På
->
hód
;

361 
idx
=1;idx<=
Li°På
->
numOfLi°
;idx++)

364 if(
±rTemp
 =
NULL
)

368 
˙t
[
idx
]=0;

373 
±rTemp
->
curPAR
 = 0;

374 
±rTemp
->
maxPAR
 = 0;

384 if–
±rTemp
->
˙t
==0)

386 
±rTemp
->
check
 = 
Ál£
;

390 
±rTemp
->
check
 = 
åue
;

402 if(!
±rTemp
->
check
)

407 
	`£tZîoP¨Info
(
±rTemp
);

412 
±rTemp
->
di°™˚
 = 
	`ldCÆdi°™˚
’åTemp->
rsuL⁄gôude
,ÖåTemp->
rsuL©ôude
,ÖåTemp->
obuL⁄gôude
,ÖåTemp->
obuL©ôude
);

415 
˙t
[
idx
] = 
±rTemp
->cnt;

418 
±rTemp
->
˙t
 = 0;

428 
±rTemp
->
curPAR
 = (
˙t
[
idx
]*100)/(1000/±rTemp->
öãrvÆ
);

431 if(
±rTemp
->
curPAR
 >ÖåTemp->
maxPAR
)

432 
±rTemp
->
maxPAR
 =ÖåTemp->
curPAR
;

437 if(
g_mib
.
dbg
){

442 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "RSUID : %d, RSULatitude : %d, RSULongitude : %d, OBULatitude : %d, OBULongitude : %d\n",

444 
±rTemp
->
rsuID
,

445 
±rTemp
->
rsuL©ôude
,

446 
±rTemp
->
rsuL⁄gôude
,

447 
±rTemp
->
obuL©ôude
,

448 
±rTemp
->
obuL⁄gôude
);

450 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "Distance : %.0f, OBUSpeed : %3.2f, OBUHeading : %3.2f, CNT : %u, PAR : %d\n",

453 
±rTemp
->
di°™˚
,

454 ()
±rTemp
->
obuS≥ed
,

455 ()
±rTemp
->
obuHódög
,

456 
˙t
[
idx
],

457 
±rTemp
->
maxPAR
);

461 if(
±rTemp
->
check
 &&ÖåTemp->
¨øyIdx
 == 0)

463 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
∑°Aºayidx
,±rTemp->
ˇlcuœãD©a
);

464 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
∑°Aºayidx
,±rTemp->
ˇlcuœãD©a
);

467 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
¨øyIdx
,±rTemp->
ˇlcuœãD©a
);

468 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
¨øyIdx
,±rTemp->
ˇlcuœãD©a
);

475 if(!
debugModeFú°Check
){

476 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "RSUID, RSULatitude, RSULongitude, OBULatitude, OBULongitude, Distance, OBUSpeed, OBUHeading, CNT, PAR, Min_rxpower, Max_rxpower, Avr_rxpower, Last_rxpower, Min_rcpi, Max_rcpi, Avr_rcpi, Last_rcpi\n");

477 
debugModeFú°Check
 = 
åue
;

480 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "%d, %d, %d, %d, %d, %.0f, %3.2f, %3.2f, %u, %d, %d, %d, %.1f, %d, %d, %d, %.1f, %d\n",

481 
±rTemp
->
rsuID
,

482 
±rTemp
->
rsuL©ôude
,

483 
±rTemp
->
rsuL⁄gôude
,

484 
±rTemp
->
obuL©ôude
,

485 
±rTemp
->
obuL⁄gôude
,

486 
±rTemp
->
di°™˚
,

487 ()
±rTemp
->
obuS≥ed
,

488 ()
±rTemp
->
obuHódög
,

489 
˙t
[
idx
],

490 
±rTemp
->
maxPAR
,

491 ()
±rTemp
->
ˇlcuœãD©a
[0],

492 ()
±rTemp
->
ˇlcuœãD©a
[1],

493 
±rTemp
->
ˇlcuœãD©a
[2],

494 ()
±rTemp
->
ˇlcuœãD©a
[3],

495 ()
±rTemp
->
ˇlcuœãD©a
[4],

496 ()
±rTemp
->
ˇlcuœãD©a
[5],

497 
±rTemp
->
ˇlcuœãD©a
[6],

498 ()
±rTemp
->
ˇlcuœãD©a
[7]);

500 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "------------------------------------------------------------------------------------------------\n");

503 
	`¥ötf
("CHECK : %u, RSUID : %d, RSU Latitude : %d, RSU Longitude : %d, OBU Latitude : %d, OBU Longitude : %d, RXPOWER : %d,Ñcpi : %d, distance : %.0f, OBUSpeed : %3.2f, OBUHeading : %3.2f, CNT : %u, PAR : %d\n",

504 
°PARInfo
[
idx
].
check
,

505 
°PARInfo
[
idx
].
rsuID
,

506 
°PARInfo
[
idx
].
rsuL©ôude
,

507 
°PARInfo
[
idx
].
rsuL⁄gôude
,

508 
°PARInfo
[
idx
].
obuL©ôude
,

509 
°PARInfo
[
idx
].
obuL⁄gôude
,

510 
°PARInfo
[
idx
].
rxpowî
,

511 
°PARInfo
[
idx
].
r˝i
,

512 
°PARInfo
[
idx
].
di°™˚
,

513 ()
°PARInfo
[
idx
].
obuS≥ed
,

514 ()
°PARInfo
[
idx
].
obuHódög
,

515 
˙t
[
idx
],

516 
°PARInfo
[
idx
].
maxPAR
);

520 
±rTemp
->
¨øyIdx
 =0;

522 
±rTemp
 =ÖåTemp->
√xt
;

528 
	`£tZîoP¨Info
(
∑rInfo_t
* 
±r
){

529 
±r
->
¨øyIdx
 = 0;

530 
±r
->
rsuL©ôude
 = 0;

531 
±r
->
rsuL⁄gôude
 = 0;

532 
±r
->
obuL©ôude
 = 0 ;

533 
±r
->
obuL⁄gôude
 = 0;

534 
±r
->
di°™˚
 = 0;

535 
±r
->
obuS≥ed
 = 0.0;

536 
±r
->
obuHódög
 = 0.0;

537 
±r
->
maxPAR
 = 0;

544 
	`¸óãNode
() {

546 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] CreateNode\n");

548 
∑rInfo_t
* 
°PARInfoPå
 =(∑rInfo_à*Ë
	`mÆloc
((parInfo_t));

549 
°PARInfoPå
->
√xt
 = 
NULL
;

552 if(
Li°På
->
hód
 =
NULL
 && Li°På->
èû
 == NULL)

555 
Li°På
->
hód
 = Li°På->
èû
 = 
°PARInfoPå
;

561 
Li°På
->
èû
->
√xt
 = 
°PARInfoPå
;

562 
Li°På
->
èû
 = 
°PARInfoPå
;

564 
Li°På
->
cur
 = Li°På->
èû
;

565 
Li°På
->
èû
->
˙t
 = 0;

566 
Li°På
->
èû
->
¨øyIdx
 = 0;

567 
Li°På
->
numOfLi°
++;

574 
	`‰ìAŒNode
(){

576 
∑rInfo_t
* 
ãmpPå
 = 
Li°På
->
hód
;

578 
Li°På
->
hód
 !
NULL
){

580 
Li°På
->
hód
 = Li°På->hód->
√xt
;

581 
	`‰ì
(
ãmpPå
);

582 
ãmpPå
 = 
Li°På
->
hód
;

583 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] Free Node\n");

585 
Li°På
->
cur
 = 
NULL
;

586 
Li°På
->
èû
 = 
NULL
;

587 
Li°På
->
numOfLi°
 = 0;

589 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_RX] There isÇothingÅo free Node \n");

596 
∑rInfo_t
* 
	`gëNode
(
rsuID
){

597 
∑rInfo_t
* 
ªtu∫På
 = 
Li°På
->
hód
;

599 
ªtu∫På
 !
NULL
){

600 if(
rsuID
 =
ªtu∫På
->rsuID)

602 
ªtu∫På
 =Ñëu∫På->
√xt
;

604  
ªtu∫På
;

612 
	`gëCÆD©aR˝i
(
uöt8_t
* 
¨øy
, 
¨øyIdx
, * 
ßveAºay
){

613 if(
¨øyIdx
 > 0){

614 
uöt16_t
 
sum
 = 
¨øy
[0];

615 
uöt8_t
 
mö
 = 
¨øy
[0];

616 
uöt8_t
 
max
 = 
¨øy
[0];

620 
i
=1; i<
¨øyIdx
; i++){

622 
sum
 +
¨øy
[
i
];

624 if(
¨øy
[
i
] < 
mö
)

625 
mö
 = 
¨øy
[
i
];

627 if(
¨øy
[
i
] > 
max
)

628 
max
 = 
¨øy
[
i
];

633 
ßveAºay
[4] = 
mö
;

634 
ßveAºay
[5] = 
max
;

635 
ßveAºay
[6] = ()(
sum
/
¨øyIdx
);

636 
ßveAºay
[7] = 
¨øy
[
¨øyIdx
-1];

648 
ßveAºay
[4] = 0.0;

649 
ßveAºay
[5] = 0.0;

650 
ßveAºay
[6] = 0.0;

651 
ßveAºay
[7] = 0.0;

666 
	`gëCÆD©aRxpowî
(
öt16_t
* 
¨øy
, 
¨øyIdx
, * 
ßveAºay
){

667 if(
¨øyIdx
 > 0){

668 
öt16_t
 
sum
 = 
¨øy
[0];

669 
öt16_t
 
mö
 = 
¨øy
[0];

670 
öt16_t
 
max
 = 
¨øy
[0];

674 
i
=1; i<
¨øyIdx
; i++){

675 
sum
 +
¨øy
[
i
];

677 if(
¨øy
[
i
] < 
mö
)

678 
mö
 = 
¨øy
[
i
];

680 if(
¨øy
[
i
] > 
max
)

681 
max
 = 
¨øy
[
i
];

686 
ßveAºay
[0] = 
mö
;

687 
ßveAºay
[1] = 
max
;

688 
ßveAºay
[2] = ()(
sum
/
¨øyIdx
);

689 
ßveAºay
[3] = 
¨øy
[
¨øyIdx
-1];

701 
ßveAºay
[0] = 0.0;

702 
ßveAºay
[1] = 0.0;

703 
ßveAºay
[2] = 0.0;

704 
ßveAºay
[3] = 0.0;

723 
	`ldCÆdi°™˚
(
uöt32_t
 
æo
, uöt32_à
æa
, uöt32_à
ﬁo
, uöt32_à
ﬁa
)

725 
a
, 
b
, 
c
, 
d
, 
x
, 
y
, 
z
;

726 
a
 = ()((
æo
 * 1e-7Ë* 
M_PI
 / 180);

727 
b
 = ()((
æa
 * 1e-7Ë* 
M_PI
 / 180);

728 
c
 = ()((
ﬁo
 * 1e-7Ë* 
M_PI
 / 180);

729 
d
 = ()((
ﬁa
 * 1e-7Ë* 
M_PI
 / 180);

730 
x
 = 
	`sö
(
b
Ë* sö(
d
);

731 
y
 = 
	`cos
(
b
Ë* cos(
d
);

732 
z
 = 
	`Ábs
(
c
 - 
a
);

733 
y
 = y*
	`cos
(
z
);

734 
x
 = 
	`acos
(x + 
y
);

735 
y
 = 
x
 * 6371009;

737  
y
;

745 * 
	`rxThªad
(*
nŸu£d
){

748 !
ídög
){

750 
	`±hªad_muãx_lock
(&
g_mib
.
txMtx
);

751 
	`±hªad_c⁄d_waô
(&
g_mib
.
txC⁄d
, &g_mib.
txMtx
);

752 
	`±hªad_muãx_u∆ock
(&
g_mib
.
txMtx
);

753 
	`∑r_Rï‹t
();

757 
	`±hªad_exô
((*)0);

764 * 
	`u£rSñe˘Thªad
(*
nŸu£d
){

765 
num
;

766 
ªt
;

767 
°©us
;

768 
∑rInfo_t
 *
±rTemp
 = 
NULL
;

769 
num
 = 0;

770 
£À˘RsuID
;

772 !
ídög
){

774 
num
){

792 
	`¥ötf
(" MENU\n");

793 
	`¥ötf
("====Please selectáÇumber====\n");

794 
	`¥ötf
("1. Printing Connected RSUID(s) Information\n");

795 
	`¥ötf
("2. PrintingÅhe RSU information you want\n");

796 
	`¥ötf
("3. QUit\n>> ");

797 
	`sˇnf
("%d",&
num
);

800 
±rTemp
 = 
Li°På
->
hód
;

801 
cou¡
 = 1;

802 
±rTemp
 !
NULL
){

803 
	`¥ötf
("RSUID o‡[%d]: %d\n", 
cou¡
++, 
±rTemp
->
rsuID
);

804 
±rTemp
 =ÖåTemp->
√xt
;

806 
num
 = 0;

809 
	`¥ötf
("Input wanted RSU ID >> ");

810 
	`sˇnf
("%d",&
£À˘RsuID
);

811 
±rTemp
 = 
	`gëNode
(
£À˘RsuID
);

812 if(
±rTemp
 =
NULL
){

813 
	`¥ötf
("# Error(Please input correct RsuID\n");

816 
	`¥ötf
("**Inf‹m©i⁄ o‡RSU ID[%d]**\n",
£À˘RsuID
);

818 
	`¥ötf
( "RSUID : %d\nRSU Latitude : %d\nRSU Longitude : %d\nOBU Latitude : %d\nOBU Longitude : %d\n",

820 
±rTemp
->
rsuID
,

821 
±rTemp
->
rsuL©ôude
,

822 
±rTemp
->
rsuL⁄gôude
,

823 
±rTemp
->
obuL©ôude
,

824 
±rTemp
->
obuL⁄gôude
);

825 
	`¥ötf
( "Distance : %.0f\nOBUSpeed : %3.2f\nOBUHeading : %3.2f\nPAR : %d\n",

828 
±rTemp
->
di°™˚
,

829 ()
±rTemp
->
obuS≥ed
,

830 ()
±rTemp
->
obuHódög
,

831 
±rTemp
->
maxPAR
);

833 if(
±rTemp
->
check
 &&ÖåTemp->
¨øyIdx
 == 0)

835 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
∑°Aºayidx
,ÖåTemp->
ˇlcuœãD©a
);

836 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
∑°Aºayidx
,ÖåTemp->
ˇlcuœãD©a
);

840 
	`gëCÆD©aR˝i
(
±rTemp
->
r˝i
,ÖåTemp->
¨øyIdx
,ÖåTemp->
ˇlcuœãD©a
);

841 
	`gëCÆD©aRxpowî
(
±rTemp
->
rxpowî
,ÖåTemp->
¨øyIdx
,ÖåTemp->
ˇlcuœãD©a
);

844 
	`¥ötf
("RSUID : %d\nRSULatitude : %d\nRSULongitude : %d\nOBULatitude : %d\nOBULongitude : %d\nDistance : %.0f\nOBUSpeed : %3.2f\nOBUHeading : %3.2f\nPAR : %d\nMin_rxpower : %d\nMax_rxpower : %d\nAvr_rxpower : %.1f\nLast_rxpower : %d\nMin_rcpi : %d\nMax_rcpi : %d\nAvr_rcpi : %.1f\nLast_rcpi : %d\n",

845 
±rTemp
->
rsuID
,

846 
±rTemp
->
rsuL©ôude
,

847 
±rTemp
->
rsuL⁄gôude
,

848 
±rTemp
->
obuL©ôude
,

849 
±rTemp
->
obuL⁄gôude
,

850 
±rTemp
->
di°™˚
,

851 ()
±rTemp
->
obuS≥ed
,

852 ()
±rTemp
->
obuHódög
,

853 
±rTemp
->
maxPAR
,

854 ()
±rTemp
->
ˇlcuœãD©a
[0],

855 ()
±rTemp
->
ˇlcuœãD©a
[1],

856 
±rTemp
->
ˇlcuœãD©a
[2],

857 ()
±rTemp
->
ˇlcuœãD©a
[3],

858 ()
±rTemp
->
ˇlcuœãD©a
[4],

859 ()
±rTemp
->
ˇlcuœãD©a
[5],

860 
±rTemp
->
ˇlcuœãD©a
[6],

861 ()
±rTemp
->
ˇlcuœãD©a
[7]);

863 
num
=0;

867 
	`¥ötf
("Success Quit!\n");

868 
	`±hªad_exô
((*)0);

874 
	`¥ötf
("#error:not usableÖarameter\n");

875 
num
 = 0;

883 
ªt
 = 
	`±hªad_joö
(
u£rSñe˘_thªad
, (**)
°©us
);

884 if–
ªt
 == 0 )

886 
	`¥ötf
("[PAR_RX] Com∂ëed joö wôh u£rSñe˘Thªad sètu†%d\n", 
°©us
);

891 
	`¥ötf
("[PAR_RX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

903 
boﬁ
 
	`isThîeRSUID
(
rsuID
){

904 
∑rInfo_t
 *
±rTemp
 = 
Li°På
->
hód
;

905 
±rTemp
 !
NULL
){

906 if(
±rTemp
->
rsuID
 ==ÑsuID)

907  
åue
;

909 
±rTemp
 =ÖåTemp->
√xt
;

911  
Ál£
;

	@/media/sf_Source/200104_Application_source/PAR/src/PAR_TX.c

1 
	~<°dio.h
>

2 
	~<m©h.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<uni°d.h
>

7 
	~"msgQ.h
"

8 
	~<sys/msg.h
>

9 
	~<sys/ùc.h
>

10 
	~<sig«l.h
>

11 
	~<PAR.h
>

16 
∑r_InôTX›î©i⁄
();

17 
∑r_TX›î©i⁄
();

18 * 
gpsdThªad
(*
nŸu£d
);

27 
	$∑r_InôTX›î©i⁄
(){

29 
öt32_t
 
ªt
;

30 * 
°©us
;

33 if(
g_mib
.
öãrvÆ
 ==0)

35 
g_mib
.
öãrvÆ
 = 10000;

41 
	`±hªad_muãx_öô
(&
g_mib
.
txMtx
, 
NULL
);

42 
	`±hªad_c⁄d_öô
(&
g_mib
.
txC⁄d
, 
NULL
);

46 
	`InôTxTimî
(
g_mib
.
öãrvÆ
);

49 
ªt
 = 
	`±hªad_¸óã
(&
gpsd_thªad
, 
NULL
, 
gpsdThªad
, NULL);

50 if(
ªt
 <0)

53 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_TX] FaûÅÿ¸óã gpsdÅhªad(Ë: %s\¿",(*)
°©us
);

59 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_TX] Success create gpsdÅhread() \n");

62 
	}
}

69 
	$∑r_TX›î©i⁄
()

71 
öt32_t
 
ªt
;

72 
uöt8_t
 
outBuf
[
BUFSIZE
];

73 
uöt32_t
 
Àn
;

74 * 
°©us
;

76 
	`mem£t
(
outBuf
, 0, 
BUFSIZE
);

78 !
ídög
)

82 
	`±hªad_muãx_lock
(&
g_mib
.
txMtx
);

83 
	`±hªad_c⁄d_waô
(&
g_mib
.
txC⁄d
, &g_mib.
txMtx
);

84 
	`±hªad_muãx_u∆ock
(&
g_mib
.
txMtx
);

87 
	`mem˝y
(
outBuf
,&
g_rsu
,(
rsuInfo_t
));

88 
Àn
 = (
rsuInfo_t
);

91 
	`£ndMQ
((*)&
outBuf
,
Àn
);

94 
	`mem£t
(
outBuf
, 0, (outBuf));

98 
	`gps_˛o£
(&
gpsD©a
);

102 
ªt
 = 
	`±hªad_joö
(
gpsd_thªad
, &
°©us
);

104 if–
ªt
 == 0 )

107 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_TX] Com∂ëed joö wôh gpsdThªad sètu†%s\n",(*)
°©us
);

112 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_TX] ERROR:Ñëu∫ codê‰omÖthªad_joö(Ëi†%d\n", 
ªt
);

116 
	`±hªad_muãx_de°roy
(&
g_mib
.
txMtx
);

117 
	`±hªad_c⁄d_de°roy
(&
g_mib
.
txC⁄d
);

118 
	}
}

126 * 
	$gpsdThªad
(*
nŸu£d
){

128 
öt32_t
 
ªsu…
;

131 
ªsu…
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

132 if(
ªsu…
 <0)

135 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_TX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªsu…
));

136 
shmCheck
 = 
åue
;

139 !
ídög
)

142 if(
shmCheck
 =
åue
)

144 
	`gps_˛o£
(&
gpsD©a
);

145 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_TX] Re connectionÅo GPSD\n");

147 
ªsu…
 = 
	`gps_›í
(
GPSD_SHARED_MEMORY
, 0, &
gpsD©a
);

149 if(
ªsu…
 < 0 )

151 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_TX] gps_›í(ËÁû(%s)\n", 
	`gps_îr°r
(
ªsu…
));

152 
	`±hªad_exô
((*)-1);

154 
shmCheck
 = 
Ál£
;

159 
ªsu…
 = 
	`gps_ªad
(&
gpsD©a
);

160 if(
ªsu…
 < 0)

162 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR_TX] gps_ªad(ËÁû–%s)\n", 
	`gps_îr°r
(
ªsu…
));

163 
shmCheck
 = 
åue
;

167 if–
g_mib
.
L©ôude
 !0 && g_mib.
L⁄gôude
 != 0)

169 
g_rsu
.
rsuID
 = 
g_mib
.rsuID;

170 
g_rsu
.
rsuL©ôude
 = 
g_mib
.
L©ôude
;

171 
g_rsu
.
rsuL⁄gôude
 = 
g_mib
.
L⁄gôude
;

173 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_TX] INPUT LATI AND LONGI\n");

174 if(
g_mib
.
dbg
)

176 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "rsuID : %dÑsuL©ò: %dÑsuL⁄gò: %d \n",
g_rsu
.
rsuID
, g_rsu.
rsuL©ôude
, g_rsu.
rsuL⁄gôude
);

183 if(
gpsD©a
.
£t
)

185 
g_rsu
.
rsuID
 = 
g_mib
.rsuID;

186 
g_rsu
.
rsuL©ôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
œtôude
;

187 
g_rsu
.
rsuL⁄gôude
 = (Ë
	`pow
(10,7)*
gpsD©a
.
fix
.
l⁄gôude
;

189 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_TX] GPSData.set Success\n");

190 if(
g_mib
.
dbg
)

192 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "rsuID : %dÑsuL©ò: %dÑsuL⁄gò: %d \n",
g_rsu
.
rsuID
, g_rsu.
rsuL©ôude
, g_rsu.
rsuL⁄gôude
);

198 
g_rsu
.
rsuID
 = 
g_mib
.rsuID;

199 
g_rsu
.
rsuL©ôude
 = 900000001;

200 
g_rsu
.
rsuL⁄gôude
 = 1800000001;

202 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR_TX] GPSData Invalid\n");

203 if(
g_mib
.
dbg
)

205 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "rsuID : %dÑsuL©ò: %dÑsuL⁄gò: %d \n",
g_rsu
.
rsuID
, g_rsu.
rsuL©ôude
, g_rsu.
rsuL⁄gôude
);

210 
	`¶ìp
(1);

214 
	`gps_˛o£
(&
gpsD©a
);

217 
	`±hªad_exô
((*)0);

218 
	}
}

	@/media/sf_Source/200104_Application_source/PAR/src/gps.h

6 #i‚de‡
_GPSD_GPS_H_


7 
	#_GPSD_GPS_H_


	)

9 #ifde‡
__˝lu•lus


13 
	~<sys/ty≥s.h
>

14 
	~<sys/time.h
>

15 
	~<°dboﬁ.h
>

16 
	~<öây≥s.h
>

17 
	~<limôs.h
>

18 
	~<time.h
>

19 
	~<sig«l.h
>

20 
	~<°dio.h
>

21 
	~<±hªad.h
>

41 
	#GPSD_API_MAJOR_VERSION
 6

	)

42 
	#GPSD_API_MINOR_VERSION
 1

	)

44 
	#MAXCHANNELS
 72

	)

45 
	#MAXUSERDEVS
 4

	)

46 
	#GPS_PATH_MAX
 128

	)

80 
	subx_«v_pvt_t


82 
uöt32_t
 
ôow
;

83 
uöt16_t
 
yór
;

84 
uöt8_t
 
m⁄th
;

85 
uöt8_t
 
day
;

86 
uöt8_t
 
hour
;

87 
uöt8_t
 
mö
;

88 
uöt8_t
 
£c
;

89 
uöt8_t
 
vÆid
;

90 
uöt32_t
 
tAcc
;

91 
öt32_t
 
«no
;

92 
uöt8_t
 
fixTy≥
;

93 
uöt8_t
 
Êags
;

94 
uöt8_t
 
Êags2
;

95 
uöt8_t
 
numSV
;

96 
öt32_t
 
l⁄
;

97 
öt32_t
 
œt
;

98 
öt32_t
 
height
;

99 
öt32_t
 
hMSL
;

100 
uöt32_t
 
hAcc
;

101 
uöt32_t
 
vAcc
;

102 
öt32_t
 
vñN
;

103 
öt32_t
 
vñE
;

104 
öt32_t
 
vñD
;

105 
öt32_t
 
gS≥ed
;

106 
öt32_t
 
hódMŸ
;

107 
uöt32_t
 
sAcc
;

108 
uöt32_t
 
hódAcc
;

109 
uöt16_t
 
pDOP
;

112 
uöt8_t
 
ª£rved1
;

113 
öt32_t
 
hódVeh
;

114 
öt16_t
 
msgDec
;

115 
uöt16_t
 
msgAcc
;

118 
	ttime°amp_t
;

120 
	sgps_fix_t
 {

121 
time°amp_t
 
time
;

122 
mode
;

123 
	#MODE_NOT_SEEN
 0

	)

124 
	#MODE_NO_FIX
 1

	)

125 
	#MODE_2D
 2

	)

126 
	#MODE_3D
 3

	)

127 
ït
;

128 
œtôude
;

129 
ïy
;

130 
l⁄gôude
;

131 
ïx
;

132 
Ætôude
;

133 
ïv
;

134 
åack
;

135 
ïd
;

136 
•ìd
;

137 
ïs
;

138 
˛imb
;

139 
ïc
;

149 
	#GPS_PRN
(
n
Ë((“Ë>1Ë&& (“Ë<32)Ë

	)

150 
	#GBAS_PRN
(
n
Ë(“Ë>64 && (“Ë<119)Ë

	)

151 
	#SBAS_PRN
(
n
Ë(“Ë>120 && (“Ë<158)Ë

	)

152 
	#GNSS_PRN
(
n
Ë(“Ë>159 && (“Ë<210)Ë

	)

160 
	#GLONASS_PRN_OFFSET
 64

	)

165 
	sg°_t
 {

166 
ut˘ime
;

167 
rms_devüti⁄
;

168 
smaj‹_devüti⁄
;

169 
smö‹_devüti⁄
;

170 
smaj‹_‹õ¡©i⁄
;

171 
œt_îr_devüti⁄
;

172 
l⁄_îr_devüti⁄
;

173 
Æt_îr_devüti⁄
;

189 
	#RTCM2_WORDS_MAX
 33

	)

190 
	#MAXCORRECTIONS
 18

	)

191 
	#MAXSTATIONS
 10

	)

193 
	#MAXHEALTH
 (
RTCM2_WORDS_MAX
-2)

	)

200 
uöt32_t
 
	tisgps30bôs_t
;

206 
	#NAVSYSTEM_GPS
 0

	)

207 
	#NAVSYSTEM_GLONASS
 1

	)

208 
	#NAVSYSTEM_GALILEO
 2

	)

209 
	#NAVSYSTEM_UNKNOWN
 3

	)

211 
	sπcm2_t
 {

213 
ty≥
;

214 
Àngth
;

215 
zcou¡
;

216 
ªf°aid
;

217 
£qnum
;

218 
°©h…h
;

223 
√¡rõs
;

224 
	sgps_øngeßt_t
 {

225 
idít
;

226 
udª
;

227 
iod
;

228 
¥c
;

229 
ºc
;

230 } 
ßt
[
MAXCORRECTIONS
];

231 } 
gps_ønges
;

233 
boﬁ
 
vÆid
;

234 
x
, 
y
, 
z
;

235 } 
e˚f
;

237 
boﬁ
 
vÆid
;

238 
sy°em
;

239 
£n£
;

240 
	#SENSE_INVALID
 0

	)

241 
	#SENSE_GLOBAL
 1

	)

242 
	#SENSE_LOCAL
 2

	)

243 
d©um
[6];

244 
dx
, 
dy
, 
dz
;

245 } 
ª„ªn˚
;

247 
√¡rõs
;

248 
	sc⁄ßt_t
 {

249 
idít
;

250 
boﬁ
 
iodl
;

251 
hó…h
;

252 
	#HEALTH_NORMAL
 (0Ë

	)

253 
	#HEALTH_UNMONITORED
 (1Ë

	)

254 
	#HEALTH_NOINFO
 (2Ë

	)

255 
	#HEALTH_DONOTUSE
 (3Ë

	)

256 
¢r
;

257 
	#SNR_BAD
 -1

	)

258 
boﬁ
 
hó…h_í
;

259 
boﬁ
 
√w_d©a
;

260 
boﬁ
 
los_w¨nög
;

261 
tou
;

262 } 
ßt
[
MAXHEALTH
];

263 } 
c⁄hó…h
;

265 
√¡rõs
;

266 
	s°©i⁄_t
 {

267 
œtôude
, 
l⁄gôude
;

268 
ønge
;

269 
‰equícy
;

270 
hó…h
;

271 
°©i⁄_id
;

272 
bôøã
;

273 } 
°©i⁄
[
MAXSTATIONS
];

274 } 
Æm™ac
;

276 
boﬁ
 
°©us
;

277 
boﬁ
 
øngeÊag
;

278 
œt
, 
l⁄
;

279 
ønge
;

280 } 
xmôãr
;

282 
wìk
;

283 
hour
;

284 
À≠£cs
;

285 } 
gp°ime
;

287 
√¡rõs
;

288 
	sgl⁄ass_øngeßt_t
 {

289 
idít
;

290 
udª
;

291 
tod
;

292 
boﬁ
 
ch™ge
;

293 
¥c
;

294 
ºc
;

295 } 
ßt
[
MAXCORRECTIONS
];

296 } 
gl⁄ass_ønges
;

298 
mesßge
[(
RTCM2_WORDS_MAX
-2Ë* (
isgps30bôs_t
)];

300 
isgps30bôs_t
 
w‹ds
[
RTCM2_WORDS_MAX
-2];

306 
	#RTCM3_MAX_SATELLITES
 64

	)

307 
	#RTCM3_MAX_DESCRIPTOR
 31

	)

308 
	#RTCM3_MAX_ANNOUNCEMENTS
 32

	)

310 
	sπcm3_πk_hdr
 {

312 
°©i⁄_id
;

313 
time_t
 
tow
;

315 
boﬁ
 
sync
;

316 
ßtcou¡
;

317 
boﬁ
 
smoŸhög
;

318 
öãrvÆ
;

321 
	sπcm3_basic_πk
 {

322 
ödiˇt‹
;

323 
ch™√l
;

325 
p£ud‹™ge
;

326 
øngediff
;

327 
locktime
;

330 
	sπcm3_exãnded_πk
 {

331 
ödiˇt‹
;

332 
ch™√l
;

334 
p£ud‹™ge
;

335 
øngediff
;

336 
locktime
;

337 
ambiguôy
;

339 
CNR
;

342 
	sπcm3_√tw‹k_πk_hódî
 {

343 
√tw‹k_id
;

344 
sub√tw‹k_id
;

345 
time_t
 
time
;

346 
boﬁ
 
mu…imesg
;

347 
ma°î_id
;

348 
aux_id
;

349 
ßtcou¡
;

352 
	sπcm3_c‹ª˘i⁄_diff
 {

353 
idít
;

354 íum {
ª£rved
, 
c‹ª˘
, 
widñ™e
, 
un˚πaö
} 
ambiguôy
;

355 
n⁄sync
;

356 
geomëric_diff
;

358 
iode
;

359 
i⁄o•hîic_diff
;

363 
	sπcm3_t
 {

365 
ty≥
;

366 
Àngth
;

371 
πcm3_πk_hdr
 
hódî
;

372 
	sπcm3_1001_t
 {

373 
idít
;

374 
πcm3_basic_πk
 
L1
;

375 } 
πk_d©a
[
RTCM3_MAX_SATELLITES
];

376 } 
πcm3_1001
;

378 
πcm3_πk_hdr
 
hódî
;

379 
	sπcm3_1002_t
 {

380 
idít
;

381 
πcm3_exãnded_πk
 
L1
;

382 } 
πk_d©a
[
RTCM3_MAX_SATELLITES
];

383 } 
πcm3_1002
;

384 
	sπcm3_1003_t
 {

385 
πcm3_πk_hdr
 
hódî
;

387 
idít
;

388 
πcm3_basic_πk
 
L1
;

389 
πcm3_basic_πk
 
L2
;

390 } 
πk_d©a
[
RTCM3_MAX_SATELLITES
];

391 } 
πcm3_1003
;

392 
	sπcm3_1004_t
 {

393 
πcm3_πk_hdr
 
hódî
;

395 
idít
;

396 
πcm3_exãnded_πk
 
L1
;

397 
πcm3_exãnded_πk
 
L2
;

398 } 
πk_d©a
[
RTCM3_MAX_SATELLITES
];

399 } 
πcm3_1004
;

400 
	sπcm3_1005_t
 {

401 
°©i⁄_id
;

402 
sy°em
;

403 
boﬁ
 
ª„ªn˚_°©i⁄
;

404 
boﬁ
 
sögÀ_ª˚ivî
;

405 
e˚f_x
, 
e˚f_y
, 
e˚f_z
;

406 } 
πcm3_1005
;

407 
	sπcm3_1006_t
 {

408 
°©i⁄_id
;

409 
sy°em
;

410 
boﬁ
 
ª„ªn˚_°©i⁄
;

411 
boﬁ
 
sögÀ_ª˚ivî
;

412 
e˚f_x
, 
e˚f_y
, 
e˚f_z
;

413 
height
;

414 } 
πcm3_1006
;

416 
°©i⁄_id
;

417 
des¸ùt‹
[
RTCM3_MAX_DESCRIPTOR
+1];

418 
£tup_id
;

419 } 
πcm3_1007
;

421 
°©i⁄_id
;

422 
des¸ùt‹
[
RTCM3_MAX_DESCRIPTOR
+1];

423 
£tup_id
;

424 
£rül
[
RTCM3_MAX_DESCRIPTOR
+1];

425 } 
πcm3_1008
;

427 
πcm3_πk_hdr
 
hódî
;

428 
	sπcm3_1009_t
 {

429 
idít
;

430 
πcm3_basic_πk
 
L1
;

431 } 
πk_d©a
[
RTCM3_MAX_SATELLITES
];

432 } 
πcm3_1009
;

434 
πcm3_πk_hdr
 
hódî
;

435 
	sπcm3_1010_t
 {

436 
idít
;

437 
πcm3_exãnded_πk
 
L1
;

438 } 
πk_d©a
[
RTCM3_MAX_SATELLITES
];

439 } 
πcm3_1010
;

441 
πcm3_πk_hdr
 
hódî
;

442 
	sπcm3_1011_t
 {

443 
idít
;

444 
πcm3_exãnded_πk
 
L1
;

445 
πcm3_exãnded_πk
 
L2
;

446 } 
πk_d©a
[
RTCM3_MAX_SATELLITES
];

447 } 
πcm3_1011
;

449 
πcm3_πk_hdr
 
hódî
;

450 
	sπcm3_1012_t
 {

451 
idít
;

452 
πcm3_exãnded_πk
 
L1
;

453 
πcm3_exãnded_πk
 
L2
;

454 } 
πk_d©a
[
RTCM3_MAX_SATELLITES
];

455 } 
πcm3_1012
;

457 
°©i⁄_id
;

458 
mjd
;

459 
sod
;

460 
À≠£cs
;

461 
ncou¡
;

462 
	sπcm3_1013_t
 {

463 
id
;

464 
boﬁ
 
sync
;

465 
öãrvÆ
;

466 } 
™noun˚míts
[
RTCM3_MAX_ANNOUNCEMENTS
];

467 } 
πcm3_1013
;

469 
	sπcm3_1014_t
 {

470 
√tw‹k_id
;

471 
sub√tw‹k_id
;

472 
°©i⁄cou¡
;

473 
ma°î_id
;

474 
aux_id
;

475 
d_œt
, 
d_l⁄
, 
d_Æt
;

476 } 
πcm3_1014
;

477 
	sπcm3_1015_t
 {

478 
πcm3_√tw‹k_πk_hódî
 
hódî
;

479 
πcm3_c‹ª˘i⁄_diff
 
c‹ª˘i⁄s
[
RTCM3_MAX_SATELLITES
];

480 } 
πcm3_1015
;

481 
	sπcm3_1016_t
 {

482 
πcm3_√tw‹k_πk_hódî
 
hódî
;

483 
πcm3_c‹ª˘i⁄_diff
 
c‹ª˘i⁄s
[
RTCM3_MAX_SATELLITES
];

484 } 
πcm3_1016
;

485 
	sπcm3_1017_t
 {

486 
πcm3_√tw‹k_πk_hódî
 
hódî
;

487 
πcm3_c‹ª˘i⁄_diff
 
c‹ª˘i⁄s
[
RTCM3_MAX_SATELLITES
];

488 } 
πcm3_1017
;

490 
	sπcm3_1019_t
 {

491 
idít
;

492 
wìk
;

493 
sv_accuøcy
;

494 íum {
ª£rved_code
, 
p
, 
ˇ
, 
l2c
} 
code
;

495 
idŸ
;

496 
iode
;

498 
t_sub_oc
;

499 sig√d 
a_sub_f2
;

500 sig√d 
a_sub_f1
;

501 sig√d 
a_sub_f0
;

502 
iodc
;

503 sig√d 
C_sub_rs
;

504 sig√d 
dñè_sub_n
;

505 sig√d 
M_sub_0
;

506 sig√d 
C_sub_uc
;

507 
e
;

508 sig√d 
C_sub_us
;

509 
sqπ_sub_A
;

510 
t_sub_€
;

511 sig√d 
C_sub_ic
;

512 sig√d 
OMEGA_sub_0
;

513 sig√d 
C_sub_is
;

514 sig√d 
i_sub_0
;

515 sig√d 
C_sub_rc
;

516 sig√d 
¨gumít_of_≥rigì
;

517 sig√d 
omegadŸ
;

518 sig√d 
t_sub_GD
;

519 
sv_hó…h
;

520 
boﬁ
 
p_d©a
;

521 
boﬁ
 
fô_öãrvÆ
;

522 } 
πcm3_1019
;

523 
	sπcm3_1020_t
 {

524 
idít
;

525 
ch™√l
;

527 
boﬁ
 
C_sub_n
;

528 
boﬁ
 
hó…h_avAûabûôy_ödiˇt‹
;

529 
P1
;

530 
t_sub_k
;

531 
boﬁ
 
msb_of_B_sub_n
;

532 
boﬁ
 
P2
;

533 
boﬁ
 
t_sub_b
;

534 sig√d 
x_sub_n_t_of_t_sub_b_¥ime
;

535 sig√d 
x_sub_n_t_of_t_sub_b
;

536 sig√d 
x_sub_n_t_of_t_sub_b_¥ime_¥ime
;

537 sig√d 
y_sub_n_t_of_t_sub_b_¥ime
;

538 sig√d 
y_sub_n_t_of_t_sub_b
;

539 sig√d 
y_sub_n_t_of_t_sub_b_¥ime_¥ime
;

540 sig√d 
z_sub_n_t_of_t_sub_b_¥ime
;

541 sig√d 
z_sub_n_t_of_t_sub_b
;

542 sig√d 
z_sub_n_t_of_t_sub_b_¥ime_¥ime
;

543 
boﬁ
 
P3
;

544 sig√d 
gamma_sub_n_of_t_sub_b
;

545 
MP
;

546 
boﬁ
 
Ml_n
;

547 sig√d 
èu_n_of_t_sub_b
;

548 sig√d 
M_dñè_èu_sub_n
;

549 
E_sub_n
;

550 
boﬁ
 
MP4
;

551 
MF_sub_T
;

552 
MN_sub_T
;

553 
MM
;

554 
boﬁ
 
addôioöÆ_d©a_avaûabûôy
;

555 
N_sup_A
;

556 
èu_sub_c
;

557 
M_N_sub_4
;

558 sig√d 
M_èu_sub_GPS
;

559 
boﬁ
 
M_l_sub_n
;

560 } 
πcm3_1020
;

561 
	sπcm3_1029_t
 {

562 
°©i⁄_id
;

563 
mjd
;

564 
sod
;

565 
size_t
 
Àn
;

566 
size_t
 
unicode_unôs
;

567 
ãxt
[128];

568 } 
πcm3_1029
;

569 
	sπcm3_1033_t
 {

570 
°©i⁄_id
;

571 
des¸ùt‹
[
RTCM3_MAX_DESCRIPTOR
+1];

572 
£tup_id
;

573 
£rül
[
RTCM3_MAX_DESCRIPTOR
+1];

574 
ª˚ivî
[
RTCM3_MAX_DESCRIPTOR
+1];

575 
fúmw¨e
[
RTCM3_MAX_DESCRIPTOR
+1];

576 } 
πcm3_1033
;

577 
d©a
[1024];

578 } 
πcmty≥s
;

582 
	#GPS_AMBIGUITY_MODULUS
 299792.458

	)

583 
	#GLONASS_AMBIGUITY_MODULUS
 599584.916

	)

584 
	#MESSAGE_INTERVAL_UNITS
 0.1

	)

592 
	sÆm™ac_t


594 
uöt8_t
 
sv
;

596 
uöt8_t
 
tﬂ
;

597 
l_tﬂ
;

599 
uöt8_t
 
svh
;

601 
öt16_t
 
dñèi
;

602 
d_dñèi
;

604 
öt32_t
 
M0
;

605 
d_M0
;

608 
öt32_t
 
Omega0
;

609 
d_Omega0
;

611 
öt32_t
 
omega
;

612 
d_omega
;

615 
öt16_t
 
af0
;

616 
d_af0
;

619 
öt16_t
 
af1
;

620 
d_af1
;

622 
uöt16_t
 
e
;

623 
d_ec˚¡ricôy
;

626 
uöt32_t
 
sqπA
;

627 
d_sqπA
;

629 
öt16_t
 
Omegad
;

630 
d_Omegad
;

633 
	ssub‰ame_t
 {

635 
uöt8_t
 
sub‰ame_num
;

638 
uöt8_t
 
d©a_id
;

640 
uöt8_t
 
∑geid
;

642 
uöt8_t
 
tSVID
;

644 
uöt32_t
 
TOW17
;

645 
l_TOW17
;

647 
boﬁ
 
öãgrôy
;

650 
boﬁ
 
Æît
;

652 
boﬁ
 
™ti•oof
;

653 
is_Æm™ac
;

659 
uöt16_t
 
WN
;

662 
uöt16_t
 
IODC
;

665 
uöt16_t
 
toc
;

666 
l_toc
;

668 
uöt8_t
 
l2
;

670 
uöt8_t
 
l2p
;

672 
uø
;

674 
h…h
;

677 
öt32_t
 
af0
;

678 
d_af0
;

681 
öt16_t
 
af1
;

682 
d_af1
;

685 
öt8_t
 
af2
;

686 
d_af2
;

689 
öt8_t
 
Tgd
;

690 
d_Tgd
;

691 } 
sub1
;

697 
uöt8_t
 
IODE
;

700 
uöt8_t
 
AODO
;

701 
uöt16_t
 
u_AODO
;

704 
uöt8_t
 
fô
;

707 
uöt16_t
 
t€
;

708 
l_t€
;

711 
öt16_t
 
Crs
;

712 
d_Crs
;

715 
öt16_t
 
Cus
;

716 
d_Cus
;

719 
öt16_t
 
Cuc
;

720 
d_Cuc
;

724 
öt16_t
 
dñèn
;

725 
d_dñèn
;

728 
öt32_t
 
M0
;

729 
d_M0
;

731 
uöt32_t
 
e
;

732 
d_ec˚¡ricôy
;

735 
uöt32_t
 
sqπA
;

736 
d_sqπA
;

737 } 
sub2
;

743 
uöt8_t
 
IODE
;

746 
öt16_t
 
IDOT
;

747 
d_IDOT
;

750 
öt16_t
 
Cic
;

751 
d_Cic
;

754 
öt16_t
 
Cis
;

755 
d_Cis
;

758 
öt16_t
 
Crc
;

759 
d_Crc
;

762 
öt32_t
 
i0
;

763 
d_i0
;

766 
öt32_t
 
Omega0
;

767 
d_Omega0
;

770 
öt32_t
 
omega
;

771 
d_omega
;

774 
öt32_t
 
Omegad
;

775 
d_Omegad
;

776 } 
sub3
;

778 
Æm™ac_t
 
Æm™ac
;

779 } 
sub4
;

785 
ERD
[33];

787 
ai
;

788 } 
sub4_13
;

791 
°r
[24];

792 } 
sub4_17
;

798 
öt32_t
 
A0
;

799 
d_A0
;

802 
öt32_t
 
A1
;

803 
d_A1
;

809 
öt8_t
 
Æpha0
;

810 
d_Æpha0
;

812 
öt8_t
 
Æpha1
;

813 
d_Æpha1
;

815 
öt8_t
 
Æpha2
;

816 
d_Æpha2
;

818 
öt8_t
 
Æpha3
;

819 
d_Æpha3
;

825 
öt8_t
 
bëa0
;

826 
d_bëa0
;

828 
öt8_t
 
bëa1
;

829 
d_bëa1
;

831 
öt8_t
 
bëa2
;

832 
d_bëa2
;

834 
öt8_t
 
bëa3
;

835 
d_bëa3
;

839 
öt8_t
 
À≠
;

842 
öt8_t
 
lsf
;

846 
uöt8_t
 
tŸ
;

847 
d_tŸ
;

851 
uöt8_t
 
WNt
;

854 
uöt8_t
 
WNlsf
;

857 
uöt8_t
 
DN
;

858 } 
sub4_18
;

863 
svf
[33];

866 
uöt8_t
 
svhx
[8];

867 } 
sub4_25
;

869 
Æm™ac_t
 
Æm™ac
;

870 } 
sub5
;

874 
uöt8_t
 
tﬂ
;

875 
l_tﬂ
;

878 
uöt8_t
 
WNa
;

880 
uöt8_t
 
sv
[25];

881 } 
sub5_25
;

885 
uöt64_t
 
	tgps_mask_t
;

894 
	#AIS_AUXILIARY_MMSI
(
n
Ë(“Ë/ 10000000 =98)

	)

897 
	#AIS_LON3_NOT_AVAILABLE
 181000

	)

898 
	#AIS_LAT3_NOT_AVAILABLE
 91000

	)

899 
	#AIS_LATLON3_DIV
 60000.0

	)

902 
	#AIS_LON4_NOT_AVAILABLE
 1810000

	)

903 
	#AIS_LAT4_NOT_AVAILABLE
 910000

	)

904 
	#AIS_LATLON4_DIV
 600000.0

	)

906 
	srouã_öfo
 {

907 
lökage
;

908 
£ndî
;

909 
πy≥
;

910 
m⁄th
;

911 
day
;

912 
hour
;

913 
möuã
;

914 
duøti⁄
;

915 
waycou¡
;

916 
	swaypoöt_t
 {

917 sig√d 
l⁄
;

918 sig√d 
œt
;

919 } 
waypoöts
[16];

922 
	sais_t


924 
ty≥
;

925 
ª≥©
;

926 
mmsi
;

930 
°©us
;

931 sig√d 
tu∫
;

932 
	#AIS_TURN_HARD_LEFT
 -127

	)

933 
	#AIS_TURN_HARD_RIGHT
 127

	)

934 
	#AIS_TURN_NOT_AVAILABLE
 128

	)

935 
•ìd
;

936 
	#AIS_SPEED_NOT_AVAILABLE
 1023

	)

937 
	#AIS_SPEED_FAST_MOVER
 1022

	)

938 
boﬁ
 
accuøcy
;

939 
	#AIS_LATLON_DIV
 600000.0

	)

940 
l⁄
;

941 
	#AIS_LON_NOT_AVAILABLE
 0x6791AC0

	)

942 
œt
;

943 
	#AIS_LAT_NOT_AVAILABLE
 0x3412140

	)

944 
cour£
;

945 
	#AIS_COURSE_NOT_AVAILABLE
 3600

	)

946 
hódög
;

947 
	#AIS_HEADING_NOT_AVAILABLE
 511

	)

948 
£c⁄d
;

949 
	#AIS_SEC_NOT_AVAILABLE
 60

	)

950 
	#AIS_SEC_MANUAL
 61

	)

951 
	#AIS_SEC_ESTIMATED
 62

	)

952 
	#AIS_SEC_INOPERATIVE
 63

	)

953 
m™euvî
;

955 
boﬁ
 
øim
;

956 
ødio
;

957 } 
ty≥1
;

960 
yór
;

961 
	#AIS_YEAR_NOT_AVAILABLE
 0

	)

962 
m⁄th
;

963 
	#AIS_MONTH_NOT_AVAILABLE
 0

	)

964 
day
;

965 
	#AIS_DAY_NOT_AVAILABLE
 0

	)

966 
hour
;

967 
	#AIS_HOUR_NOT_AVAILABLE
 24

	)

968 
möuã
;

969 
	#AIS_MINUTE_NOT_AVAILABLE
 60

	)

970 
£c⁄d
;

971 
	#AIS_SECOND_NOT_AVAILABLE
 60

	)

972 
boﬁ
 
accuøcy
;

973 
l⁄
;

974 
œt
;

975 
ïfd
;

977 
boﬁ
 
øim
;

978 
ødio
;

979 } 
ty≥4
;

982 
ais_vîsi⁄
;

983 
imo
;

985 
ˇŒsign
[7+1];

986 
	#AIS_SHIPNAME_MAXLEN
 20

	)

988 
shù«me
[
AIS_SHIPNAME_MAXLEN
+1];

989 
shùty≥
;

990 
to_bow
;

991 
to_°în
;

992 
to_p‹t
;

993 
to_°¨bﬂrd
;

994 
ïfd
;

995 
m⁄th
;

996 
day
;

997 
hour
;

998 
möuã
;

999 
døught
;

1000 
de°ö©i⁄
[20+1];

1001 
dã
;

1003 } 
ty≥5
;

1006 
£qno
;

1007 
de°_mmsi
;

1008 
boﬁ
 
ªå™smô
;

1010 
dac
;

1011 
fid
;

1012 
boﬁ
 
°ru˘uªd
;

1013 
	#AIS_TYPE6_BINARY_MAX
 920

	)

1014 
size_t
 
bôcou¡
;

1017 
bôd©a
[(
AIS_TYPE6_BINARY_MAX
 + 7) / 8];

1020 
cou¡ry
[2+1];

1021 
locode
[3+1];

1022 
£˘i⁄
[5+1];

1023 
ãrmöÆ
[5+1];

1024 
he˘omëª
[5+1];

1025 
m⁄th
;

1026 
day
;

1027 
hour
;

1028 
möuã
;

1029 
tugs
;

1030 
aúdøught
;

1031 } 
dac200fid21
;

1034 
cou¡ry
[2+1];

1035 
locode
[3+1];

1036 
£˘i⁄
[5+1];

1037 
ãrmöÆ
[5+1];

1038 
he˘omëª
[5+1];

1039 
m⁄th
;

1040 
day
;

1041 
hour
;

1042 
möuã
;

1043 
°©us
;

1044 
	#DAC200FID22_STATUS_OPERATIONAL
 0

	)

1045 
	#DAC200FID22_STATUS_LIMITED
 1

	)

1046 
	#DAC200FID22_STATUS_OUT_OF_ORDER
 2

	)

1047 
	#DAC200FID22_STATUS_NOT_AVAILABLE
 0

	)

1048 } 
dac200fid22
;

1051 
¸ew
;

1052 
∑s£ngîs
;

1053 
≥rs⁄√l
;

1054 
	#DAC200FID55_COUNT_NOT_AVAILABLE
 255

	)

1055 } 
dac200fid55
;

1058 
™a_öt
;

1059 
™a_ext1
;

1060 
™a_ext2
;

1061 
øc⁄
;

1062 
light
;

1063 
boﬁ
 
Æ¨m
;

1064 
°©_ext
;

1065 
boﬁ
 
off_pos
;

1066 } 
dac235fid10
;

1069 
œ°p‹t
[5+1];

1070 
lm⁄th
;

1071 
lday
;

1072 
lhour
;

1073 
lmöuã
;

1074 
√xç‹t
[5+1];

1075 
nm⁄th
;

1076 
nday
;

1077 
nhour
;

1078 
nmöuã
;

1079 
d™gîous
[20+1];

1080 
imdˇt
[4+1];

1081 
unid
;

1082 
amou¡
;

1083 
unô
;

1084 } 
dac1fid12
;

1087 
aúdøught
;

1088 } 
dac1fid15
;

1091 
≥rs⁄s
;

1092 } 
dac1fid16
;

1095 
lökage
;

1096 
m⁄th
;

1097 
day
;

1098 
hour
;

1099 
möuã
;

1100 
p‹äame
[20+1];

1101 
de°ö©i⁄
[5+1];

1102 sig√d 
l⁄
;

1103 sig√d 
œt
;

1104 } 
dac1fid18
;

1107 
lökage
;

1108 
bîth_Àngth
;

1109 
bîth_dïth
;

1110 
posôi⁄
;

1111 
m⁄th
;

1112 
day
;

1113 
hour
;

1114 
möuã
;

1115 
avaûabûôy
;

1116 
agít
;

1117 
fuñ
;

1118 
ch™dÀr
;

1119 
°eved‹e
;

1120 
ñe˘riˇl
;

1121 
w©î
;

1122 
cu°oms
;

1123 
ˇπage
;

1124 
¸™e
;

1125 
li·
;

1126 
mediˇl
;

1127 
«vª∑ú
;

1128 
¥ovisi⁄s
;

1129 
shùª∑ú
;

1130 
survey‹
;

1131 
°óm
;

1132 
tugs
;

1133 
sﬁidwa°e
;

1134 
liquidwa°e
;

1135 
haz¨douswa°e
;

1136 
bÆœ°
;

1137 
addôi⁄Æ
;

1138 
ªgi⁄Æ1
;

1139 
ªgi⁄Æ2
;

1140 
futuª1
;

1141 
futuª2
;

1142 
bîth_«me
[20+1];

1143 sig√d 
bîth_l⁄
;

1144 sig√d 
bîth_œt
;

1145 } 
dac1fid20
;

1149 
boﬁ
 
wmo
;

1152 
loˇti⁄
[20+1];

1153 sig√d 
l⁄
;

1154 sig√d 
œt
;

1155 
day
;

1156 
hour
;

1157 
möuã
;

1158 
boﬁ
 
vi¶imô
;

1159 
visibûôy
;

1160 
	#DAC1FID21_VISIBILITY_NOT_AVAILABLE
 127

	)

1161 
	#DAC1FID21_VISIBILITY_SCALE
 10.0

	)

1162 
humidôy
;

1163 
w•ìd
;

1164 
wgu°
;

1165 
	#DAC1FID21_WSPEED_NOT_AVAILABLE
 127

	)

1166 
wdú
;

1167 
	#DAC1FID21_WDIR_NOT_AVAILABLE
 360

	)

1168 
¥essuª
;

1169 
	#DAC1FID21_NONWMO_PRESSURE_NOT_AVAILABLE
 403

	)

1170 
	#DAC1FID21_NONWMO_PRESSURE_HIGH
 402

	)

1171 
	#DAC1FID21_NONWMO_PRESSURE_OFFSET
 400

	)

1172 
¥essuªãnd
;

1173 
aúãmp
;

1174 
	#DAC1FID21_AIRTEMP_NOT_AVAILABLE
 -1024

	)

1175 
	#DAC1FID21_AIRTEMP_SCALE
 10.0

	)

1176 
w©îãmp
;

1177 
	#DAC1FID21_WATERTEMP_NOT_AVAILABLE
 501

	)

1178 
	#DAC1FID21_WATERTEMP_SCALE
 10.0

	)

1179 
wavïîiod
;

1180 
	#DAC1FID21_WAVEPERIOD_NOT_AVAILABLE
 63

	)

1181 
wavedú
;

1182 
	#DAC1FID21_WAVEDIR_NOT_AVAILABLE
 360

	)

1183 
swñlheight
;

1184 
swñÕîiod
;

1185 
swñldú
;

1186 } 
n⁄wmo_obs
;

1188 sig√d 
l⁄
;

1189 sig√d 
œt
;

1190 
m⁄th
;

1191 
day
;

1192 
hour
;

1193 
möuã
;

1194 
cour£
;

1195 
•ìd
;

1196 
	#DAC1FID21_SOG_NOT_AVAILABLE
 31

	)

1197 
	#DAC1FID21_SOG_HIGH_SPEED
 30

	)

1198 
	#DAC1FID21_SOG_SCALE
 2.0

	)

1199 
hódög
;

1200 
	#DAC1FID21_HDG_NOT_AVAILABLE
 127

	)

1201 
	#DAC1FID21_HDG_SCALE
 5.0

	)

1202 
¥essuª
;

1203 
	#DAC1FID21_WMO_PRESSURE_SCALE
 10

	)

1204 
	#DAC1FID21_WMO_PRESSURE_OFFSET
 90.0

	)

1205 
pdñè
;

1206 
	#DAC1FID21_PDELTA_SCALE
 10

	)

1207 
	#DAC1FID21_PDELTA_OFFSET
 50.0

	)

1208 
±íd
;

1209 
twöddú
;

1210 
	#DAC1FID21_TWINDDIR_NOT_AVAILABLE
 127

	)

1211 
twöd•ìd
;

1212 
	#DAC1FID21_TWINDSPEED_SCALE
 2

	)

1213 
	#DAC1FID21_RWINDSPEED_NOT_AVAILABLE
 255

	)

1214 
rwöddú
;

1215 
	#DAC1FID21_RWINDDIR_NOT_AVAILABLE
 127

	)

1216 
rwöd•ìd
;

1217 
	#DAC1FID21_RWINDSPEED_SCALE
 2

	)

1218 
	#DAC1FID21_RWINDSPEED_NOT_AVAILABLE
 255

	)

1219 
mgu°•ìd
;

1220 
	#DAC1FID21_MGUSTSPEED_SCALE
 2

	)

1221 
	#DAC1FID21_MGUSTSPEED_NOT_AVAILABLE
 255

	)

1222 
mgu°dú
;

1223 
	#DAC1FID21_MGUSTDIR_NOT_AVAILABLE
 127

	)

1224 
aúãmp
;

1225 
	#DAC1FID21_AIRTEMP_OFFSET
 223

	)

1226 
humidôy
;

1227 
	#DAC1FID21_HUMIDITY_NOT_VAILABLE
 127

	)

1229 } 
wmo_obs
;

1231 } 
dac1fid21
;

1235 
unô
;

1236 
amou¡
;

1237 
nˇrgos
;

1238 
	sˇrgo_t
 {

1239 
code
;

1240 
subty≥
;

1241 } 
ˇrgos
[28];

1242 } 
dac1fid25
;

1244 
rouã_öfo
 
dac1fid28
;

1247 
lökage
;

1248 
	#AIS_DAC1FID30_TEXT_MAX
 154

	)

1249 
ãxt
[
AIS_DAC1FID30_TEXT_MAX
];

1250 } 
dac1fid30
;

1253 
m⁄th
;

1254 
day
;

1255 sig√d 
¡idÆs
;

1256 
	stidÆ_t
 {

1257 sig√d 
l⁄
;

1258 sig√d 
œt
;

1259 
‰om_hour
;

1260 
‰om_mö
;

1261 
to_hour
;

1262 
to_mö
;

1263 
	#DAC1FID32_CDIR_NOT_AVAILABLE
 360

	)

1264 
cdú
;

1265 
	#DAC1FID32_CSPEED_NOT_AVAILABLE
 127

	)

1266 
c•ìd
;

1267 } 
tidÆs
[3];

1268 } 
dac1fid32
;

1270 } 
ty≥6
;

1273 
mmsi1
;

1274 
mmsi2
;

1275 
mmsi3
;

1276 
mmsi4
;

1278 } 
ty≥7
;

1281 
dac
;

1282 
fid
;

1283 
	#AIS_TYPE8_BINARY_MAX
 952

	)

1284 
size_t
 
bôcou¡
;

1285 
boﬁ
 
°ru˘uªd
;

1288 
bôd©a
[(
AIS_TYPE8_BINARY_MAX
 + 7) / 8];

1291 
vö
[8+1];

1292 
Àngth
;

1293 
bóm
;

1294 
shùty≥
;

1295 
haz¨d
;

1296 
	#DAC200FID10_HAZARD_MAX
 5

	)

1297 
døught
;

1298 
lﬂded
;

1299 
boﬁ
 
•ìd_q
;

1300 
boﬁ
 
cour£_q
;

1301 
boﬁ
 
hódög_q
;

1302 } 
dac200fid10
;

1305 
°¨t_yór
;

1306 
°¨t_m⁄th
;

1307 
°¨t_day
;

1308 
íd_yór
;

1309 
íd_m⁄th
;

1310 
íd_day
;

1311 
°¨t_hour
;

1312 
°¨t_möuã
;

1313 
íd_hour
;

1314 
íd_möuã
;

1315 sig√d 
°¨t_l⁄
;

1316 sig√d 
°¨t_œt
;

1317 sig√d 
íd_l⁄
;

1318 sig√d 
íd_œt
;

1319 
ty≥
;

1320 
	#DAC200FID23_TYPE_UNKNOWN
 0

	)

1321 sig√d 
mö
;

1322 
	#DAC200FID23_MIN_UNKNOWN
 255

	)

1323 sig√d 
max
;

1324 
	#DAC200FID23_MAX_UNKNOWN
 255

	)

1325 
öãnsôy
;

1326 
	#DAC200FID23_CLASS_UNKNOWN
 0

	)

1327 
wöd
;

1328 
	#DAC200FID23_WIND_UNKNOWN
 0

	)

1329 } 
dac200fid23
;

1331 
cou¡ry
[2+1];

1332 sig√d 
ngauges
;

1333 
	sgauge_t
 {

1334 
id
;

1335 
	#DAC200FID24_GAUGE_ID_UNKNOWN
 0

	)

1336 sig√d 
Àvñ
;

1337 
	#DAC200FID24_GAUGE_LEVEL_UNKNOWN
 0

	)

1338 } 
gauges
[4];

1339 } 
dac200fid24
;

1341 sig√d 
l⁄
;

1342 sig√d 
œt
;

1343 
f‹m
;

1344 
	#DAC200FID40_FORM_UNKNOWN
 0

	)

1345 
Ácög
;

1346 
	#DAC200FID40_FACING_UNKNOWN
 0

	)

1347 
dúe˘i⁄
;

1348 
	#DAC200FID40_DIRECTION_UNKNOWN
 0

	)

1349 
°©us
;

1350 
	#DAC200FID40_STATUS_UNKNOWN
 0

	)

1351 } 
dac200fid40
;

1357 
	#DAC1FID11_LATLON_SCALE
 1000

	)

1358 
l⁄
;

1359 
	#DAC1FID11_LON_NOT_AVAILABLE
 0xFFFFFF

	)

1360 
œt
;

1361 
	#DAC1FID11_LAT_NOT_AVAILABLE
 0x7FFFFF

	)

1362 
day
;

1363 
hour
;

1364 
möuã
;

1365 
w•ìd
;

1366 
wgu°
;

1367 
	#DAC1FID11_WSPEED_NOT_AVAILABLE
 127

	)

1368 
wdú
;

1369 
wgu°dú
;

1370 
	#DAC1FID11_WDIR_NOT_AVAILABLE
 511

	)

1371 
aúãmp
;

1372 
	#DAC1FID11_AIRTEMP_NOT_AVAILABLE
 2047

	)

1373 
	#DAC1FID11_AIRTEMP_OFFSET
 600

	)

1374 
	#DAC1FID11_AIRTEMP_DIV
 10.0

	)

1375 
humidôy
;

1376 
	#DAC1FID11_HUMIDITY_NOT_AVAILABLE
 127

	)

1377 
dewpoöt
;

1378 
	#DAC1FID11_DEWPOINT_NOT_AVAILABLE
 1023

	)

1379 
	#DAC1FID11_DEWPOINT_OFFSET
 200

	)

1380 
	#DAC1FID11_DEWPOINT_DIV
 10.0

	)

1381 
¥essuª
;

1382 
	#DAC1FID11_PRESSURE_NOT_AVAILABLE
 511

	)

1383 
	#DAC1FID11_PRESSURE_OFFSET
 -800

	)

1384 
¥essuªãnd
;

1385 
	#DAC1FID11_PRESSURETREND_NOT_AVAILABLE
 3

	)

1386 
visibûôy
;

1387 
	#DAC1FID11_VISIBILITY_NOT_AVAILABLE
 255

	)

1388 
	#DAC1FID11_VISIBILITY_DIV
 10.0

	)

1389 
w©îÀvñ
;

1390 
	#DAC1FID11_WATERLEVEL_NOT_AVAILABLE
 511

	)

1391 
	#DAC1FID11_WATERLEVEL_OFFSET
 100

	)

1392 
	#DAC1FID11_WATERLEVEL_DIV
 10.0

	)

1393 
Àvñåíd
;

1394 
	#DAC1FID11_WATERLEVELTREND_NOT_AVAILABLE
 3

	)

1395 
c•ìd
;

1396 
	#DAC1FID11_CSPEED_NOT_AVAILABLE
 255

	)

1397 
	#DAC1FID11_CSPEED_DIV
 10.0

	)

1398 
cdú
;

1399 
	#DAC1FID11_CDIR_NOT_AVAILABLE
 511

	)

1400 
c•ìd2
;

1401 
cdú2
;

1402 
cdïth2
;

1403 
	#DAC1FID11_CDEPTH_NOT_AVAILABLE
 31

	)

1404 
c•ìd3
;

1405 
cdú3
;

1406 
cdïth3
;

1407 
waveheight
;

1408 
	#DAC1FID11_WAVEHEIGHT_NOT_AVAILABLE
 255

	)

1409 
	#DAC1FID11_WAVEHEIGHT_DIV
 10.0

	)

1410 
wavïîiod
;

1411 
	#DAC1FID11_WAVEPERIOD_NOT_AVAILABLE
 63

	)

1412 
wavedú
;

1413 
	#DAC1FID11_WAVEDIR_NOT_AVAILABLE
 511

	)

1414 
swñlheight
;

1415 
swñÕîiod
;

1416 
swñldú
;

1417 
£a°©e
;

1418 
	#DAC1FID11_SEASTATE_NOT_AVAILABLE
 15

	)

1419 
w©îãmp
;

1420 
	#DAC1FID11_WATERTEMP_NOT_AVAILABLE
 1023

	)

1421 
	#DAC1FID11_WATERTEMP_OFFSET
 100

	)

1422 
	#DAC1FID11_WATERTEMP_DIV
 10.0

	)

1423 
¥ecùty≥
;

1424 
	#DAC1FID11_PRECIPTYPE_NOT_AVAILABLE
 7

	)

1425 
ßlöôy
;

1426 
	#DAC1FID11_SALINITY_NOT_AVAILABLE
 511

	)

1427 
	#DAC1FID11_SALINITY_DIV
 10.0

	)

1428 
i˚
;

1429 
	#DAC1FID11_ICE_NOT_AVAILABLE
 3

	)

1430 } 
dac1fid11
;

1433 
ªas⁄
[20+1];

1434 
˛o£‰om
[20+1];

1435 
˛o£to
[20+1];

1436 
ødius
;

1437 
	#AIS_DAC1FID13_RADIUS_NOT_AVAILABLE
 10001

	)

1438 
extunô
;

1439 
	#AIS_DAC1FID13_EXTUNIT_NOT_AVAILABLE
 0

	)

1440 
fday
;

1441 
fm⁄th
;

1442 
fhour
;

1443 
fmöuã
;

1444 
tday
;

1445 
tm⁄th
;

1446 
thour
;

1447 
tmöuã
;

1448 } 
dac1fid13
;

1451 
aúdøught
;

1452 } 
dac1fid15
;

1455 
≥rs⁄s
;

1456 } 
dac1fid16
;

1459 sig√d 
¡¨gës
;

1460 
	sèrgë_t
 {

1461 
	#DAC1FID17_IDTYPE_MMSI
 0

	)

1462 
	#DAC1FID17_IDTYPE_IMO
 1

	)

1463 
	#DAC1FID17_IDTYPE_CALLSIGN
 2

	)

1464 
	#DAC1FID17_IDTYPE_OTHER
 3

	)

1465 
idty≥
;

1466 
	uèrgë_id
 {

1467 
mmsi
;

1468 
imo
;

1469 
	#DAC1FID17_ID_LENGTH
 7

	)

1471 
ˇŒsign
[
DAC1FID17_ID_LENGTH
+1];

1472 
Ÿhî
[
DAC1FID17_ID_LENGTH
+1];

1473 } 
id
;

1474 sig√d 
œt
;

1475 sig√d 
l⁄
;

1476 
	#DAC1FID17_COURSE_NOT_AVAILABLE
 360

	)

1477 
cour£
;

1478 
£c⁄d
;

1479 
	#DAC1FID17_SPEED_NOT_AVAILABLE
 255

	)

1480 
•ìd
;

1481 } 
èrgës
[4];

1482 } 
dac1fid17
;

1485 
lökage
;

1486 
°©i⁄
[20+1];

1487 sig√d 
l⁄
;

1488 sig√d 
œt
;

1489 
°©us
;

1490 
sig«l
;

1491 
hour
;

1492 
möuã
;

1493 
√xtsig«l
;

1494 } 
dac1fid19
;

1496 
rouã_öfo
 
dac1fid27
;

1499 
lökage
;

1500 
	#AIS_DAC1FID29_TEXT_MAX
 162

	)

1501 
ãxt
[
AIS_DAC1FID29_TEXT_MAX
];

1502 } 
dac1fid29
;

1505 
boﬁ
 
accuøcy
;

1506 
	#DAC1FID31_LATLON_SCALE
 1000

	)

1507 
l⁄
;

1508 
	#DAC1FID31_LON_NOT_AVAILABLE
 (181*60*
DAC1FID31_LATLON_SCALE
)

	)

1509 
œt
;

1510 
	#DAC1FID31_LAT_NOT_AVAILABLE
 (91*60*
DAC1FID31_LATLON_SCALE
)

	)

1511 
day
;

1512 
hour
;

1513 
möuã
;

1514 
w•ìd
;

1515 
wgu°
;

1516 
	#DAC1FID31_WIND_HIGH
 126

	)

1517 
	#DAC1FID31_WIND_NOT_AVAILABLE
 127

	)

1518 
wdú
;

1519 
wgu°dú
;

1520 
	#DAC1FID31_DIR_NOT_AVAILABLE
 360

	)

1521 
aúãmp
;

1522 
	#DAC1FID31_AIRTEMP_NOT_AVAILABLE
 -1024

	)

1523 
	#DAC1FID31_AIRTEMP_DIV
 10.0

	)

1524 
humidôy
;

1525 
	#DAC1FID31_HUMIDITY_NOT_AVAILABLE
 101

	)

1526 
dewpoöt
;

1527 
	#DAC1FID31_DEWPOINT_NOT_AVAILABLE
 501

	)

1528 
	#DAC1FID31_DEWPOINT_DIV
 10.0

	)

1529 
¥essuª
;

1530 
	#DAC1FID31_PRESSURE_NOT_AVAILABLE
 511

	)

1531 
	#DAC1FID31_PRESSURE_HIGH
 402

	)

1532 
	#DAC1FID31_PRESSURE_OFFSET
 -799

	)

1533 
¥essuªãnd
;

1534 
	#DAC1FID31_PRESSURETEND_NOT_AVAILABLE
 3

	)

1535 
boﬁ
 
visgª©î
;

1536 
visibûôy
;

1537 
	#DAC1FID31_VISIBILITY_NOT_AVAILABLE
 127

	)

1538 
	#DAC1FID31_VISIBILITY_DIV
 10.0

	)

1539 
w©îÀvñ
;

1540 
	#DAC1FID31_WATERLEVEL_NOT_AVAILABLE
 4001

	)

1541 
	#DAC1FID31_WATERLEVEL_OFFSET
 1000

	)

1542 
	#DAC1FID31_WATERLEVEL_DIV
 100.0

	)

1543 
Àvñåíd
;

1544 
	#DAC1FID31_WATERLEVELTREND_NOT_AVAILABLE
 3

	)

1545 
c•ìd
;

1546 
	#DAC1FID31_CSPEED_NOT_AVAILABLE
 255

	)

1547 
	#DAC1FID31_CSPEED_DIV
 10.0

	)

1548 
cdú
;

1549 
c•ìd2
;

1550 
cdú2
;

1551 
cdïth2
;

1552 
	#DAC1FID31_CDEPTH_NOT_AVAILABLE
 301

	)

1553 
	#DAC1FID31_CDEPTH_SCALE
 10.0

	)

1554 
c•ìd3
;

1555 
cdú3
;

1556 
cdïth3
;

1557 
waveheight
;

1558 
	#DAC1FID31_HEIGHT_NOT_AVAILABLE
 31

	)

1559 
	#DAC1FID31_HEIGHT_DIV
 10.0

	)

1560 
wavïîiod
;

1561 
	#DAC1FID31_PERIOD_NOT_AVAILABLE
 63

	)

1562 
wavedú
;

1563 
swñlheight
;

1564 
swñÕîiod
;

1565 
swñldú
;

1566 
£a°©e
;

1567 
	#DAC1FID31_SEASTATE_NOT_AVAILABLE
 15

	)

1568 
w©îãmp
;

1569 
	#DAC1FID31_WATERTEMP_NOT_AVAILABLE
 601

	)

1570 
	#DAC1FID31_WATERTEMP_DIV
 10.0

	)

1571 
¥ecùty≥
;

1572 
	#DAC1FID31_PRECIPTYPE_NOT_AVAILABLE
 7

	)

1573 
ßlöôy
;

1574 
	#DAC1FID31_SALINITY_NOT_AVAILABLE
 510

	)

1575 
	#DAC1FID31_SALINITY_DIV
 10.0

	)

1576 
i˚
;

1577 
	#DAC1FID31_ICE_NOT_AVAILABLE
 3

	)

1578 } 
dac1fid31
;

1580 } 
ty≥8
;

1583 
Æt
;

1584 
	#AIS_ALT_NOT_AVAILABLE
 4095

	)

1585 
	#AIS_ALT_HIGH
 4094

	)

1586 
•ìd
;

1587 
	#AIS_SAR_SPEED_NOT_AVAILABLE
 1023

	)

1588 
	#AIS_SAR_FAST_MOVER
 1022

	)

1589 
boﬁ
 
accuøcy
;

1590 
l⁄
;

1591 
œt
;

1592 
cour£
;

1593 
£c⁄d
;

1594 
ªgi⁄Æ
;

1595 
dã
;

1597 
boﬁ
 
assig√d
;

1598 
boﬁ
 
øim
;

1599 
ødio
;

1600 } 
ty≥9
;

1604 
de°_mmsi
;

1606 } 
ty≥10
;

1609 
£qno
;

1610 
de°_mmsi
;

1611 
boﬁ
 
ªå™smô
;

1613 
	#AIS_TYPE12_TEXT_MAX
 157

	)

1614 
ãxt
[
AIS_TYPE12_TEXT_MAX
];

1615 } 
ty≥12
;

1619 
	#AIS_TYPE14_TEXT_MAX
 161

	)

1620 
ãxt
[
AIS_TYPE14_TEXT_MAX
];

1621 } 
ty≥14
;

1625 
mmsi1
;

1626 
ty≥1_1
;

1627 
off£t1_1
;

1629 
ty≥1_2
;

1630 
off£t1_2
;

1632 
mmsi2
;

1633 
ty≥2_1
;

1634 
off£t2_1
;

1636 } 
ty≥15
;

1640 
mmsi1
;

1641 
off£t1
;

1642 
ö¸emít1
;

1643 
mmsi2
;

1644 
off£t2
;

1645 
ö¸emít2
;

1646 } 
ty≥16
;

1650 
	#AIS_GNSS_LATLON_DIV
 600.0

	)

1651 
l⁄
;

1652 
œt
;

1654 
	#AIS_TYPE17_BINARY_MAX
 736

	)

1655 
size_t
 
bôcou¡
;

1656 
bôd©a
[(
AIS_TYPE17_BINARY_MAX
 + 7) / 8];

1657 } 
ty≥17
;

1660 
ª£rved
;

1661 
•ìd
;

1662 
boﬁ
 
accuøcy
;

1663 
l⁄
;

1664 
	#AIS_GNS_LON_NOT_AVAILABLE
 0x1a838

	)

1665 
œt
;

1666 
	#AIS_GNS_LAT_NOT_AVAILABLE
 0xd548

	)

1667 
cour£
;

1668 
hódög
;

1669 
£c⁄d
;

1670 
ªgi⁄Æ
;

1671 
boﬁ
 
cs
;

1672 
boﬁ
 
di•œy
;

1673 
boﬁ
 
dsc
;

1674 
boﬁ
 
b™d
;

1675 
boﬁ
 
msg22
;

1676 
boﬁ
 
assig√d
;

1677 
boﬁ
 
øim
;

1678 
ødio
;

1679 } 
ty≥18
;

1682 
ª£rved
;

1683 
•ìd
;

1684 
boﬁ
 
accuøcy
;

1685 
l⁄
;

1686 
œt
;

1687 
cour£
;

1688 
hódög
;

1689 
£c⁄d
;

1690 
ªgi⁄Æ
;

1692 
shù«me
[
AIS_SHIPNAME_MAXLEN
+1];

1693 
shùty≥
;

1694 
to_bow
;

1695 
to_°în
;

1696 
to_p‹t
;

1697 
to_°¨bﬂrd
;

1698 
ïfd
;

1699 
boﬁ
 
øim
;

1700 
dã
;

1701 
boﬁ
 
assig√d
;

1703 } 
ty≥19
;

1707 
off£t1
;

1708 
numbî1
;

1709 
timeout1
;

1710 
ö¸emít1
;

1711 
off£t2
;

1712 
numbî2
;

1713 
timeout2
;

1714 
ö¸emít2
;

1715 
off£t3
;

1716 
numbî3
;

1717 
timeout3
;

1718 
ö¸emít3
;

1719 
off£t4
;

1720 
numbî4
;

1721 
timeout4
;

1722 
ö¸emít4
;

1723 } 
ty≥20
;

1726 
aid_ty≥
;

1727 
«me
[35];

1728 
boﬁ
 
accuøcy
;

1729 
l⁄
;

1730 
œt
;

1731 
to_bow
;

1732 
to_°în
;

1733 
to_p‹t
;

1734 
to_°¨bﬂrd
;

1735 
ïfd
;

1736 
£c⁄d
;

1737 
boﬁ
 
off_posôi⁄
;

1738 
ªgi⁄Æ
;

1739 
boﬁ
 
øim
;

1740 
boﬁ
 
vútuÆ_aid
;

1741 
boﬁ
 
assig√d
;

1743 } 
ty≥21
;

1747 
ch™√l_a
;

1748 
ch™√l_b
;

1749 
txrx
;

1750 
boﬁ
 
powî
;

1751 
	#AIS_CHANNEL_LATLON_DIV
 600.0

	)

1754 
√_l⁄
;

1755 
√_œt
;

1756 
sw_l⁄
;

1757 
sw_œt
;

1758 } 
¨ó
;

1760 
de°1
;

1761 
de°2
;

1762 } 
mmsi
;

1764 
boﬁ
 
addªs£d
;

1765 
boﬁ
 
b™d_a
;

1766 
boﬁ
 
b™d_b
;

1767 
z⁄esize
;

1768 } 
ty≥22
;

1771 
√_l⁄
;

1772 
√_œt
;

1773 
sw_l⁄
;

1774 
sw_œt
;

1776 
°©i⁄ty≥
;

1777 
shùty≥
;

1779 
txrx
;

1780 
öãrvÆ
;

1781 
quõt
;

1783 } 
ty≥23
;

1786 
shù«me
[
AIS_SHIPNAME_MAXLEN
+1];

1788 
bŸh
,

1789 
∑π_a
,

1790 
∑π_b
,

1791 } 
∑π
;

1792 
shùty≥
;

1793 
víd‹id
[8];

1794 
modñ
;

1795 
£rül
;

1796 
ˇŒsign
[8];

1798 
mŸhîshù_mmsi
;

1800 
to_bow
;

1801 
to_°în
;

1802 
to_p‹t
;

1803 
to_°¨bﬂrd
;

1804 } 
dim
;

1806 } 
ty≥24
;

1809 
boﬁ
 
addªs£d
;

1810 
boﬁ
 
°ru˘uªd
;

1811 
de°_mmsi
;

1812 
≠p_id
;

1813 
	#AIS_TYPE25_BINARY_MAX
 128

	)

1814 
size_t
 
bôcou¡
;

1815 
bôd©a
[(
AIS_TYPE25_BINARY_MAX
 + 7) / 8];

1816 } 
ty≥25
;

1819 
boﬁ
 
addªs£d
;

1820 
boﬁ
 
°ru˘uªd
;

1821 
de°_mmsi
;

1822 
≠p_id
;

1823 
	#AIS_TYPE26_BINARY_MAX
 1004

	)

1824 
size_t
 
bôcou¡
;

1825 
bôd©a
[(
AIS_TYPE26_BINARY_MAX
 + 7) / 8];

1826 
ødio
;

1827 } 
ty≥26
;

1830 
boﬁ
 
accuøcy
;

1831 
boﬁ
 
øim
;

1832 
°©us
;

1833 
	#AIS_LONGRANGE_LATLON_DIV
 600.0

	)

1834 
l⁄
;

1835 
	#AIS_LONGRANGE_LON_NOT_AVAILABLE
 0x1a838

	)

1836 
œt
;

1837 
	#AIS_LONGRANGE_LAT_NOT_AVAILABLE
 0xd548

	)

1838 
•ìd
;

1839 
	#AIS_LONGRANGE_SPEED_NOT_AVAILABLE
 63

	)

1840 
cour£
;

1841 
	#AIS_LONGRANGE_COURSE_NOT_AVAILABLE
 511

	)

1842 
boﬁ
 
gnss
;

1843 } 
ty≥27
;

1848 
	sßãŒôe_t
 {

1849 
ss
;

1850 
boﬁ
 
u£d
;

1851 
PRN
;

1852 
ñev©i⁄
;

1853 
azimuth
;

1856 
	s©tôude_t
 {

1857 
hódög
;

1858 
pôch
;

1859 
rﬁl
;

1860 
yaw
;

1861 
dù
;

1862 
mag_Àn
;

1863 
mag_x
;

1864 
mag_y
;

1865 
mag_z
;

1866 
acc_Àn
;

1867 
acc_x
;

1868 
acc_y
;

1869 
acc_z
;

1870 
gyro_x
;

1871 
gyro_y
;

1872 
ãmp
;

1873 
dïth
;

1875 
mag_°
;

1876 
pôch_°
;

1877 
rﬁl_°
;

1878 
yaw_°
;

1881 
	s«vd©a_t
 {

1882 
vîsi⁄
;

1883 
com∑ss_hódög
;

1884 
com∑ss_devüti⁄
;

1885 
com∑ss_v¨üti⁄
;

1886 
aú_ãmp
;

1887 
aú_¥essuª
;

1888 
w©î_ãmp
;

1889 
dïth
;

1890 
dïth_off£t
;

1891 
wöd_•ìd
;

1892 
wöd_dú
;

1893 
¸os°øck_îr‹
;

1894 
com∑ss_°©us
;

1895 
log_cumuœtive
;

1896 
log_åù
;

1897 
¸os°øck_°©us
;

1900 
	sd›_t
 {

1902 
xd›
, 
yd›
, 
pd›
, 
hd›
, 
vd›
, 
td›
, 
gd›
;

1905 
	søwd©a_t
 {

1907 
codïha£
[
MAXCHANNELS
];

1908 
ˇºõΩha£
[
MAXCHANNELS
];

1909 
p£ud‹™ge
[
MAXCHANNELS
];

1910 
dñèønge
[
MAXCHANNELS
];

1911 
d›∂î
[
MAXCHANNELS
];

1912 
mtime
[
MAXCHANNELS
];

1913 
ßt°©
[
MAXCHANNELS
];

1914 
	#SAT_ACQUIRED
 0x01

	)

1915 
	#SAT_CODE_TRACK
 0x02

	)

1916 
	#SAT_CARR_TRACK
 0x04

	)

1917 
	#SAT_DATA_SYNC
 0x08

	)

1918 
	#SAT_FRAME_SYNC
 0x10

	)

1919 
	#SAT_EPHEMERIS
 0x20

	)

1920 
	#SAT_FIX_USED
 0x40

	)

1923 
	svîsi⁄_t
 {

1924 
ªÀa£
[64];

1925 
ªv
[64];

1926 
¥Ÿo_maj‹
, 
¥Ÿo_mö‹
;

1927 
ªmŸe
[
GPS_PATH_MAX
];

1930 
	sdevc⁄fig_t
 {

1931 
∑th
[
GPS_PATH_MAX
];

1932 
Êags
;

1933 
	#SEEN_GPS
 0x01

	)

1934 
	#SEEN_RTCM2
 0x02

	)

1935 
	#SEEN_RTCM3
 0x04

	)

1936 
	#SEEN_AIS
 0x08

	)

1937 
drivî
[64];

1938 
subty≥
[64];

1939 
a˘iv©ed
;

1940 
baudøã
, 
°›bôs
;

1941 
∑rôy
;

1942 
cy˛e
, 
möcy˛e
;

1943 
drivî_mode
;

1946 
	spﬁicy_t
 {

1947 
boﬁ
 
w©chî
;

1948 
boﬁ
 
js⁄
;

1949 
boﬁ
 
nmó
;

1950 
øw
;

1951 
boﬁ
 
sˇÀd
;

1952 
boﬁ
 
timög
;

1953 
boﬁ
 
•lô24
;

1954 
boﬁ
 
µs
;

1955 
logÀvñ
;

1956 
dev∑th
[
GPS_PATH_MAX
];

1957 
ªmŸe
[
GPS_PATH_MAX
];

1960 #i‚de‡
TIMEDELTA_DEFINED


1961 
	#TIMEDELTA_DEFINED


	)

1963 
	stimedñè_t
 {

1964 
time•ec
 
ªÆ
;

1965 
time•ec
 
˛ock
;

1969 
	soscûœt‹_t
 {

1970 
boﬁ
 
ru¬ög
;

1971 
boﬁ
 
ª„ªn˚
;

1972 
boﬁ
 
discùlöed
;

1973 
dñè
;

1982 
	tsockë_t
;

1983 
	#BAD_SOCKET
(
s
Ë((sË=-1)

	)

1984 
	#INVALIDATE_SOCKET
(
s
Ëdÿ{ s = -1; } 0)

	)

1987 
	#WATCH_ENABLE
 0x000001u

	)

1988 
	#WATCH_DISABLE
 0x000002u

	)

1989 
	#WATCH_JSON
 0x000010u

	)

1990 
	#WATCH_NMEA
 0x000020u

	)

1991 
	#WATCH_RARE
 0x000040u

	)

1992 
	#WATCH_RAW
 0x000080u

	)

1993 
	#WATCH_SCALED
 0x000100u

	)

1994 
	#WATCH_TIMING
 0x000200u

	)

1995 
	#WATCH_DEVICE
 0x000800u

	)

1996 
	#WATCH_SPLIT24
 0x001000u

	)

1997 
	#WATCH_PPS
 0x002000u

	)

1998 
	#WATCH_NEWSTYLE
 0x010000u

	)

2004 
	sgps_d©a_t
 {

2005 
gps_mask_t
 
£t
;

2006 
	#ONLINE_SET
 (1Œu<<1)

	)

2007 
	#TIME_SET
 (1Œu<<2)

	)

2008 
	#TIMERR_SET
 (1Œu<<3)

	)

2009 
	#LATLON_SET
 (1Œu<<4)

	)

2010 
	#ALTITUDE_SET
 (1Œu<<5)

	)

2011 
	#SPEED_SET
 (1Œu<<6)

	)

2012 
	#TRACK_SET
 (1Œu<<7)

	)

2013 
	#CLIMB_SET
 (1Œu<<8)

	)

2014 
	#STATUS_SET
 (1Œu<<9)

	)

2015 
	#MODE_SET
 (1Œu<<10)

	)

2016 
	#DOP_SET
 (1Œu<<11)

	)

2017 
	#HERR_SET
 (1Œu<<12)

	)

2018 
	#VERR_SET
 (1Œu<<13)

	)

2019 
	#ATTITUDE_SET
 (1Œu<<14)

	)

2020 
	#SATELLITE_SET
 (1Œu<<15)

	)

2021 
	#SPEEDERR_SET
 (1Œu<<16)

	)

2022 
	#TRACKERR_SET
 (1Œu<<17)

	)

2023 
	#CLIMBERR_SET
 (1Œu<<18)

	)

2024 
	#DEVICE_SET
 (1Œu<<19)

	)

2025 
	#DEVICELIST_SET
 (1Œu<<20)

	)

2026 
	#DEVICEID_SET
 (1Œu<<21)

	)

2027 
	#RTCM2_SET
 (1Œu<<22)

	)

2028 
	#RTCM3_SET
 (1Œu<<23)

	)

2029 
	#AIS_SET
 (1Œu<<24)

	)

2030 
	#PACKET_SET
 (1Œu<<25)

	)

2031 
	#SUBFRAME_SET
 (1Œu<<26)

	)

2032 
	#GST_SET
 (1Œu<<27)

	)

2033 
	#VERSION_SET
 (1Œu<<28)

	)

2034 
	#POLICY_SET
 (1Œu<<29)

	)

2035 
	#LOGMESSAGE_SET
 (1Œu<<30)

	)

2036 
	#ERROR_SET
 (1Œu<<31)

	)

2037 
	#TOFF_SET
 (1Œu<<32Ë

	)

2038 
	#PPS_SET
 (1Œu<<33)

	)

2039 
	#NAVDATA_SET
 (1Œu<<34)

	)

2040 
	#OSCILLATOR_SET
 (1Œu<<35)

	)

2041 
	#UBX_PVT_SET
 (1Œu<<36Ë

	)

2042 
	#SET_HIGH_BIT
 37

	)

2043 
time°amp_t
 
⁄löe
;

2053 #i‚de‡
USE_QT


2054 
sockë_t
 
gps_fd
;

2056 * 
gps_fd
;

2058 
gps_fix_t
 
fix
;

2061 
£∑øti⁄
;

2064 
°©us
;

2065 
	#STATUS_NO_FIX
 0

	)

2066 
	#STATUS_FIX
 1

	)

2067 
	#STATUS_DGPS_FIX
 2

	)

2069 
	#STATUS_FLOAT_RTK
 5

	)

2070 
	#STATUS_FIX_RTK
 4

	)

2073 
ßãŒôes_u£d
;

2074 
d›_t
 
d›
;

2077 
ïe
;

2080 
time°amp_t
 
skyvõw_time
;

2081 
ßãŒôes_visibÀ
;

2082 
ßãŒôe_t
 
skyvõw
[
MAXCHANNELS
];

2084 
devc⁄fig_t
 
dev
;

2086 
pﬁicy_t
 
pﬁicy
;

2089 
time°amp_t
 
time
;

2090 
ndevi˚s
;

2091 
devc⁄fig_t
 
li°
[
MAXUSERDEVS
];

2092 } 
devi˚s
;

2095 
	#UNION_SET
 (
RTCM2_SET
|
RTCM3_SET
|
SUBFRAME_SET
|
AIS_SET
|
ATTITUDE_SET
|
GST_SET
|
OSCILLATOR_SET
|
VERSION_SET
|
LOGMESSAGE_SET
|
ERROR_SET
|
TOFF_SET
|
PPS_SET
)

	)

2098 
πcm2_t
 
πcm2
;

2099 
πcm3_t
 
πcm3
;

2100 
sub‰ame_t
 
sub‰ame
;

2101 
ais_t
 
ais
;

2102 
©tôude_t
 
©tôude
;

2103 
«vd©a_t
 
«vd©a
;

2104 
øwd©a_t
 
øw
;

2105 
g°_t
 
g°
;

2106 
oscûœt‹_t
 
osc
;

2108 
vîsi⁄_t
 
vîsi⁄
;

2109 
îr‹
[256];

2110 
timedñè_t
 
toff
;

2111 
timedñè_t
 
µs
;

2112 
ubx_«v_pvt_t
 
pvt
;

2117 *
¥ivd©a
;

2121 
gps_›í
(const *, const *,

2122 
gps_d©a_t
 *);

2123 
gps_˛o£
(
gps_d©a_t
 *);

2124 
gps_£nd
(
gps_d©a_t
 *, const *, ... );

2125 
gps_ªad
(
gps_d©a_t
 *);

2126 
gps_u≈ack
(*, 
gps_d©a_t
 *);

2127 
boﬁ
 
gps_waôög
(c⁄° 
gps_d©a_t
 *, );

2128 
gps_°ªam
(
gps_d©a_t
 *, , *);

2129 
gps_maölo›
(
gps_d©a_t
 *, ,

2130 (*)(
gps_d©a_t
 *));

2131 c⁄° *
gps_d©a
(c⁄° 
gps_d©a_t
 *);

2132 c⁄° *
gps_îr°r
(const );

2134 
js⁄_toff_ªad
(c⁄° *
buf
, 
gps_d©a_t
 *,

2136 
js⁄_µs_ªad
(c⁄° *
buf
, 
gps_d©a_t
 *,

2138 
js⁄_oscûœt‹_ªad
(c⁄° *
buf
, 
gps_d©a_t
 *,

2143 
libgps_åa˚
(
îæevñ
, const *, ...);

2145 
gps_˛ór_fix
(
gps_fix_t
 *);

2146 
gps_˛ór_d›
–
d›_t
 *);

2147 
gps_mîge_fix
(
gps_fix_t
 *, 
gps_mask_t
, gps_fix_t *);

2148 
gps_íabÀ_debug
(, 
FILE
 *);

2149 c⁄° *
gps_maskdump
(
gps_mask_t
);

2151 
ß„_©of
(const *);

2152 
time_t
 
mkgmtime
(
tm
 *);

2153 
time°amp_t
 
time°amp
();

2154 
time°amp_t
 
iso8601_to_unix
(*);

2155 *
unix_to_iso8601
(
time°amp_t
 
t
, [], 
size_t
 
Àn
);

2156 
óπh_di°™˚
(, , , );

2157 
óπh_di°™˚_™d_bórögs
(, , , ,

2160 
wgs84_£∑øti⁄
(, );

2163 
	#METERS_TO_FEET
 3.2808399

	)

2164 
	#METERS_TO_MILES
 0.00062137119

	)

2165 
	#METERS_TO_FATHOMS
 0.54680665

	)

2166 
	#KNOTS_TO_MPH
 1.1507794

	)

2167 
	#KNOTS_TO_KPH
 1.852

	)

2168 
	#KNOTS_TO_MPS
 0.51444444

	)

2169 
	#MPS_TO_KPH
 3.6

	)

2170 
	#MPS_TO_MPH
 2.2369363

	)

2171 
	#MPS_TO_KNOTS
 1.9438445

	)

2175 
	#GPS_PI
 3.1415926535897932384626433832795029

	)

2176 
	#RAD_2_DEG
 57.2957795130823208767981548141051703

	)

2177 
	#DEG_2_RAD
 0.0174532925199432957692369076848861271

	)

2180 
	#WGS84A
 6378137

	)

2181 
	#WGS84F
 298.257223563

	)

2182 
	#WGS84B
 6356752.3142

	)

2185 
	#NL_NOSERVICE
 -1

	)

2186 
	#NL_NOHOST
 -2

	)

2187 
	#NL_NOPROTO
 -3

	)

2188 
	#NL_NOSOCK
 -4

	)

2189 
	#NL_NOSOCKOPT
 -5

	)

2190 
	#NL_NOCONNECT
 -6

	)

2191 
	#SHM_NOSHARED
 -7

	)

2192 
	#SHM_NOATTACH
 -8

	)

2193 
	#DBUS_FAILURE
 -9

	)

2195 
	#DEFAULT_GPSD_PORT
 "2947"

	)

2196 
	#DEFAULT_RTCM_PORT
 "2101"

	)

2199 
	#GPSD_SHARED_MEMORY
 "sh¨ed mem‹y"

	)

2200 
	#GPSD_DBUS_EXPORT
 "DBUSÉxp‹t"

	)

2202 #ifde‡
__˝lu•lus


	@/media/sf_Source/200104_Application_source/PAR/src/msgQ.c

1 
	~<sig«l.h
>

2 
	~<msgQ.h
>

3 
	~<sys/ty≥s.h
>

4 
	~<sys/ùc.h
>

5 
	~<sys/msg.h
>

6 
	~<PAR.h
>

10 
mqd_t
 
	gªcvFD
, 
	g£ndFD
;

11 
msgQ_ñem_‰ame
 *
	gªcvPkt
 = 
NULL
;

12 
msgQ_ñem_‰ame
 *
	g£ndPkt
 = 
NULL
;

13 
uöt32_t
 
	gmsgqC¡
 = 0;

15 
	$öôMQ
()

17 if(
g_mib
.
›
 =
›RX
)

20 
ªcvPkt
 = (
msgQ_ñem_‰ame
 *)
	`ˇŒoc
(1, (msgQ_elem_frame));

21 if–
ªcvPkt
 =
NULL
 )

24 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR] FailÅoállocate memory forÑeceiveÖacket message queue.\n");

28 
ªcvFD
 = 
	`msggë
((
key_t
)
KEY_SEND_PAR
, 
IPC_CREAT
 | 0666);

29 i‡(
ªcvFD
 < 0)

32 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR] msggëÉº‹ : %s", 
	`°ªº‹
(
î∫o
));

33 
	`‰ì
(
ªcvPkt
);

37 if(
g_mib
.
›
 =
›TX
)

40 
£ndPkt
 = (
msgQ_ñem_‰ame
 *)
	`ˇŒoc
(1, (msgQ_elem_frame));

41 if–
£ndPkt
 =
NULL
 )

44 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR] FailÅoállocate memory for sendÖacket message queue.\n");

48 
£ndFD
 = 
	`msggë
((
key_t
)
KEY_SEND_J2735
, 
IPC_CREAT
 | 0666);

49 i‡(
£ndFD
 < 0)

52 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR] msggëÉº‹ : %s", 
	`°ªº‹
(
î∫o
));

53 
	`‰ì
(
£ndPkt
);

59 
	}
}

71 
	$ªÀa£MQ
()

73 if(
g_mib
.
›
 =
›RX
)

76 
	`mq_˛o£
(
ªcvFD
);

78 
	`‰ì
(
ªcvPkt
);

80 if(
g_mib
.
›
 =
›TX
)

83 
	`mq_˛o£
(
£ndFD
);

85 
	`‰ì
(
£ndPkt
);

87 
	}
}

89 
	$ªcvMQ
(*
pkt
)

91 
˙t
 = 0;

92 
	`mem£t
(
ªcvPkt
->
msg
.msg, 0,ÑecvPkt->msg.
msg_Àn
);

95 if–
	`msgrcv
(
ªcvFD
, (*)
ªcvPkt
, (
msgQ_ñem_‰ame
) - (), 1, 0) == -1 )

98 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR] MQÑe˚ivêîr‹ : %s", 
	`°ªº‹
(
î∫o
));

103 
˙t
++;

105 i‡(
g_mib
.
dbg
)

111 
	`mem˝y
(
pkt
, 
ªcvPkt
->
msg
.msg,ÑecvPkt->msg.
msg_Àn
);

114  
ªcvPkt
->
msg
.
msg_Àn
;

115 
	}
}

117 
	$£ndMQ
(
uöt8_t
 *
pPkt
, 
uöt32_t
 
Àn
)

119 
˙t
 = 0;

120 
ªsu…
;

121 
	`mem£t
(
£ndPkt
->
msg
.msg, 0, sídPkt->msg.
msg_Àn
);

122 
£ndPkt
->
msg
.
msg_Àn
 = 
Àn
;

123 
	`mem˝y
(
£ndPkt
->
msg
.msg, 
pPkt
, 
Àn
);

125 
£ndPkt
->
rxC¡
 = 
msgqC¡
++;

126 
£ndPkt
->
msgty≥
 = 1;

129 
ªsu…
 = 
	`msg¢d
–
£ndFD
, (*)
£ndPkt
, (
msgQ_ñem_‰ame
Ë- (), 
IPC_NOWAIT
);

130 if–
ªsu…
 < 0 )

133 
	`sy¶og
(
LOG_ERR
 | 
LOG_LOCAL5
, "[PAR] MQ sídÉº‹ : %s", 
	`°ªº‹
(
î∫o
));

137 
˙t
++;

138 i‡(
g_mib
.
dbg
)

145 
	`sy¶og
(
LOG_INFO
 | 
LOG_LOCAL4
, "[PAR] %dth MQ síd(%d ByãË\n", 
˙t
, 
£ndPkt
->
msg
.
msg_Àn
);

148 
	}
}

	@/media/sf_Source/200104_Application_source/PAR/src/msgQ.h

1 #i‚de‡
_CNVC_MSGQ_H_


2 
	#_CNVC_MSGQ_H_


	)

8 
	~<f˙é.h
>

9 
	~<sys/°©.h
>

10 
	~<mqueue.h
>

11 
	~<°döt.h
>

12 
	~<î∫o.h
>

18 
	#KEY_RECV_J2735
 1716

	)

19 
	#KEY_SEND_J2735
 1717

	)

20 
	#KEY_SEND_PAR
 1718

	)

21 
	#MSGMAX
 4096

	)

23 
	emsgTy≥
 {

24 
	mmsgq_msgty≥_mesßge‰ame
,

25 }
	tMSGQ_MSGTYPE
;

27 
	smsgq_msg


29 
uöt32_t
 
	mmsg_Àn
;

30 
uöt8_t
 
	mmsg
[
MSGMAX
];

31 }
	tMSGQ_MSG
;

33 
	smsgQ_ñem_‰ame


35 
	mmsgty≥
;

36 
uöt32_t
 
	mrxC¡
;

37 
MSGQ_MSG
 
	mmsg
;

41 
mq_©å
 
	g˙_MQ_©å
 = {
O_NONBLOCK
, 10, (
msgQ_ñem_‰ame
), 0};

45 
öôMQ
();

46 
ªÀa£MQ
();

47 
ªcvMQ
(*
pkt
);

48 
£ndMQ
(
uöt8_t
 *
pPkt
, 
uöt32_t
 
Àn
);

	@/media/sf_Source/200104_Application_source/PAR/src/options.c

20 
	~<PAR.h
>

21 
	~<gë›t.h
>

29 c⁄° *
	g›tSå
 = "a:t:c:r:l:L:i:b:h";

42 
	$ußge
(*
cmd
) {

43 
	`¥ötf
("Ußge: %†[OPTIONS]\n\n", 
cmd
);

45 
	`¥ötf
("\nMANDATORY: \n");

46 
	`¥ötf
(" -a <action> set Action\n");

47 
	`¥ötf
("Ñx :Ñeceive only\n");

48 
	`¥ötf
("Åx :Åransmit only\n");

53 
	`¥ötf
("\nOPTIONS: \n");

54 
	`¥ötf
(" -a <action> set Action\n");

55 
	`¥ötf
("Ñx :Ñeceive only\n");

56 
	`¥ötf
("Åx :Åransmit only\n");

57 
	`¥ötf
(" -t <Interval> <TX : usec> ifÇot set, Interval : 10000usec\n");

58 
	`¥ötf
(" <RX : usec> ifÇot set, Interval : 1000000usec\n");

59 
	`¥ötf
(" -c <Cycle> <Only RX : msec> ifÇot set, Cycle : 10msec\n");

60 
	`¥ötf
(" -r <RSUID> indicate RSUID\n");

61 
	`¥ötf
(" -l <Latitude> indicate Latitude\n");

62 
	`¥ötf
(" -L <Longitude> indicate Longitude\n");

64 
	`¥ötf
(" -i <Information> Indicate Information\n");

65 
	`¥ötf
(" -báctivate debug message output\n");

66 
	`¥ötf
(" -h Print usage\n");

68 
	`¥ötf
("\nExample usage\n");

70 
	`¥ötf
(" Rx : %†-®rx -à1000000 -¯10 -b 1\n", 
cmd
);

71 
	`¥ötf
(" Tx : %†-®tx -à10000 -∏1 -b 1\n", 
cmd
);

72 
	`¥ötf
("\n");

73 
	}
}

90 
öt32_t
 
	$P¨sögO±i⁄s
(
öt32_t
 
¨gc
, *
¨gv
[])

92 
öt32_t
 
›t
;

93 
boﬁ
 
a˘i⁄S≥cifõd
 = 
Ál£
;

98 (
›t
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
›tSå
)) != -1) {

100 
›t
) {

102 if(!
	`°∫cmp
(
›èrg
, "rx", 2))

103 
g_mib
.
›
 = 
›RX
;

104 if(!
	`°∫cmp
(
›èrg
, "tx", 2))

105 
g_mib
.
›
 = 
›TX
;

107 
	`¥ötf
("InvÆidá˘i⁄ - %s\n", 
›èrg
);

110 
a˘i⁄S≥cifõd
 = 
åue
;

114 
g_mib
.
öãrvÆ
 = (
uöt32_t
)
	`°πoul
(
›èrg
, 
NULL
, 10);

117 
g_mib
.
cy˛e
 = (
uöt32_t
)
	`°πoul
(
›èrg
, 
NULL
, 10);

120 
g_mib
.
rsuID
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

124 
g_mib
.
L©ôude
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

128 
g_mib
.
L⁄gôude
 = 
	`°πoul
(
›èrg
, 
NULL
, 10);

131 
g_mib
.
Inf‹m©i⁄
 = 
	`°πoul
(
›èrg
, 
NULL
,10);

140 
g_mib
.
dbg
 = (
uöt32_t
)
	`°πoul
(
›èrg
, 
NULL
, 10);

144 
	`ußge
(
¨gv
[0]);

156 if(!
a˘i⁄S≥cifõd
) {

157 
	`¥ötf
("Noáction specified\n");

158 
	`ußge
(
¨gv
[0]);

169 
	}
}

182 
	$PrötO±i⁄s
()

184 
	`¥ötf
("Parameter \n\n");

185 if(
g_mib
.
›
 =
›RX
){

186 
	`¥ötf
("op : RX\n");

188 if(
g_mib
.
öãrvÆ
 !=0)

190 
	`¥ötf
("Timî I¡îvÆ : %du£c\n", 
g_mib
.
öãrvÆ
);

193 if(
g_mib
.
cy˛e
 !=0)

195 
	`¥ötf
("Cy˛ê: %dm£c\n",
g_mib
.
cy˛e
);

198 
	`¥ötf
("dbg : %d\n",
g_mib
.
dbg
);

202 
	`¥ötf
("op : TX\n");

203 
	`¥ötf
("RSUID : %d\n", 
g_mib
.
rsuID
);

204 if(
g_mib
.
öãrvÆ
 != 0)

206 
	`¥ötf
("I¡îvÆ : %dm£c\n", 
g_mib
.
öãrvÆ
);

208 
	`¥ötf
("dbg : %d\n", 
g_mib
.
dbg
);

210 
	}
}

	@/media/sf_Source/200104_Application_source/PAR/src/shm.c

5 
	~<sys/ùc.h
>

6 
	~<sys/shm.h
>

7 
	~<°rög.h
>

8 
	~<î∫o.h
>

14 
	~<shm.h
>

70 
öt32_t
 
	$InôShm
(* 
shmid
, **
shmPå
)

72 
	`¥ötf
("Initializing shared memory\n");

77 *
shmid
 = 
	`shmgë
((
key_t
)
GPSD_CHECK_KEY
, (
boﬁ
), 0666 | 
IPC_CREAT
);

78 if(*
shmid
 == -1)

80 
	`¥ötf
("FaûÅÿ¸óã sh¨ed mem‹y: %s\n", 
	`°ªº‹
(
î∫o
));

88 *
shmPå
 = (*)
	`shm©
(*
shmid
, 
NULL
, 0);

89 if(*
shmPå
 == (*)-1)

91 
	`¥ötf
("FaûÅÿ©èch sh¨ed mem‹y: %s\n", 
	`°ªº‹
(
î∫o
));

99 
	`mem£t
(*
shmPå
, 0, (
boﬁ
));

102 
	`¥ötf
("SuccessÅo initialize shared memory\n");

104 
	}
}

119 
öt32_t
 
	$Rñó£Shm
(*
shmPå
)

121 
	`¥ötf
("Releasing shared memory\n");

123 if(!
shmPå
)

125 
	`¥ötf
("Null shared memoryÖointer");

129 i‡(-1 =
	`shmdt
(
shmPå
))

131 
	`¥ötf
("FaûÅÿdëach sh¨ed mem‹y: %s\n", 
	`°ªº‹
(
î∫o
));

134 
	`¥ötf
("SuccessÅo detach shared memory\n");

137 
	}
}

	@/media/sf_Source/200104_Application_source/PAR/src/shm.h

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<°dboﬁ.h
>

4 
	~<sys/shm.h
>

6 
	#GPSD_CHECK_KEY
 1617

	)

9 
öt32_t
 
InôShm
(* 
shmid
, **
shmPå
);

10 
öt32_t
 
Rñó£Shm
(*
shmPå
);

	@/media/sf_Source/200104_Application_source/PAR/src/timer.c

38 
	~<PAR.h
>

41 
TxTimîExpúed
(
sigvÆ
 
¨g
);

50 
	$InôTxTimî
(c⁄° 
uöt32_t
 
öãrvÆ
)

52 
ªt
;

53 
ôimî•ec
 
ts
;

54 
sigevít
 
£
;

56 
	`¥ötf
("InôülizögÅxÅimî - i¡îvÆ: %uu£c\n", 
öãrvÆ
);

61 
£
.
sigev_nŸify
 = 
SIGEV_THREAD
;

62 
£
.
sigev_vÆue
.
sivÆ_±r
 = &
g_mib
.
timî
;

63 
£
.
sigev_nŸify_fun˘i⁄
 = 
TxTimîExpúed
 ;

64 
£
.
sigev_nŸify_©åibuãs
 = 
NULL
;

66 
ts
.
ô_vÆue
.
tv_£c
 = 0;

67 
ts
.
ô_vÆue
.
tv_n£c
 = 1000000;

68 
ts
.
ô_öãrvÆ
.
tv_£c
 = 
öãrvÆ
 / 1000000;

69 
ts
.
ô_öãrvÆ
.
tv_n£c
 = (
öãrvÆ
 % 1000000) * 1000;

74 
ªt
 = 
	`timî_¸óã
(
CLOCK_REALTIME
, &
£
, &
g_mib
.
timî
);

75 i‡(
ªt
) {

76 
	`≥º‹
("FailÅo cerateÅimer: ");

83 
ªt
 = 
	`timî_£âime
(
g_mib
.
timî
, 0, &
ts
, 0);

84 i‡(
ªt
) {

85 
	`≥º‹
("FailÅo setÅimer: ");

89 
	`¥ötf
("SuccessÅo initializeÅxÅimer.\n");

91 
	}
}

97 
	$TxTimîExpúed
(
sigvÆ
 
¨g
)

99 
	`±hªad_muãx_lock
(&
g_mib
.
txMtx
);

100 
	`±hªad_c⁄d_sig«l
(&
g_mib
.
txC⁄d
);

102 
	`±hªad_muãx_u∆ock
(&
g_mib
.
txMtx
);

103 
	}
}

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

77 
	~<bôs/°©.h
>

79 
	#S_IFMT
 
__S_IFMT


	)

80 
	#S_IFDIR
 
__S_IFDIR


	)

81 
	#S_IFCHR
 
__S_IFCHR


	)

82 
	#S_IFBLK
 
__S_IFBLK


	)

83 
	#S_IFREG
 
__S_IFREG


	)

84 #ifde‡
__S_IFIFO


85 
	#S_IFIFO
 
__S_IFIFO


	)

87 #ifde‡
__S_IFLNK


88 
	#S_IFLNK
 
__S_IFLNK


	)

90 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


91 
	#S_IFSOCK
 
__S_IFSOCK


	)

96 
	#S_ISUID
 
__S_ISUID


	)

97 
	#S_ISGID
 
__S_ISGID


	)

99 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


101 
	#S_ISVTX
 
__S_ISVTX


	)

104 
	#S_IRUSR
 
__S_IREAD


	)

105 
	#S_IWUSR
 
__S_IWRITE


	)

106 
	#S_IXUSR
 
__S_IEXEC


	)

108 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

110 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

111 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

112 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

114 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

116 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

117 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

118 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

120 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

123 #ifdef 
__USE_MISC


124 #i‚de‡
R_OK


127 
	#R_OK
 4

	)

128 
	#W_OK
 2

	)

129 
	#X_OK
 1

	)

130 
	#F_OK
 0

	)

135 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


136 
	#SEEK_SET
 0

	)

137 
	#SEEK_CUR
 1

	)

138 
	#SEEK_END
 2

	)

146 
f˙é
 (
__fd
, 
__cmd
, ...);

155 #i‚de‡
__USE_FILE_OFFSET64


156 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

158 #ifde‡
__REDIRECT


159 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

160 
	`__n⁄nuŒ
 ((1));

162 
	#›í
 
›í64


	)

165 #ifde‡
__USE_LARGEFILE64


166 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

169 #ifde‡
__USE_ATFILE


179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

181 
	`__n⁄nuŒ
 ((2));

183 #ifde‡
__REDIRECT


184 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

185 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

187 
	#›í©
 
›í©64


	)

190 #ifde‡
__USE_LARGEFILE64


191 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

192 
	`__n⁄nuŒ
 ((2));

201 #i‚de‡
__USE_FILE_OFFSET64


202 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

204 #ifde‡
__REDIRECT


205 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

206 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

208 
	#¸ót
 
¸ót64


	)

211 #ifde‡
__USE_LARGEFILE64


212 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

215 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

216 && !
deföed
 
__USE_POSIX
))

225 
	#F_ULOCK
 0

	)

226 
	#F_LOCK
 1

	)

227 
	#F_TLOCK
 2

	)

228 
	#F_TEST
 3

	)

230 #i‚de‡
__USE_FILE_OFFSET64


231 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

233 #ifde‡
__REDIRECT


234 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

236 
	#lockf
 
lockf64


	)

239 #ifde‡
__USE_LARGEFILE64


240 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

244 #ifde‡
__USE_XOPEN2K


247 #i‚de‡
__USE_FILE_OFFSET64


248 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

249 
__advi£
Ë
__THROW
;

251 #ifde‡
__REDIRECT_NTH


252 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

253 
__off64_t
 
__Àn
, 
__advi£
),

254 
posix_Ádvi£64
);

256 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

259 #ifde‡
__USE_LARGEFILE64


260 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

261 
__advi£
Ë
__THROW
;

269 #i‚de‡
__USE_FILE_OFFSET64


270 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

272 #ifde‡
__REDIRECT


273 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

274 
__off64_t
 
__Àn
),

275 
posix_ÁŒoˇã64
);

277 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

280 #ifde‡
__USE_LARGEFILE64


281 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

287 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

288 && 
deföed
 
__va_¨g_∑ck_Àn


289 
	~<bôs/f˙é2.h
>

292 
__END_DECLS


	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/m©h-ve˘‹.h
>

35 
	~<bôs/huge_vÆ.h
>

36 #ifde‡
__USE_ISOC99


37 
	~<bôs/huge_vÆf.h
>

38 
	~<bôs/huge_vÆl.h
>

41 
	~<bôs/öf.h
>

44 
	~<bôs/«n.h
>

48 
	~<bôs/m©hdef.h
>

55 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

57 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

58 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

59 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

61 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

62 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

63 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

65 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

66 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

67 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

68 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

69 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

70 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

71 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

72 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

73 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

74 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

75 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

76 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

78 
	#_MdoubÀ_
 

	)

79 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

80 
	#__MATH_DECLARING_DOUBLE
 1

	)

81 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

82 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

83 
	~<bôs/m©hˇŒs.h
>

84 #unde‡
_MdoubÀ_


85 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


86 #unde‡
_MdoubÀ_END_NAMESPACE


87 #unde‡
__MATH_PRECNAME


88 #unde‡
__MATH_DECLARING_DOUBLE


90 #ifde‡
__USE_ISOC99


96 #i‚de‡
_MÊﬂt_


97 
	#_MÊﬂt_
 

	)

99 
	#_MdoubÀ_
 
_MÊﬂt_


	)

100 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

101 
	#__MATH_DECLARING_DOUBLE
 0

	)

102 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

103 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

104 
	~<bôs/m©hˇŒs.h
>

105 #unde‡
_MdoubÀ_


106 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


107 #unde‡
_MdoubÀ_END_NAMESPACE


108 #unde‡
__MATH_PRECNAME


109 #unde‡
__MATH_DECLARING_DOUBLE


111 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

112 || 
deföed
 
__LDBL_COMPAT
 \

113 || 
deföed
 
_LIBC_TEST


114 #ifde‡
__LDBL_COMPAT


116 #ifde‡
__USE_ISOC99


117 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

118 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

119 #ifde‡
__REDIRECT_NTH


120 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

121 
__∆dbl_√xâow¨df
)

122 
	`__©åibuã__
 ((
__c⁄°__
));

123 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

124 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

125 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

126 (
__x
, 
__y
),

127 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

131 #unde‡
__MATHDECL_1


132 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

133 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

134 
¨gs
, 
Æüs
)

	)

135 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

136 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

142 #i‚de‡
_Ml⁄g_doubÀ_


143 
	#_Ml⁄g_doubÀ_
 

	)

145 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

146 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

147 
	#__MATH_DECLARING_DOUBLE
 0

	)

148 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

149 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

150 
	#__MATH_DECLARE_LDOUBLE
 1

	)

151 
	~<bôs/m©hˇŒs.h
>

152 #unde‡
_MdoubÀ_


153 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


154 #unde‡
_MdoubÀ_END_NAMESPACE


155 #unde‡
__MATH_PRECNAME


156 #unde‡
__MATH_DECLARING_DOUBLE


161 #unde‡
__MATHDECL_1


162 #unde‡
__MATHDECL


163 #unde‡
__MATHCALL


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


168 
signgam
;

173 #ifde‡
__USE_ISOC99


211 
FP_NAN
 =

212 
	#FP_NAN
 0

	)

213 
FP_NAN
,

214 
FP_INFINITE
 =

215 
	#FP_INFINITE
 1

	)

216 
FP_INFINITE
,

217 
FP_ZERO
 =

218 
	#FP_ZERO
 2

	)

219 
FP_ZERO
,

220 
FP_SUBNORMAL
 =

221 
	#FP_SUBNORMAL
 3

	)

222 
FP_SUBNORMAL
,

223 
FP_NORMAL
 =

224 
	#FP_NORMAL
 4

	)

225 
FP_NORMAL


233 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

234 && !
deföed
 
__OPTIMIZE_SIZE__


235 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

236 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

237 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


238 
	#Â˛assify
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

241 
	#Â˛assify
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__Â˛assifyf
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

249 #i‡
	`__GNUC_PREREQ
 (4,0)

250 
	#signbô
(
x
) \

251 ( (
x
) ==  () \

252 ? 
	`__buûtö_signbôf
 (
x
) \

253 :  (
x
) ==  () \

254 ? 
	`__buûtö_signbô
 (
x
Ë: 
	`__buûtö_signbôl
 (x))

	)

256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
	#signbô
(
x
) \

258 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

260 
	#signbô
(
x
) \

261 ( (
x
) ==  () \

262 ? 
	`__signbôf
 (
x
) \

263 :  (
x
) ==  () \

264 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

269 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


270 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

271 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


272 
	#isföôe
(
x
) \

273 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

275 
	#isföôe
(
x
) \

276 ( (
x
) ==  () \

277 ? 
	`__föôef
 (
x
) \

278 :  (
x
) ==  () \

279 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

283 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


284 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

286 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

291 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


292 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

293 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


294 
	#i¢™
(
x
) \

295 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

297 
	#i¢™
(
x
) \

298 ( (
x
) ==  () \

299 ? 
	`__i¢™f
 (
x
) \

300 :  (
x
) ==  () \

301 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

305 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


306 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

307 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


308 
	#isöf
(
x
) \

309 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

311 
	#isöf
(
x
) \

312 ( (
x
) ==  () \

313 ? 
	`__isöff
 (
x
) \

314 :  (
x
) ==  () \

315 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

319 
	#MATH_ERRNO
 1

	)

320 
	#MATH_ERREXCEPT
 2

	)

325 #i‚de‡
__FAST_MATH__


326 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

331 #ifde‡
__USE_GNU


333 #ifde‡
__NO_LONG_DOUBLE_MATH


334 
	#issig«lög
(
x
) \

335 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

337 
	#issig«lög
(
x
) \

338 ( (
x
) ==  () \

339 ? 
	`__issig«lögf
 (
x
) \

340 :  (
x
) ==  () \

341 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

345 #ifdef 
__USE_MISC


349 
_IEEE_
 = -1,

350 
_SVID_
,

351 
_XOPEN_
,

352 
_POSIX_
,

353 
_ISOC_


354 } 
	t_LIB_VERSION_TYPE
;

359 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

363 #ifde‡
__USE_MISC


369 #ifde‡
__˝lu•lus


370 
__ex˚±i⁄


372 
ex˚±i⁄


375 
ty≥
;

376 *
«me
;

377 
¨g1
;

378 
¨g2
;

379 
ªtvÆ
;

380 
	}
};

382 #ifde‡
__˝lu•lus


383 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

385 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

388 
	#X_TLOSS
 1.41484755040568800000e+16

	)

391 
	#DOMAIN
 1

	)

392 
	#SING
 2

	)

393 
	#OVERFLOW
 3

	)

394 
	#UNDERFLOW
 4

	)

395 
	#TLOSS
 5

	)

396 
	#PLOSS
 6

	)

399 
	#HUGE
 3.40282347e+38F

	)

403 #ifde‡
__USE_XOPEN


405 
	#MAXFLOAT
 3.40282347e+38F

	)

412 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


413 
	#M_E
 2.7182818284590452354

	)

414 
	#M_LOG2E
 1.4426950408889634074

	)

415 
	#M_LOG10E
 0.43429448190325182765

	)

416 
	#M_LN2
 0.69314718055994530942

	)

417 
	#M_LN10
 2.30258509299404568402

	)

418 
	#M_PI
 3.14159265358979323846

	)

419 
	#M_PI_2
 1.57079632679489661923

	)

420 
	#M_PI_4
 0.78539816339744830962

	)

421 
	#M_1_PI
 0.31830988618379067154

	)

422 
	#M_2_PI
 0.63661977236758134308

	)

423 
	#M_2_SQRTPI
 1.12837916709551257390

	)

424 
	#M_SQRT2
 1.41421356237309504880

	)

425 
	#M_SQRT1_2
 0.70710678118654752440

	)

431 #ifde‡
__USE_GNU


432 
	#M_El
 2.718281828459045235360287471352662498L

	)

433 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

434 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

435 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

436 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

437 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

438 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

439 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

440 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

441 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

442 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

443 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

444 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

451 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


452 
	#__NO_MATH_INLINES
 1

	)

455 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

462 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

463 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

464 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

465 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

466 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

467 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

471 #ifde‡
__USE_EXTERN_INLINES


472 
	~<bôs/m©hölöe.h
>

477 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

478 
	~<bôs/m©h-föôe.h
>

481 #ifde‡
__USE_ISOC99


485 #i‚de‡
isgª©î


486 
	#isgª©î
(
x
, 
y
) \

487 (
__exãnsi⁄__
 \

488 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

489 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

493 #i‚de‡
isgª©îequÆ


494 
	#isgª©îequÆ
(
x
, 
y
) \

495 (
__exãnsi⁄__
 \

496 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

497 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

501 #i‚de‡
i¶ess


502 
	#i¶ess
(
x
, 
y
) \

503 (
__exãnsi⁄__
 \

504 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

505 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

509 #i‚de‡
i¶es£quÆ


510 
	#i¶es£quÆ
(
x
, 
y
) \

511 (
__exãnsi⁄__
 \

512 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

513 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

517 #i‚de‡
i¶essgª©î


518 
	#i¶essgª©î
(
x
, 
y
) \

519 (
__exãnsi⁄__
 \

520 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

521 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

525 #i‚de‡
isun‹dîed


526 
	#isun‹dîed
(
u
, 
v
) \

527 (
__exãnsi⁄__
 \

528 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

529 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

534 
	g__END_DECLS


	@/usr/include/mqueue.h

18 #i‚de‡
_MQUEUE_H


19 
	#_MQUEUE_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<f˙é.h
>

24 
	#__√ed_sigevít_t


	)

25 
	~<bôs/sigöfo.h
>

26 
	#__√ed_time•ec


	)

27 
	~<time.h
>

29 
	~<bôs/mqueue.h
>

31 
__BEGIN_DECLS


40 
mqd_t
 
	$mq_›í
 (c⁄° *
__«me
, 
__oÊag
, ...)

41 
__THROW
 
	`__n⁄nuŒ
 ((1));

45 
	$mq_˛o£
 (
mqd_t
 
__mqdes
Ë
__THROW
;

48 
	$mq_gë©å
 (
mqd_t
 
__mqdes
, 
mq_©å
 *
__mq°©
)

49 
__THROW
 
	`__n⁄nuŒ
 ((2));

53 
	$mq_£èâr
 (
mqd_t
 
__mqdes
,

54 c⁄° 
mq_©å
 *
__ª°ri˘
 
__mq°©
,

55 
mq_©å
 *
__ª°ri˘
 
__omq°©
)

56 
__THROW
 
	`__n⁄nuŒ
 ((2));

59 
	$mq_u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

63 
	$mq_nŸify
 (
mqd_t
 
__mqdes
, c⁄° 
sigevít
 *
__nŸifiˇti⁄
)

64 
__THROW
;

68 
ssize_t
 
	$mq_ª˚ive
 (
mqd_t
 
__mqdes
, *
__msg_±r
, 
size_t
 
__msg_Àn
,

69 *
__msg_¥io
Ë
	`__n⁄nuŒ
 ((2));

72 
	$mq_£nd
 (
mqd_t
 
__mqdes
, c⁄° *
__msg_±r
, 
size_t
 
__msg_Àn
,

73 
__msg_¥io
Ë
	`__n⁄nuŒ
 ((2));

75 #ifde‡
__USE_XOPEN2K


78 
ssize_t
 
	$mq_timedª˚ive
 (
mqd_t
 
__mqdes
, *
__ª°ri˘
 
__msg_±r
,

79 
size_t
 
__msg_Àn
,

80 *
__ª°ri˘
 
__msg_¥io
,

81 c⁄° 
time•ec
 *
__ª°ri˘
 
__abs_timeout
)

82 
	`__n⁄nuŒ
 ((2, 5));

86 
	$mq_timed£nd
 (
mqd_t
 
__mqdes
, c⁄° *
__msg_±r
,

87 
size_t
 
__msg_Àn
, 
__msg_¥io
,

88 c⁄° 
time•ec
 *
__abs_timeout
)

89 
	`__n⁄nuŒ
 ((2, 5));

93 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

94 && 
deföed
 
__va_¨g_∑ck_Àn


95 
	~<bôs/mqueue2.h
>

98 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


98 #i‚de‡
__USE_KERNEL_IPV6_DEFS


101 
	mIPPROTO_HOPOPTS
 = 0,

102 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

103 
	mIPPROTO_ROUTING
 = 43,

104 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

105 
	mIPPROTO_FRAGMENT
 = 44,

106 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

107 
	mIPPROTO_ICMPV6
 = 58,

108 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

109 
	mIPPROTO_NONE
 = 59,

110 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

111 
	mIPPROTO_DSTOPTS
 = 60,

112 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

113 
	mIPPROTO_MH
 = 135

114 
	#IPPROTO_MH
 
IPPROTO_MH


	)

119 
uöt16_t
 
	tö_p‹t_t
;

124 
	mIPPORT_ECHO
 = 7,

125 
	mIPPORT_DISCARD
 = 9,

126 
	mIPPORT_SYSTAT
 = 11,

127 
	mIPPORT_DAYTIME
 = 13,

128 
	mIPPORT_NETSTAT
 = 15,

129 
	mIPPORT_FTP
 = 21,

130 
	mIPPORT_TELNET
 = 23,

131 
	mIPPORT_SMTP
 = 25,

132 
	mIPPORT_TIMESERVER
 = 37,

133 
	mIPPORT_NAMESERVER
 = 42,

134 
	mIPPORT_WHOIS
 = 43,

135 
	mIPPORT_MTP
 = 57,

137 
	mIPPORT_TFTP
 = 69,

138 
	mIPPORT_RJE
 = 77,

139 
	mIPPORT_FINGER
 = 79,

140 
	mIPPORT_TTYLINK
 = 87,

141 
	mIPPORT_SUPDUP
 = 95,

144 
	mIPPORT_EXECSERVER
 = 512,

145 
	mIPPORT_LOGINSERVER
 = 513,

146 
	mIPPORT_CMDSERVER
 = 514,

147 
	mIPPORT_EFSSERVER
 = 520,

150 
	mIPPORT_BIFFUDP
 = 512,

151 
	mIPPORT_WHOSERVER
 = 513,

152 
	mIPPORT_ROUTESERVER
 = 520,

155 
	mIPPORT_RESERVED
 = 1024,

158 
	mIPPORT_USERRESERVED
 = 5000

166 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

167 
	#IN_CLASSA_NET
 0xff000000

	)

168 
	#IN_CLASSA_NSHIFT
 24

	)

169 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

170 
	#IN_CLASSA_MAX
 128

	)

172 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

173 
	#IN_CLASSB_NET
 0xffff0000

	)

174 
	#IN_CLASSB_NSHIFT
 16

	)

175 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

176 
	#IN_CLASSB_MAX
 65536

	)

178 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

179 
	#IN_CLASSC_NET
 0xffffff00

	)

180 
	#IN_CLASSC_NSHIFT
 8

	)

181 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

183 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

184 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

186 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

187 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

190 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

192 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

194 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

197 
	#IN_LOOPBACKNET
 127

	)

199 #i‚de‡
INADDR_LOOPBACK


200 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

204 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

205 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

206 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

207 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

209 #i‚de‡
__USE_KERNEL_IPV6_DEFS


211 
	sö6_addr


215 
uöt8_t
 
	m__u6_addr8
[16];

216 #ifde‡
__USE_MISC


217 
uöt16_t
 
	m__u6_addr16
[8];

218 
uöt32_t
 
	m__u6_addr32
[4];

220 } 
	m__ö6_u
;

221 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

222 #ifde‡
__USE_MISC


223 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

224 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

229 c⁄° 
ö6_addr
 
ö6addr_™y
;

230 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

231 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

232 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

234 
	#INET_ADDRSTRLEN
 16

	)

235 
	#INET6_ADDRSTRLEN
 46

	)

239 
	ssockaddr_ö


241 
__SOCKADDR_COMMON
 (
sö_
);

242 
ö_p‹t_t
 
	msö_p‹t
;

243 
ö_addr
 
	msö_addr
;

246 
	msö_zîo
[ (
sockaddr
) -

247 
__SOCKADDR_COMMON_SIZE
 -

248  (
ö_p‹t_t
) -

249  (
ö_addr
)];

252 #i‚de‡
__USE_KERNEL_IPV6_DEFS


254 
	ssockaddr_ö6


256 
__SOCKADDR_COMMON
 (
sö6_
);

257 
ö_p‹t_t
 
	msö6_p‹t
;

258 
uöt32_t
 
	msö6_Êowöfo
;

259 
ö6_addr
 
	msö6_addr
;

260 
uöt32_t
 
	msö6_sc›e_id
;

264 #ifde‡
__USE_MISC


266 
	sù_mªq


269 
ö_addr
 
	mimr_mu…üddr
;

272 
ö_addr
 
	mimr_öãrÁ˚
;

275 
	sù_mªq_sour˚


278 
ö_addr
 
	mimr_mu…üddr
;

281 
ö_addr
 
	mimr_öãrÁ˚
;

284 
ö_addr
 
	mimr_sour˚addr
;

288 #i‚de‡
__USE_KERNEL_IPV6_DEFS


290 
	sùv6_mªq


293 
ö6_addr
 
	mùv6mr_mu…üddr
;

296 
	mùv6mr_öãrÁ˚
;

300 #ifde‡
__USE_MISC


302 
	sgroup_ªq


305 
uöt32_t
 
	mgr_öãrÁ˚
;

308 
sockaddr_°‹age
 
	mgr_group
;

311 
	sgroup_sour˚_ªq


314 
uöt32_t
 
	mg§_öãrÁ˚
;

317 
sockaddr_°‹age
 
	mg§_group
;

320 
sockaddr_°‹age
 
	mg§_sour˚
;

325 
	sù_msfûãr


328 
ö_addr
 
	mimsf_mu…üddr
;

331 
ö_addr
 
	mimsf_öãrÁ˚
;

334 
uöt32_t
 
	mimsf_fmode
;

337 
uöt32_t
 
	mimsf_num§c
;

339 
ö_addr
 
	mimsf_¶i°
[1];

342 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

343 -  (
ö_addr
) \

344 + (
num§c
Ë*  (
ö_addr
))

	)

346 
	sgroup_fûãr


349 
uöt32_t
 
	mgf_öãrÁ˚
;

352 
sockaddr_°‹age
 
	mgf_group
;

355 
uöt32_t
 
	mgf_fmode
;

358 
uöt32_t
 
	mgf_num§c
;

360 
sockaddr_°‹age
 
	mgf_¶i°
[1];

363 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

364 -  (
sockaddr_°‹age
) \

365 + ((
num§c
) \

366 *  (
sockaddr_°‹age
)))

	)

376 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

381 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

382 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

384 
	~<ídün.h
>

387 
	~<bôs/byãsw≠.h
>

389 #ifde‡
__OPTIMIZE__


393 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


396 
	#¡ohl
(
x
Ë(x)

	)

397 
	#¡ohs
(
x
Ë(x)

	)

398 
	#ht⁄l
(
x
Ë(x)

	)

399 
	#ht⁄s
(
x
Ë(x)

	)

401 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


402 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

404 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

405 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

410 #ifde‡
__GNUC__


411 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

412 (
__exãnsi⁄__
 \

413 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

414 
__a
->
s6_addr32
[0] == 0 \

415 && 
__a
->
s6_addr32
[1] == 0 \

416 && 
__a
->
s6_addr32
[2] == 0 \

417 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

419 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

420 (
__exãnsi⁄__
 \

421 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

422 
__a
->
s6_addr32
[0] == 0 \

423 && 
__a
->
s6_addr32
[1] == 0 \

424 && 
__a
->
s6_addr32
[2] == 0 \

425 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

427 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

428 (
__exãnsi⁄__
 \

429 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

430 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

432 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

433 (
__exãnsi⁄__
 \

434 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

435 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

437 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

438 (
__exãnsi⁄__
 \

439 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

440 
__a
->
s6_addr32
[0] == 0 \

441 && 
__a
->
s6_addr32
[1] == 0 \

442 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

444 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

445 (
__exãnsi⁄__
 \

446 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

447 
__a
->
s6_addr32
[0] == 0 \

448 && 
__a
->
s6_addr32
[1] == 0 \

449 && 
__a
->
s6_addr32
[2] == 0 \

450 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

452 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

453 (
__exãnsi⁄__
 \

454 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

455 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

456 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

457 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

458 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

459 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

461 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

462 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

464 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

465 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

467 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

468 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

473 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

474 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

475 =
	`ht⁄l
 (0x„800000))

	)

477 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

478 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

479 =
	`ht⁄l
 (0x„c00000))

	)

481 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

482 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

486 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

487 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

488 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

489 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

490 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

492 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

493 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

499 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

501 #ifde‡
__USE_MISC


503 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

506 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

507 
__THROW
;

511 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

512 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

513 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

515 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

516 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

517 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

519 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

520 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

521 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

523 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

524 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

525 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

527 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

528 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

529 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

532 #ifde‡
__USE_GNU


533 
cmsghdr
;

535 #i‚de‡
__USE_KERNEL_IPV6_DEFS


537 
	sö6_pktöfo


539 
ö6_addr
 
ùi6_addr
;

540 
ùi6_ifödex
;

544 
	sù6_mtuöfo


546 
sockaddr_ö6
 
ù6m_addr
;

547 
uöt32_t
 
ù6m_mtu
;

552 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

554 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

555 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

557 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

558 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

559 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

560 
__mu…x
, 
__∂usy
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

565 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

566 
uöt8_t
 **
__çåp
, 
__ty≥
)

567 
__THROW
 
__©åibuã_dïªˇãd__
;

571 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

572 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

573 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

574 **
__d©abuÂ
Ë
__THROW
;

575 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

576 
__THROW
;

577 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

578 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

579 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

583 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

584 **
__d©abuÂ
Ë
__THROW
;

585 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

586 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

590 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

591 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

592 
__£gmíts
Ë
__THROW
;

593 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

594 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

595 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

596 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

597 
__THROW
;

603 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

604 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

605 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

606 
__THROW
;

609 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

610 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

611 
uöt32_t
 
__num§c
,

612 c⁄° 
ö_addr
 *
__¶i°
)

613 
__THROW
;

617 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

618 c⁄° 
sockaddr
 *
__group
,

619 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

620 
uöt32_t
 *
__num§c
,

621 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

624 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

625 c⁄° 
sockaddr
 *
__group
,

626 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

627 
uöt32_t
 
__num§c
,

628 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

631 
__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


85 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


86 
	#PTHREAD_MUTEX_INITIALIZER
 \

87 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

88 #ifde‡
__USE_GNU


89 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

90 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

91 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

92 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

93 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

94 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

113 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


116 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

119 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


125 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


126 #i‡
__WORDSIZE
 == 64

127 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

132 
	#PTHREAD_RWLOCK_INITIALIZER
 \

133 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

134 #ifde‡
__USE_GNU


135 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


136 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, \

138 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

140 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


141 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

142 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

143 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

145 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

146 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

147 0 } }

	)

157 
	mPTHREAD_INHERIT_SCHED
,

158 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

159 
	mPTHREAD_EXPLICIT_SCHED


160 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

167 
	mPTHREAD_SCOPE_SYSTEM
,

168 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

169 
	mPTHREAD_SCOPE_PROCESS


170 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

177 
	mPTHREAD_PROCESS_PRIVATE
,

178 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

179 
	mPTHREAD_PROCESS_SHARED


180 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

186 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

190 
	s_±hªad_˛ónup_buf„r


192 (*
	m__routöe
) (*);

193 *
	m__¨g
;

194 
	m__ˇn˚…y≥
;

195 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

201 
	mPTHREAD_CANCEL_ENABLE
,

202 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

203 
	mPTHREAD_CANCEL_DISABLE


204 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

208 
	mPTHREAD_CANCEL_DEFERRED
,

209 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

210 
	mPTHREAD_CANCEL_ASYNCHRONOUS


211 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

213 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

217 
	#PTHREAD_ONCE_INIT
 0

	)

220 #ifde‡
__USE_XOPEN2K


224 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

228 
__BEGIN_DECLS


233 
	$±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

234 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

235 *(*
__°¨t_routöe
) (*),

236 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

242 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

250 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

252 #ifde‡
__USE_GNU


255 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

263 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

264 c⁄° 
time•ec
 *
__ab°ime
);

271 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

275 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

278 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

279 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

287 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

291 
__THROW
 
	`__n⁄nuŒ
 ((1));

294 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

295 *
__dëach°©e
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

299 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

300 
__dëach°©e
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 
size_t
 *
__gu¨dsize
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

311 
size_t
 
__gu¨dsize
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

317 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

322 c⁄° 
sched_∑øm
 *
__ª°ri˘


323 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

326 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


327 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

331 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

332 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


336 
__©å
, *
__ª°ri˘
 
__öhîô
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

340 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

341 
__öhîô
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

347 *
__ª°ri˘
 
__sc›e
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


356 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

363 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

364 *
__°ackaddr
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

368 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


369 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

370 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

376 
size_t
 
__°acksize
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1));

379 #ifde‡
__USE_XOPEN2K


381 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

382 **
__ª°ri˘
 
__°ackaddr
,

383 
size_t
 *
__ª°ri˘
 
__°acksize
)

384 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

389 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

390 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 #ifde‡
__USE_GNU


396 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

397 
size_t
 
__˝u£tsize
,

398 c⁄° 
˝u_£t_t
 *
__˝u£t
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

403 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

404 
size_t
 
__˝u£tsize
,

405 
˝u_£t_t
 *
__˝u£t
)

406 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

409 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1));

414 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

415 
__THROW
 
	`__n⁄nuŒ
 ((1));

420 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

430 c⁄° 
sched_∑øm
 *
__∑øm
)

431 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

435 *
__ª°ri˘
 
__pﬁicy
,

436 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

441 
__THROW
;

444 #ifde‡
__USE_GNU


446 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

447 
size_t
 
__buÊí
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

452 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 #ifde‡
__USE_UNIX98


458 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

461 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

464 #ifde‡
__USE_GNU


469 
	$±hªad_yõld
 (Ë
__THROW
;

474 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

475 c⁄° 
˝u_£t_t
 *
__˝u£t
)

476 
__THROW
 
	`__n⁄nuŒ
 ((3));

479 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

480 
˝u_£t_t
 *
__˝u£t
)

481 
__THROW
 
	`__n⁄nuŒ
 ((3));

494 
	$±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

495 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

506 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

510 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

513 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

518 
	`±hªad_ã°ˇn˚l
 ();

527 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

528 
__mask_was_ßved
;

529 } 
__ˇn˚l_jmp_buf
[1];

530 *
__∑d
[4];

531 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

534 #i‚de‡
__˛ónup_f˘_©åibuã


535 
	#__˛ónup_f˘_©åibuã


	)

540 
	s__±hªad_˛ónup_‰ame


542 (*
__ˇn˚l_routöe
) (*);

543 *
__ˇn˚l_¨g
;

544 
__do_ô
;

545 
__ˇn˚l_ty≥
;

548 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


549 #ifde‡
__˝lu•lus


551 ˛as†
	c__±hªad_˛ónup_˛ass


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

558 
public
:

559 
	$__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

560 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

561 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

562 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

563 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

564 &
__ˇn˚l_ty≥
); 
	}
}

565 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

575 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

577 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

581 
	#±hªad_˛ónup_p›
(
execuã
) \

582 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

583 } 0)

	)

585 #ifde‡
__USE_GNU


589 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

591 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

592 
__˛‰ame
.
	`__de„r
 ()

	)

597 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

598 
__˛‰ame
.
	`__ª°‹e
 (); \

599 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

600 } 0)

	)

607 
__exã∫_ölöe
 

608 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

610 i‡(
__‰ame
->
__do_ô
)

611 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

612 
	}
}

621 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

623 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

624 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

625 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

626 .
__do_ô
 = 1 };

	)

630 
	#±hªad_˛ónup_p›
(
execuã
) \

631 
__˛‰ame
.
__do_ô
 = (
execuã
); \

632 } 0)

	)

634 #ifde‡
__USE_GNU


638 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

640 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

641 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

642 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

643 .
__do_ô
 = 1 }; \

644 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

645 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

650 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

651 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

652 
__˛‰ame
.
__do_ô
 = (
execuã
); \

653 } 0)

	)

664 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

666 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

667 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

668 *
__ˇn˚l_¨g
 = (
¨g
); \

669 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

670 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

671 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

673 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

674 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

678 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

679 dÿ{

	)

680 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

681 
__˛ónup_f˘_©åibuã
;

685 
	#±hªad_˛ónup_p›
(
execuã
) \

688 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

689 i‡(
execuã
) \

690 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

691 } 0)

	)

692 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

693 
__˛ónup_f˘_©åibuã
;

695 #ifde‡
__USE_GNU


699 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

701 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

702 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

703 *
__ˇn˚l_¨g
 = (
¨g
); \

704 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

705 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

706 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

708 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

709 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

713 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

714 dÿ{

	)

715 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

716 
__˛ónup_f˘_©åibuã
;

721 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

724 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

725 i‡(
execuã
) \

726 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

727 
	}
} 0)

	)

728 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

729 
__˛ónup_f˘_©åibuã
;

733 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

734 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

735 #i‚de‡
SHARED


736 
	`__©åibuã__
 ((
__wók__
))

742 
__jmp_buf_èg
;

743 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

749 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

750 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

751 
__THROW
 
	`__n⁄nuŒ
 ((1));

754 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

755 
__THROW
 
	`__n⁄nuŒ
 ((1));

758 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

759 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

763 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

765 #ifde‡
__USE_XOPEN2K


767 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

768 c⁄° 
time•ec
 *
__ª°ri˘


769 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

773 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

778 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

779 
__ª°ri˘
 
__muãx
,

780 *
__ª°ri˘
 
__¥io˚ûög
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

785 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

786 
__¥io˚ûög
,

787 *
__ª°ri˘
 
__ﬁd_˚ûög
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

791 #ifde‡
__USE_XOPEN2K8


793 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1));

795 #ifde‡
__USE_GNU


796 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

797 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1));

810 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1));

814 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

815 
__ª°ri˘
 
__©å
,

816 *
__ª°ri˘
 
__psh¨ed
)

817 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__psh¨ed
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

824 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


826 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


827 
__©å
, *
__ª°ri˘
 
__köd
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

833 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

839 
__ª°ri˘
 
__©å
,

840 *
__ª°ri˘
 
__¥Ÿocﬁ
)

841 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

845 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

846 
__¥Ÿocﬁ
)

847 
__THROW
 
	`__n⁄nuŒ
 ((1));

850 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

851 
__ª°ri˘
 
__©å
,

852 *
__ª°ri˘
 
__¥io˚ûög
)

853 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥io˚ûög
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

860 #ifde‡
__USE_XOPEN2K


862 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

863 *
__robu°√ss
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

865 #ifde‡
__USE_GNU


866 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

867 *
__robu°√ss
)

868 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

872 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

873 
__robu°√ss
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

875 #ifde‡
__USE_GNU


876 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

877 
__robu°√ss
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


888 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

889 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


890 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

893 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

894 
__THROW
 
	`__n⁄nuŒ
 ((1));

897 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

898 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

901 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

902 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

904 #ifde‡
__USE_XOPEN2K


906 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

907 c⁄° 
time•ec
 *
__ª°ri˘


908 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

912 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

916 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

917 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

919 #ifde‡
__USE_XOPEN2K


921 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

922 c⁄° 
time•ec
 *
__ª°ri˘


923 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

927 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

934 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

938 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

939 
__THROW
 
	`__n⁄nuŒ
 ((1));

942 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

943 
__ª°ri˘
 
__©å
,

944 *
__ª°ri˘
 
__psh¨ed
)

945 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

948 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

949 
__psh¨ed
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__¥ef
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

969 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

970 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

974 
__THROW
 
	`__n⁄nuŒ
 ((1));

977 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

978 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

981 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

982 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

989 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

990 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

991 
	`__n⁄nuŒ
 ((1, 2));

1000 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1002 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1003 
	`__n⁄nuŒ
 ((1, 2, 3));

1008 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1));

1012 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1013 
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1017 
__ª°ri˘
 
__©å
,

1018 *
__ª°ri˘
 
__psh¨ed
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1022 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1023 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1025 #ifde‡
__USE_XOPEN2K


1027 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__˛ockid_t
 
__˛ock_id
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 #ifde‡
__USE_XOPEN2K


1044 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1048 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1049 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1053 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1056 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1057 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1060 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1061 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1068 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1069 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1070 
__©å
, 
__cou¡
)

1071 
__THROW
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1079 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1083 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1084 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1088 
__THROW
 
	`__n⁄nuŒ
 ((1));

1091 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1092 
__ª°ri˘
 
__©å
,

1093 *
__ª°ri˘
 
__psh¨ed
)

1094 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1097 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1098 
__psh¨ed
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1111 
	$±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1112 (*
__de°r_fun˘i⁄
) (*))

1113 
__THROW
 
	`__n⁄nuŒ
 ((1));

1116 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1119 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1122 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1123 c⁄° *
__poöãr
Ë
__THROW
 ;

1126 #ifde‡
__USE_XOPEN2K


1128 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1129 
__˛ockid_t
 *
__˛ock_id
)

1130 
__THROW
 
	`__n⁄nuŒ
 ((2));

1145 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1146 (*
__∑ª¡
) (),

1147 (*
__chûd
Ë()Ë
__THROW
;

1150 #ifde‡
__USE_EXTERN_INLINES


1152 
__exã∫_ölöe
 

1153 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1155  
__thªad1
 =
__thªad2
;

1156 
	}
}

1159 
	g__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_MISC


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_MISC


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #ifde‡
__USE_XOPEN2K8


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

166 #ifde‡
__USE_XOPEN


167 #ifde‡
__GNUC__


168 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

170 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

172 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

177 #ifde‡
__USE_MISC


184 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

187 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

190 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

193 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

197 #ifde‡
__USE_MISC


198 
	#NSIG
 
_NSIG


	)

201 #ifde‡
__USE_GNU


202 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

206 #ifde‡
__USE_MISC


207 
__sigh™dÀr_t
 
	tsig_t
;

210 #ifde‡
__USE_POSIX


213 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

226 
__THROW
 
	`__n⁄nuŒ
 ((1));

228 #ifde‡
__USE_GNU


230 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

233 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

234 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

237 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

238 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

243 
	~<bôs/siga˘i⁄.h
>

246 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

247 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

254 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

257 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

258 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

261 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

268 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

269 
	`__n⁄nuŒ
 ((1, 2));

271 #ifde‡
__USE_POSIX199309


276 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

277 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

284 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

285 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

286 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

287 
	`__n⁄nuŒ
 ((1));

291 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

292 
__THROW
;

297 #ifde‡
__USE_MISC


301 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

302 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

306 
	~<bôs/sigc⁄ãxt.h
>

309 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

314 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


315 
	#__√ed_size_t


	)

316 
	~<°ddef.h
>

321 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

323 
	~<bôs/sig°ack.h
>

324 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


326 
	~<sys/uc⁄ãxt.h
>

332 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

333 
__THROW
 
__©åibuã_dïªˇãd__
;

337 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

338 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

342 #ifde‡
__USE_XOPEN_EXTENDED


346 
	$sighﬁd
 (
__sig
Ë
__THROW
;

349 
	$sigªl£
 (
__sig
Ë
__THROW
;

352 
	$sigign‹e
 (
__sig
Ë
__THROW
;

355 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

358 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


361 
	~<bôs/±hªadty≥s.h
>

362 
	~<bôs/sigthªad.h
>

369 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

371 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

375 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #i‡
deföed
 
__USE_MISC
 \

785 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

788 
	$ây¶Ÿ
 (Ë
__THROW
;

793 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

796 #ifde‡
__USE_ATFILE


799 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

800 c⁄° *
__to
, 
__Êags
)

801 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

804 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


806 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

813 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

817 #ifde‡
__USE_ATFILE


819 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

820 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

823 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

824 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

825 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

829 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

831 #ifde‡
__USE_ATFILE


833 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2));

838 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

842 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

845 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

852 *
	`gëlogö
 ();

853 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


860 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

863 #ifdef 
__USE_MISC


865 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 #ifdef 
__USE_POSIX2


873 
	#__√ed_gë›t


	)

874 
	~<gë›t.h
>

878 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


882 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #i‡
deföed
 
__USE_MISC


889 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

894 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

900 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	$vh™gup
 (Ë
__THROW
;

912 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

920 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

921 
size_t
 
__off£t
, 
__sˇÀ
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

932 *
	$gëu£rshñl
 (Ë
__THROW
;

933 
	$ídu£rshñl
 (Ë
__THROW
;

934 
	$£tu£rshñl
 (Ë
__THROW
;

940 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

944 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

947 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

959 
	`fsync
 (
__fd
);

962 #ifde‡
__USE_GNU


965 
	$syncfs
 (
__fd
Ë
__THROW
;

969 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


972 
	`gëho°id
 ();

975 
	$sync
 (Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


981 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

986 
	$gëdèbÀsize
 (Ë
__THROW
;

992 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


995 #i‚de‡
__USE_FILE_OFFSET64


996 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 #ifde‡
__REDIRECT_NTH


1000 
	`__REDIRECT_NTH
 (
åunˇã
,

1001 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1002 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1004 
	#åunˇã
 
åunˇã64


	)

1007 #ifde‡
__USE_LARGEFILE64


1008 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1014 #i‡
deföed
 
__USE_POSIX199309
 \

1015 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1018 #i‚de‡
__USE_FILE_OFFSET64


1019 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1023 
·runˇã64
Ë
__wur
;

1025 
	#·runˇã
 
·runˇã64


	)

1028 #ifde‡
__USE_LARGEFILE64


1029 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1035 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1036 || 
deföed
 
__USE_MISC


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1129 
__THROW
 
	`__n⁄nuŒ
 ((1));

1136 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1137 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1150 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1151 
	~<bôs/uni°d.h
>

1154 
__END_DECLS


	@msgQ.h

1 #i‚de‡
_CNVC_MSGQ_H_


2 
	#_CNVC_MSGQ_H_


	)

8 
	~<f˙é.h
>

9 
	~<sys/°©.h
>

10 
	~<mqueue.h
>

11 
	~<°döt.h
>

12 
	~<î∫o.h
>

18 
	#KEY_RECV_J2735
 1716

	)

19 
	#KEY_SEND_J2735
 1717

	)

20 
	#KEY_SEND_PAR
 1718

	)

21 
	#MSGMAX
 4096

	)

23 
	emsgTy≥
 {

24 
	mmsgq_msgty≥_mesßge‰ame
,

25 }
	tMSGQ_MSGTYPE
;

27 
	smsgq_msg


29 
uöt32_t
 
	mmsg_Àn
;

30 
uöt8_t
 
	mmsg
[
MSGMAX
];

31 }
	tMSGQ_MSG
;

33 
	smsgQ_ñem_‰ame


35 
	mmsgty≥
;

36 
uöt32_t
 
	mrxC¡
;

37 
MSGQ_MSG
 
	mmsg
;

41 
mq_©å
 
	g˙_MQ_©å
 = {
O_NONBLOCK
, 10, (
msgQ_ñem_‰ame
), 0};

45 
öôMQ
();

46 
ªÀa£MQ
();

47 
ªcvMQ
(*
pkt
);

48 
£ndMQ
(
uöt8_t
 *
pPkt
, 
uöt32_t
 
Àn
);

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 #ifde‡
__USE_XOPEN2K


31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
48
1691
/media/sf_Source/200104_Application_source/PAR/src/PAR.c
/media/sf_Source/200104_Application_source/PAR/src/PAR.h
/media/sf_Source/200104_Application_source/PAR/src/PAR_RX.c
/media/sf_Source/200104_Application_source/PAR/src/PAR_RX_bk_200611.c
/media/sf_Source/200104_Application_source/PAR/src/PAR_RX_bk_200619.c
/media/sf_Source/200104_Application_source/PAR/src/PAR_RX_bk_200619_2.c
/media/sf_Source/200104_Application_source/PAR/src/PAR_RX_bk_200721.c
/media/sf_Source/200104_Application_source/PAR/src/PAR_RX_bk_200727.c
/media/sf_Source/200104_Application_source/PAR/src/PAR_TX.c
/media/sf_Source/200104_Application_source/PAR/src/gps.h
/media/sf_Source/200104_Application_source/PAR/src/msgQ.c
/media/sf_Source/200104_Application_source/PAR/src/msgQ.h
/media/sf_Source/200104_Application_source/PAR/src/options.c
/media/sf_Source/200104_Application_source/PAR/src/shm.c
/media/sf_Source/200104_Application_source/PAR/src/shm.h
/media/sf_Source/200104_Application_source/PAR/src/timer.c
/usr/include/arpa/inet.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/mqueue.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/syslog.h
/usr/include/time.h
/usr/include/unistd.h
msgQ.h
/usr/include/alloca.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/sched.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
